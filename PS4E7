{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4dd3ac55",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-07-11T05:45:30.764306Z",
     "iopub.status.busy": "2024-07-11T05:45:30.763875Z",
     "iopub.status.idle": "2024-07-11T05:45:33.806988Z",
     "shell.execute_reply": "2024-07-11T05:45:33.805689Z"
    },
    "papermill": {
     "duration": 3.063453,
     "end_time": "2024-07-11T05:45:33.810321",
     "exception": false,
     "start_time": "2024-07-11T05:45:30.746868",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from tqdm import tqdm\n",
    "import progressbar\n",
    "import math\n",
    "import warnings\n",
    "import itertools\n",
    "\n",
    "from sklearn.model_selection import train_test_split,GridSearchCV\n",
    "\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import classification_report\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc548654",
   "metadata": {
    "papermill": {
     "duration": 0.013363,
     "end_time": "2024-07-11T05:45:33.837645",
     "exception": false,
     "start_time": "2024-07-11T05:45:33.824282",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Getting started"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c1a4b098",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:45:33.866610Z",
     "iopub.status.busy": "2024-07-11T05:45:33.865939Z",
     "iopub.status.idle": "2024-07-11T05:45:59.762036Z",
     "shell.execute_reply": "2024-07-11T05:45:59.760723Z"
    },
    "papermill": {
     "duration": 25.913943,
     "end_time": "2024-07-11T05:45:59.765079",
     "exception": false,
     "start_time": "2024-07-11T05:45:33.851136",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('/kaggle/input/playground-series-s4e7/train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0815d4eb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:45:59.794194Z",
     "iopub.status.busy": "2024-07-11T05:45:59.793697Z",
     "iopub.status.idle": "2024-07-11T05:45:59.834117Z",
     "shell.execute_reply": "2024-07-11T05:45:59.832880Z"
    },
    "papermill": {
     "duration": 0.057773,
     "end_time": "2024-07-11T05:45:59.836713",
     "exception": false,
     "start_time": "2024-07-11T05:45:59.778940",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Driving_License</th>\n",
       "      <th>Region_Code</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Vintage</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>65101.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>187</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&gt; 2 Years</td>\n",
       "      <td>Yes</td>\n",
       "      <td>58911.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>288</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>38043.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>254</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>76</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>15.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>31951.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>294</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504793</th>\n",
       "      <td>11504793</td>\n",
       "      <td>Male</td>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>27412.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>218</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504794</th>\n",
       "      <td>11504794</td>\n",
       "      <td>Female</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "      <td>36.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>29509.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>115</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504795</th>\n",
       "      <td>11504795</td>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>189</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504796</th>\n",
       "      <td>11504796</td>\n",
       "      <td>Female</td>\n",
       "      <td>51</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>48443.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>274</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504797</th>\n",
       "      <td>11504797</td>\n",
       "      <td>Male</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>32855.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>189</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11504798 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id  Gender  Age  Driving_License  Region_Code  \\\n",
       "0                0    Male   21                1         35.0   \n",
       "1                1    Male   43                1         28.0   \n",
       "2                2  Female   25                1         14.0   \n",
       "3                3  Female   35                1          1.0   \n",
       "4                4  Female   36                1         15.0   \n",
       "...            ...     ...  ...              ...          ...   \n",
       "11504793  11504793    Male   48                1          6.0   \n",
       "11504794  11504794  Female   26                1         36.0   \n",
       "11504795  11504795  Female   29                1         32.0   \n",
       "11504796  11504796  Female   51                1         28.0   \n",
       "11504797  11504797    Male   25                1         28.0   \n",
       "\n",
       "          Previously_Insured Vehicle_Age Vehicle_Damage  Annual_Premium  \\\n",
       "0                          0    1-2 Year            Yes         65101.0   \n",
       "1                          0   > 2 Years            Yes         58911.0   \n",
       "2                          1    < 1 Year             No         38043.0   \n",
       "3                          0    1-2 Year            Yes          2630.0   \n",
       "4                          1    1-2 Year             No         31951.0   \n",
       "...                      ...         ...            ...             ...   \n",
       "11504793                   0    1-2 Year            Yes         27412.0   \n",
       "11504794                   0    < 1 Year            Yes         29509.0   \n",
       "11504795                   1    < 1 Year             No          2630.0   \n",
       "11504796                   0    1-2 Year            Yes         48443.0   \n",
       "11504797                   1    < 1 Year             No         32855.0   \n",
       "\n",
       "          Policy_Sales_Channel  Vintage  Response  \n",
       "0                        124.0      187         0  \n",
       "1                         26.0      288         1  \n",
       "2                        152.0      254         0  \n",
       "3                        156.0       76         0  \n",
       "4                        152.0      294         0  \n",
       "...                        ...      ...       ...  \n",
       "11504793                  26.0      218         0  \n",
       "11504794                 152.0      115         1  \n",
       "11504795                 152.0      189         0  \n",
       "11504796                  26.0      274         1  \n",
       "11504797                 152.0      189         0  \n",
       "\n",
       "[11504798 rows x 12 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0f4049e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:45:59.867694Z",
     "iopub.status.busy": "2024-07-11T05:45:59.867226Z",
     "iopub.status.idle": "2024-07-11T05:45:59.891562Z",
     "shell.execute_reply": "2024-07-11T05:45:59.889845Z"
    },
    "papermill": {
     "duration": 0.042402,
     "end_time": "2024-07-11T05:45:59.893994",
     "exception": false,
     "start_time": "2024-07-11T05:45:59.851592",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 11504798 entries, 0 to 11504797\n",
      "Data columns (total 12 columns):\n",
      " #   Column                Dtype  \n",
      "---  ------                -----  \n",
      " 0   id                    int64  \n",
      " 1   Gender                object \n",
      " 2   Age                   int64  \n",
      " 3   Driving_License       int64  \n",
      " 4   Region_Code           float64\n",
      " 5   Previously_Insured    int64  \n",
      " 6   Vehicle_Age           object \n",
      " 7   Vehicle_Damage        object \n",
      " 8   Annual_Premium        float64\n",
      " 9   Policy_Sales_Channel  float64\n",
      " 10  Vintage               int64  \n",
      " 11  Response              int64  \n",
      "dtypes: float64(3), int64(6), object(3)\n",
      "memory usage: 1.0+ GB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "814b4412",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:45:59.924464Z",
     "iopub.status.busy": "2024-07-11T05:45:59.923958Z",
     "iopub.status.idle": "2024-07-11T05:46:03.937035Z",
     "shell.execute_reply": "2024-07-11T05:46:03.935673Z"
    },
    "papermill": {
     "duration": 4.031419,
     "end_time": "2024-07-11T05:46:03.939651",
     "exception": false,
     "start_time": "2024-07-11T05:45:59.908232",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Age</th>\n",
       "      <th>Driving_License</th>\n",
       "      <th>Region_Code</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Vintage</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5.752398e+06</td>\n",
       "      <td>3.838356e+01</td>\n",
       "      <td>9.980220e-01</td>\n",
       "      <td>2.641869e+01</td>\n",
       "      <td>4.629966e-01</td>\n",
       "      <td>3.046137e+04</td>\n",
       "      <td>1.124254e+02</td>\n",
       "      <td>1.638977e+02</td>\n",
       "      <td>1.229973e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3.321149e+06</td>\n",
       "      <td>1.499346e+01</td>\n",
       "      <td>4.443120e-02</td>\n",
       "      <td>1.299159e+01</td>\n",
       "      <td>4.986289e-01</td>\n",
       "      <td>1.645475e+04</td>\n",
       "      <td>5.403571e+01</td>\n",
       "      <td>7.997953e+01</td>\n",
       "      <td>3.284341e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>2.000000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>2.630000e+03</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.876199e+06</td>\n",
       "      <td>2.400000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.500000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>2.527700e+04</td>\n",
       "      <td>2.900000e+01</td>\n",
       "      <td>9.900000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5.752398e+06</td>\n",
       "      <td>3.600000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>2.800000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>3.182400e+04</td>\n",
       "      <td>1.510000e+02</td>\n",
       "      <td>1.660000e+02</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>8.628598e+06</td>\n",
       "      <td>4.900000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>3.500000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>3.945100e+04</td>\n",
       "      <td>1.520000e+02</td>\n",
       "      <td>2.320000e+02</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>8.500000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.200000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.401650e+05</td>\n",
       "      <td>1.630000e+02</td>\n",
       "      <td>2.990000e+02</td>\n",
       "      <td>1.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 id           Age  Driving_License   Region_Code  \\\n",
       "count  1.150480e+07  1.150480e+07     1.150480e+07  1.150480e+07   \n",
       "mean   5.752398e+06  3.838356e+01     9.980220e-01  2.641869e+01   \n",
       "std    3.321149e+06  1.499346e+01     4.443120e-02  1.299159e+01   \n",
       "min    0.000000e+00  2.000000e+01     0.000000e+00  0.000000e+00   \n",
       "25%    2.876199e+06  2.400000e+01     1.000000e+00  1.500000e+01   \n",
       "50%    5.752398e+06  3.600000e+01     1.000000e+00  2.800000e+01   \n",
       "75%    8.628598e+06  4.900000e+01     1.000000e+00  3.500000e+01   \n",
       "max    1.150480e+07  8.500000e+01     1.000000e+00  5.200000e+01   \n",
       "\n",
       "       Previously_Insured  Annual_Premium  Policy_Sales_Channel       Vintage  \\\n",
       "count        1.150480e+07    1.150480e+07          1.150480e+07  1.150480e+07   \n",
       "mean         4.629966e-01    3.046137e+04          1.124254e+02  1.638977e+02   \n",
       "std          4.986289e-01    1.645475e+04          5.403571e+01  7.997953e+01   \n",
       "min          0.000000e+00    2.630000e+03          1.000000e+00  1.000000e+01   \n",
       "25%          0.000000e+00    2.527700e+04          2.900000e+01  9.900000e+01   \n",
       "50%          0.000000e+00    3.182400e+04          1.510000e+02  1.660000e+02   \n",
       "75%          1.000000e+00    3.945100e+04          1.520000e+02  2.320000e+02   \n",
       "max          1.000000e+00    5.401650e+05          1.630000e+02  2.990000e+02   \n",
       "\n",
       "           Response  \n",
       "count  1.150480e+07  \n",
       "mean   1.229973e-01  \n",
       "std    3.284341e-01  \n",
       "min    0.000000e+00  \n",
       "25%    0.000000e+00  \n",
       "50%    0.000000e+00  \n",
       "75%    0.000000e+00  \n",
       "max    1.000000e+00  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c0bdc42b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:03.970685Z",
     "iopub.status.busy": "2024-07-11T05:46:03.970202Z",
     "iopub.status.idle": "2024-07-11T05:46:07.763704Z",
     "shell.execute_reply": "2024-07-11T05:46:07.762439Z"
    },
    "papermill": {
     "duration": 3.812541,
     "end_time": "2024-07-11T05:46:07.766597",
     "exception": false,
     "start_time": "2024-07-11T05:46:03.954056",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                      0\n",
       "Gender                  0\n",
       "Age                     0\n",
       "Driving_License         0\n",
       "Region_Code             0\n",
       "Previously_Insured      0\n",
       "Vehicle_Age             0\n",
       "Vehicle_Damage          0\n",
       "Annual_Premium          0\n",
       "Policy_Sales_Channel    0\n",
       "Vintage                 0\n",
       "Response                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7155f6e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:07.799591Z",
     "iopub.status.busy": "2024-07-11T05:46:07.799098Z",
     "iopub.status.idle": "2024-07-11T05:46:27.272506Z",
     "shell.execute_reply": "2024-07-11T05:46:27.271195Z"
    },
    "papermill": {
     "duration": 19.493566,
     "end_time": "2024-07-11T05:46:27.275272",
     "exception": false,
     "start_time": "2024-07-11T05:46:07.781706",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(11504798, 12)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()\n",
    "df.drop_duplicates(inplace=True)\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "5ff161b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:27.310619Z",
     "iopub.status.busy": "2024-07-11T05:46:27.309044Z",
     "iopub.status.idle": "2024-07-11T05:46:37.909704Z",
     "shell.execute_reply": "2024-07-11T05:46:37.908356Z"
    },
    "papermill": {
     "duration": 10.620883,
     "end_time": "2024-07-11T05:46:37.913202",
     "exception": false,
     "start_time": "2024-07-11T05:46:27.292319",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.replace([np.inf, -np.inf], np.nan, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "32c1ca91",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:37.945511Z",
     "iopub.status.busy": "2024-07-11T05:46:37.944995Z",
     "iopub.status.idle": "2024-07-11T05:46:37.970706Z",
     "shell.execute_reply": "2024-07-11T05:46:37.969623Z"
    },
    "papermill": {
     "duration": 0.044772,
     "end_time": "2024-07-11T05:46:37.973337",
     "exception": false,
     "start_time": "2024-07-11T05:46:37.928565",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Driving_License</th>\n",
       "      <th>Region_Code</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Vintage</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>65101.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>187</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&gt; 2 Years</td>\n",
       "      <td>Yes</td>\n",
       "      <td>58911.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>288</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>38043.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>254</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>76</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>15.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>31951.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>294</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504793</th>\n",
       "      <td>11504793</td>\n",
       "      <td>Male</td>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>27412.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>218</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504794</th>\n",
       "      <td>11504794</td>\n",
       "      <td>Female</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "      <td>36.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>29509.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>115</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504795</th>\n",
       "      <td>11504795</td>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>189</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504796</th>\n",
       "      <td>11504796</td>\n",
       "      <td>Female</td>\n",
       "      <td>51</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>48443.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>274</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504797</th>\n",
       "      <td>11504797</td>\n",
       "      <td>Male</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>32855.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>189</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11504798 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id  Gender  Age  Driving_License  Region_Code  \\\n",
       "0                0    Male   21                1         35.0   \n",
       "1                1    Male   43                1         28.0   \n",
       "2                2  Female   25                1         14.0   \n",
       "3                3  Female   35                1          1.0   \n",
       "4                4  Female   36                1         15.0   \n",
       "...            ...     ...  ...              ...          ...   \n",
       "11504793  11504793    Male   48                1          6.0   \n",
       "11504794  11504794  Female   26                1         36.0   \n",
       "11504795  11504795  Female   29                1         32.0   \n",
       "11504796  11504796  Female   51                1         28.0   \n",
       "11504797  11504797    Male   25                1         28.0   \n",
       "\n",
       "          Previously_Insured Vehicle_Age Vehicle_Damage  Annual_Premium  \\\n",
       "0                          0    1-2 Year            Yes         65101.0   \n",
       "1                          0   > 2 Years            Yes         58911.0   \n",
       "2                          1    < 1 Year             No         38043.0   \n",
       "3                          0    1-2 Year            Yes          2630.0   \n",
       "4                          1    1-2 Year             No         31951.0   \n",
       "...                      ...         ...            ...             ...   \n",
       "11504793                   0    1-2 Year            Yes         27412.0   \n",
       "11504794                   0    < 1 Year            Yes         29509.0   \n",
       "11504795                   1    < 1 Year             No          2630.0   \n",
       "11504796                   0    1-2 Year            Yes         48443.0   \n",
       "11504797                   1    < 1 Year             No         32855.0   \n",
       "\n",
       "          Policy_Sales_Channel  Vintage  Response  \n",
       "0                        124.0      187         0  \n",
       "1                         26.0      288         1  \n",
       "2                        152.0      254         0  \n",
       "3                        156.0       76         0  \n",
       "4                        152.0      294         0  \n",
       "...                        ...      ...       ...  \n",
       "11504793                  26.0      218         0  \n",
       "11504794                 152.0      115         1  \n",
       "11504795                 152.0      189         0  \n",
       "11504796                  26.0      274         1  \n",
       "11504797                 152.0      189         0  \n",
       "\n",
       "[11504798 rows x 12 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a160339",
   "metadata": {
    "papermill": {
     "duration": 0.016412,
     "end_time": "2024-07-11T05:46:38.006355",
     "exception": false,
     "start_time": "2024-07-11T05:46:37.989943",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Plot distributions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "da128f45",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:38.041117Z",
     "iopub.status.busy": "2024-07-11T05:46:38.040698Z",
     "iopub.status.idle": "2024-07-11T05:46:42.999118Z",
     "shell.execute_reply": "2024-07-11T05:46:42.997996Z"
    },
    "papermill": {
     "duration": 4.979416,
     "end_time": "2024-07-11T05:46:43.002837",
     "exception": false,
     "start_time": "2024-07-11T05:46:38.023421",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Age', 'Region_Code', 'Annual_Premium', 'Policy_Sales_Channel', 'Vintage']"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_list = []\n",
    "\n",
    "for col in df.columns:\n",
    "    if df[col].nunique() > 3:\n",
    "        num_list.append(col)\n",
    "        \n",
    "num_list = num_list[1:]\n",
    "num_list"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9b69759",
   "metadata": {
    "papermill": {
     "duration": 0.01664,
     "end_time": "2024-07-11T05:46:43.040447",
     "exception": false,
     "start_time": "2024-07-11T05:46:43.023807",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## a sample"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "cbcbb603",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:43.074606Z",
     "iopub.status.busy": "2024-07-11T05:46:43.073189Z",
     "iopub.status.idle": "2024-07-11T05:46:43.079892Z",
     "shell.execute_reply": "2024-07-11T05:46:43.078746Z"
    },
    "papermill": {
     "duration": 0.027054,
     "end_time": "2024-07-11T05:46:43.082875",
     "exception": false,
     "start_time": "2024-07-11T05:46:43.055821",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), len(num_list), figsize=(25, 25))\n",
    "# df_sample = df.sample(100000)\n",
    "# bar = progressbar.ProgressBar(max_value=len(num_list)*len(num_list))\n",
    "# t = 0\n",
    "# for i, col1 in enumerate(num_list):\n",
    "#     for j, col2 in enumerate(num_list):\n",
    "#         plt.sca(ax[i, j])\n",
    "#         sns.scatterplot(data=df_sample, x=col1, y=col2, hue='Response', ax=ax[i, j])\n",
    "#         bar.update(t+1)\n",
    "#         t = t+1\n",
    "# plt.tight_layout()\n",
    "# # may be image building take time\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "088bd9f8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:43.119552Z",
     "iopub.status.busy": "2024-07-11T05:46:43.118488Z",
     "iopub.status.idle": "2024-07-11T05:46:43.124484Z",
     "shell.execute_reply": "2024-07-11T05:46:43.123195Z"
    },
    "papermill": {
     "duration": 0.026105,
     "end_time": "2024-07-11T05:46:43.127039",
     "exception": false,
     "start_time": "2024-07-11T05:46:43.100934",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), 1, figsize=(8, len(num_list) * 4))  \n",
    "\n",
    "# for i, col in enumerate(tqdm(num_list, desc=\"Plotting\")):\n",
    "#     plt.sca(ax[i])\n",
    "#     sns.histplot(data=df_sample, x=col, kde=True)\n",
    "#     ax[i].set_title(f'Distribution of {col}')\n",
    "\n",
    "# plt.tight_layout()\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4219a616",
   "metadata": {
    "papermill": {
     "duration": 0.014965,
     "end_time": "2024-07-11T05:46:43.157524",
     "exception": false,
     "start_time": "2024-07-11T05:46:43.142559",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Resopnse with 1 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "2d4c4d5f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:43.191434Z",
     "iopub.status.busy": "2024-07-11T05:46:43.190809Z",
     "iopub.status.idle": "2024-07-11T05:46:43.196911Z",
     "shell.execute_reply": "2024-07-11T05:46:43.195513Z"
    },
    "papermill": {
     "duration": 0.02607,
     "end_time": "2024-07-11T05:46:43.199542",
     "exception": false,
     "start_time": "2024-07-11T05:46:43.173472",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# df_resp_1 = df[df['Response'] == 1]\n",
    "# df_resp_0 = df[df['Response'] == 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "de539d5e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:43.234260Z",
     "iopub.status.busy": "2024-07-11T05:46:43.232938Z",
     "iopub.status.idle": "2024-07-11T05:46:43.239616Z",
     "shell.execute_reply": "2024-07-11T05:46:43.238169Z"
    },
    "papermill": {
     "duration": 0.027393,
     "end_time": "2024-07-11T05:46:43.242227",
     "exception": false,
     "start_time": "2024-07-11T05:46:43.214834",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), len(num_list), figsize=(25, 25))\n",
    "\n",
    "# bar = progressbar.ProgressBar(max_value=len(num_list)*len(num_list))\n",
    "# t = 0\n",
    "# for i, col1 in enumerate(num_list):\n",
    "#     for j, col2 in enumerate(num_list):\n",
    "#         plt.sca(ax[i, j])\n",
    "#         sns.scatterplot(data=df_resp_1, x=col1, y=col2, ax=ax[i, j])\n",
    "#         bar.update(t+1)\n",
    "#         t = t+1\n",
    "# plt.tight_layout()\n",
    "# # may be image building take time\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "bf9ae240",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:43.276187Z",
     "iopub.status.busy": "2024-07-11T05:46:43.275708Z",
     "iopub.status.idle": "2024-07-11T05:46:43.281664Z",
     "shell.execute_reply": "2024-07-11T05:46:43.280469Z"
    },
    "papermill": {
     "duration": 0.026339,
     "end_time": "2024-07-11T05:46:43.284442",
     "exception": false,
     "start_time": "2024-07-11T05:46:43.258103",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), 1, figsize=(8, len(num_list) * 4))  \n",
    "\n",
    "# for i, col in enumerate(tqdm(num_list, desc=\"Plotting\")):\n",
    "#     plt.sca(ax[i])\n",
    "#     sns.histplot(data=df_resp_1, x=col, kde=True)\n",
    "#     sns.histplot(data=df_resp_0, x=col, kde=True)\n",
    "#     ax[i].set_title(f'Distribution of {col}')\n",
    "\n",
    "# plt.tight_layout()\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dd96db58",
   "metadata": {
    "papermill": {
     "duration": 0.015961,
     "end_time": "2024-07-11T05:46:43.319761",
     "exception": false,
     "start_time": "2024-07-11T05:46:43.303800",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Response with 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "3eb67194",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:43.356512Z",
     "iopub.status.busy": "2024-07-11T05:46:43.355758Z",
     "iopub.status.idle": "2024-07-11T05:46:43.362032Z",
     "shell.execute_reply": "2024-07-11T05:46:43.360855Z"
    },
    "papermill": {
     "duration": 0.028936,
     "end_time": "2024-07-11T05:46:43.364854",
     "exception": false,
     "start_time": "2024-07-11T05:46:43.335918",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), len(num_list), figsize=(25, 25))\n",
    "# df_resp_0 = df[df['Response'] == 0]\n",
    "# bar = progressbar.ProgressBar(max_value=len(num_list)*len(num_list))\n",
    "# t = 0\n",
    "# for i, col1 in enumerate(num_list):\n",
    "#     for j, col2 in enumerate(num_list):\n",
    "#         plt.sca(ax[i, j])\n",
    "#         sns.scatterplot(data=df_resp_0, x=col1, y=col2, ax=ax[i, j])\n",
    "#         bar.update(t+1)\n",
    "#         t = t+1\n",
    "# plt.tight_layout()\n",
    "# # may be image building take time\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "6a9d8c08",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:43.403259Z",
     "iopub.status.busy": "2024-07-11T05:46:43.402750Z",
     "iopub.status.idle": "2024-07-11T05:46:43.408962Z",
     "shell.execute_reply": "2024-07-11T05:46:43.407687Z"
    },
    "papermill": {
     "duration": 0.027586,
     "end_time": "2024-07-11T05:46:43.412380",
     "exception": false,
     "start_time": "2024-07-11T05:46:43.384794",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(1, 4, figsize=(12, 6))\n",
    "# gender_counts = df['Gender'].value_counts()\n",
    "# vehicle_damage_counts = df['Vehicle_Damage'].value_counts()\n",
    "# resp_counts = df['Response'].value_counts()\n",
    "# vehicle_age_counts = df['Vehicle_Age'].value_counts()\n",
    "# ax[0].pie(gender_counts, labels=gender_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette(\"pastel\"))\n",
    "# ax[0].set_title('Gender')\n",
    "# ax[1].pie(vehicle_damage_counts, labels=vehicle_damage_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette(\"pastel\"))\n",
    "# ax[1].set_title('Vehicle Damage')\n",
    "# ax[2].pie(resp_counts, labels=resp_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette(\"pastel\"))\n",
    "# ax[2].set_title('Response')\n",
    "# ax[3].pie(vehicle_age_counts, labels=vehicle_age_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette(\"pastel\"))\n",
    "# ax[3].set_title('Vehicle Age')\n",
    "# plt.tight_layout()\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b3c04b4f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:43.450077Z",
     "iopub.status.busy": "2024-07-11T05:46:43.449561Z",
     "iopub.status.idle": "2024-07-11T05:46:43.455900Z",
     "shell.execute_reply": "2024-07-11T05:46:43.454659Z"
    },
    "papermill": {
     "duration": 0.026956,
     "end_time": "2024-07-11T05:46:43.458494",
     "exception": false,
     "start_time": "2024-07-11T05:46:43.431538",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# columns = list(df.columns)[1:-1]\n",
    "# num_columns = len(columns)\n",
    "# breadth = 3\n",
    "# length = math.ceil(num_columns / breadth)\n",
    "\n",
    "# # Create subplots\n",
    "# fig, ax = plt.subplots(length, breadth, figsize=(15, 5 * length))\n",
    "\n",
    "# k = 0\n",
    "\n",
    "# bar = progressbar.ProgressBar(max_value=num_columns)\n",
    "\n",
    "# # Flatten the axes array for easier indexing\n",
    "# ax = ax.flatten()\n",
    "\n",
    "# for i in range(len(ax)):\n",
    "#     if k < num_columns:\n",
    "#         sns.scatterplot(\n",
    "#             data=df,\n",
    "#             x=columns[k],\n",
    "#             y='Response',\n",
    "#             ax=ax[i]\n",
    "#         )\n",
    "#         ax[i].set_title(f\"{columns[k]} vs Response\")\n",
    "#         k += 1\n",
    "#     else:\n",
    "#         ax[i].axis('off')\n",
    "#     bar.update(k)\n",
    "\n",
    "# plt.tight_layout()\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "7593e562",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:43.492752Z",
     "iopub.status.busy": "2024-07-11T05:46:43.492200Z",
     "iopub.status.idle": "2024-07-11T05:46:43.498384Z",
     "shell.execute_reply": "2024-07-11T05:46:43.496993Z"
    },
    "papermill": {
     "duration": 0.026689,
     "end_time": "2024-07-11T05:46:43.501153",
     "exception": false,
     "start_time": "2024-07-11T05:46:43.474464",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# sns.heatmap(df[num_list].corr(), cmap=\"Greens\", annot=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "166491d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:43.536811Z",
     "iopub.status.busy": "2024-07-11T05:46:43.535499Z",
     "iopub.status.idle": "2024-07-11T05:46:44.269246Z",
     "shell.execute_reply": "2024-07-11T05:46:44.268008Z"
    },
    "papermill": {
     "duration": 0.754909,
     "end_time": "2024-07-11T05:46:44.272463",
     "exception": false,
     "start_time": "2024-07-11T05:46:43.517554",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.drop(columns = ['Driving_License','Region_Code','Vintage'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "3ed4ba01",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:44.407702Z",
     "iopub.status.busy": "2024-07-11T05:46:44.406697Z",
     "iopub.status.idle": "2024-07-11T05:46:44.426005Z",
     "shell.execute_reply": "2024-07-11T05:46:44.424937Z"
    },
    "papermill": {
     "duration": 0.140074,
     "end_time": "2024-07-11T05:46:44.428989",
     "exception": false,
     "start_time": "2024-07-11T05:46:44.288915",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>65101.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>&gt; 2 Years</td>\n",
       "      <td>Yes</td>\n",
       "      <td>58911.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>38043.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>31951.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504793</th>\n",
       "      <td>11504793</td>\n",
       "      <td>Male</td>\n",
       "      <td>48</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>27412.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504794</th>\n",
       "      <td>11504794</td>\n",
       "      <td>Female</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>29509.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504795</th>\n",
       "      <td>11504795</td>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504796</th>\n",
       "      <td>11504796</td>\n",
       "      <td>Female</td>\n",
       "      <td>51</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>48443.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504797</th>\n",
       "      <td>11504797</td>\n",
       "      <td>Male</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>32855.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11504798 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id  Gender  Age  Previously_Insured Vehicle_Age  \\\n",
       "0                0    Male   21                   0    1-2 Year   \n",
       "1                1    Male   43                   0   > 2 Years   \n",
       "2                2  Female   25                   1    < 1 Year   \n",
       "3                3  Female   35                   0    1-2 Year   \n",
       "4                4  Female   36                   1    1-2 Year   \n",
       "...            ...     ...  ...                 ...         ...   \n",
       "11504793  11504793    Male   48                   0    1-2 Year   \n",
       "11504794  11504794  Female   26                   0    < 1 Year   \n",
       "11504795  11504795  Female   29                   1    < 1 Year   \n",
       "11504796  11504796  Female   51                   0    1-2 Year   \n",
       "11504797  11504797    Male   25                   1    < 1 Year   \n",
       "\n",
       "         Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  Response  \n",
       "0                   Yes         65101.0                 124.0         0  \n",
       "1                   Yes         58911.0                  26.0         1  \n",
       "2                    No         38043.0                 152.0         0  \n",
       "3                   Yes          2630.0                 156.0         0  \n",
       "4                    No         31951.0                 152.0         0  \n",
       "...                 ...             ...                   ...       ...  \n",
       "11504793            Yes         27412.0                  26.0         0  \n",
       "11504794            Yes         29509.0                 152.0         1  \n",
       "11504795             No          2630.0                 152.0         0  \n",
       "11504796            Yes         48443.0                  26.0         1  \n",
       "11504797             No         32855.0                 152.0         0  \n",
       "\n",
       "[11504798 rows x 9 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cdb2118c",
   "metadata": {
    "papermill": {
     "duration": 0.015587,
     "end_time": "2024-07-11T05:46:44.460665",
     "exception": false,
     "start_time": "2024-07-11T05:46:44.445078",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Pre processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "100634d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:44.494085Z",
     "iopub.status.busy": "2024-07-11T05:46:44.493678Z",
     "iopub.status.idle": "2024-07-11T05:46:44.500007Z",
     "shell.execute_reply": "2024-07-11T05:46:44.498927Z"
    },
    "papermill": {
     "duration": 0.026237,
     "end_time": "2024-07-11T05:46:44.502765",
     "exception": false,
     "start_time": "2024-07-11T05:46:44.476528",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "encoder_dict = {\n",
    "    'Gender' : {\n",
    "        'Male':0,\n",
    "        'Female':1\n",
    "    },\n",
    "    'Vehicle_Age' : {\n",
    "        '< 1 Year':0.5,\n",
    "        '1-2 Year':1.5,\n",
    "        '> 2 Years':2.5\n",
    "    },\n",
    "    'Vehicle_Damage' : {\n",
    "        'Yes':1,\n",
    "        'No':0\n",
    "    }\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "a7a51f92",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:46:44.536860Z",
     "iopub.status.busy": "2024-07-11T05:46:44.535905Z",
     "iopub.status.idle": "2024-07-11T05:47:08.295957Z",
     "shell.execute_reply": "2024-07-11T05:47:08.294437Z"
    },
    "papermill": {
     "duration": 23.780052,
     "end_time": "2024-07-11T05:47:08.298578",
     "exception": false,
     "start_time": "2024-07-11T05:46:44.518526",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>65101.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>1</td>\n",
       "      <td>58911.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>38043.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0</td>\n",
       "      <td>31951.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504793</th>\n",
       "      <td>11504793</td>\n",
       "      <td>0</td>\n",
       "      <td>48</td>\n",
       "      <td>0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>27412.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504794</th>\n",
       "      <td>11504794</td>\n",
       "      <td>1</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>29509.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504795</th>\n",
       "      <td>11504795</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504796</th>\n",
       "      <td>11504796</td>\n",
       "      <td>1</td>\n",
       "      <td>51</td>\n",
       "      <td>0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>48443.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504797</th>\n",
       "      <td>11504797</td>\n",
       "      <td>0</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>32855.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11504798 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id  Gender  Age  Previously_Insured  Vehicle_Age  \\\n",
       "0                0       0   21                   0          1.5   \n",
       "1                1       0   43                   0          2.5   \n",
       "2                2       1   25                   1          0.5   \n",
       "3                3       1   35                   0          1.5   \n",
       "4                4       1   36                   1          1.5   \n",
       "...            ...     ...  ...                 ...          ...   \n",
       "11504793  11504793       0   48                   0          1.5   \n",
       "11504794  11504794       1   26                   0          0.5   \n",
       "11504795  11504795       1   29                   1          0.5   \n",
       "11504796  11504796       1   51                   0          1.5   \n",
       "11504797  11504797       0   25                   1          0.5   \n",
       "\n",
       "          Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  Response  \n",
       "0                      1         65101.0                 124.0         0  \n",
       "1                      1         58911.0                  26.0         1  \n",
       "2                      0         38043.0                 152.0         0  \n",
       "3                      1          2630.0                 156.0         0  \n",
       "4                      0         31951.0                 152.0         0  \n",
       "...                  ...             ...                   ...       ...  \n",
       "11504793               1         27412.0                  26.0         0  \n",
       "11504794               1         29509.0                 152.0         1  \n",
       "11504795               0          2630.0                 152.0         0  \n",
       "11504796               1         48443.0                  26.0         1  \n",
       "11504797               0         32855.0                 152.0         0  \n",
       "\n",
       "[11504798 rows x 9 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.replace(encoder_dict, inplace=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "790d193c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:47:08.334359Z",
     "iopub.status.busy": "2024-07-11T05:47:08.332956Z",
     "iopub.status.idle": "2024-07-11T05:47:08.614494Z",
     "shell.execute_reply": "2024-07-11T05:47:08.613131Z"
    },
    "papermill": {
     "duration": 0.302679,
     "end_time": "2024-07-11T05:47:08.617635",
     "exception": false,
     "start_time": "2024-07-11T05:47:08.314956",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "x = df.iloc[:,1 :-1]\n",
    "y = df.iloc[:, -1]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "65c412bf",
   "metadata": {
    "papermill": {
     "duration": 0.015825,
     "end_time": "2024-07-11T05:47:08.649685",
     "exception": false,
     "start_time": "2024-07-11T05:47:08.633860",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Model training "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "85040e88",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:47:08.683554Z",
     "iopub.status.busy": "2024-07-11T05:47:08.683115Z",
     "iopub.status.idle": "2024-07-11T05:47:11.049533Z",
     "shell.execute_reply": "2024-07-11T05:47:11.048243Z"
    },
    "papermill": {
     "duration": 2.386869,
     "end_time": "2024-07-11T05:47:11.052472",
     "exception": false,
     "start_time": "2024-07-11T05:47:08.665603",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "x_train,x_test,y_train,y_test = train_test_split(\n",
    "    x,y\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "414ea7e4",
   "metadata": {
    "papermill": {
     "duration": 0.016024,
     "end_time": "2024-07-11T05:47:11.084796",
     "exception": false,
     "start_time": "2024-07-11T05:47:11.068772",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Logistic regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "4471f210",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:47:11.119540Z",
     "iopub.status.busy": "2024-07-11T05:47:11.119007Z",
     "iopub.status.idle": "2024-07-11T05:47:45.552346Z",
     "shell.execute_reply": "2024-07-11T05:47:45.550345Z"
    },
    "papermill": {
     "duration": 34.474103,
     "end_time": "2024-07-11T05:47:45.575115",
     "exception": false,
     "start_time": "2024-07-11T05:47:11.101012",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.876887212293999\n"
     ]
    }
   ],
   "source": [
    "# 'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga'],\n",
    "lr = LogisticRegression(\n",
    "    max_iter=100,\n",
    "    C = 0.1,\n",
    "    n_jobs = -1,\n",
    ")\n",
    "lr.fit(x_train,y_train)\n",
    "y_pred_lr = lr.predict(x_test)\n",
    "print(\"Accuracy:\", accuracy_score(y_test, y_pred_lr))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "febfe27c",
   "metadata": {
    "papermill": {
     "duration": 0.018195,
     "end_time": "2024-07-11T05:47:45.618621",
     "exception": false,
     "start_time": "2024-07-11T05:47:45.600426",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Decision tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "bf0a14e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:47:45.656515Z",
     "iopub.status.busy": "2024-07-11T05:47:45.655884Z",
     "iopub.status.idle": "2024-07-11T05:48:32.527711Z",
     "shell.execute_reply": "2024-07-11T05:48:32.526328Z"
    },
    "papermill": {
     "duration": 46.912004,
     "end_time": "2024-07-11T05:48:32.547108",
     "exception": false,
     "start_time": "2024-07-11T05:47:45.635104",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.876887212293999\n"
     ]
    }
   ],
   "source": [
    "DT = DecisionTreeClassifier(\n",
    "    max_depth = 7,\n",
    "    class_weight = {\n",
    "        1:0.12,\n",
    "        0:0.88\n",
    "    }\n",
    ")\n",
    "DT.fit(x_train,y_train)\n",
    "y_pred_DT = DT.predict(x_test)\n",
    "print(\"Accuracy:\", accuracy_score(y_test, y_pred_DT))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e3a9f0dd",
   "metadata": {
    "papermill": {
     "duration": 0.016122,
     "end_time": "2024-07-11T05:48:32.579668",
     "exception": false,
     "start_time": "2024-07-11T05:48:32.563546",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "ebf138a4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:48:32.614183Z",
     "iopub.status.busy": "2024-07-11T05:48:32.613784Z",
     "iopub.status.idle": "2024-07-11T05:51:33.537658Z",
     "shell.execute_reply": "2024-07-11T05:51:33.536230Z"
    },
    "papermill": {
     "duration": 180.960849,
     "end_time": "2024-07-11T05:51:33.556843",
     "exception": false,
     "start_time": "2024-07-11T05:48:32.595994",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.876887212293999\n"
     ]
    }
   ],
   "source": [
    "RF = RandomForestClassifier(\n",
    "    n_estimators=5,\n",
    "    class_weight = {\n",
    "        1:0.12,\n",
    "        0:0.88\n",
    "    }\n",
    ")\n",
    "RF.fit(x_train,y_train)\n",
    "y_pred_RF = DT.predict(x_test)\n",
    "print(\"Accuracy:\", accuracy_score(y_test, y_pred_RF))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c3ce22f",
   "metadata": {
    "papermill": {
     "duration": 0.016234,
     "end_time": "2024-07-11T05:51:33.589609",
     "exception": false,
     "start_time": "2024-07-11T05:51:33.573375",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Testing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "ab4a9de0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:51:33.624664Z",
     "iopub.status.busy": "2024-07-11T05:51:33.624199Z",
     "iopub.status.idle": "2024-07-11T05:51:50.137101Z",
     "shell.execute_reply": "2024-07-11T05:51:50.135787Z"
    },
    "papermill": {
     "duration": 16.534601,
     "end_time": "2024-07-11T05:51:50.140596",
     "exception": false,
     "start_time": "2024-07-11T05:51:33.605995",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tdf = pd.read_csv('/kaggle/input/playground-series-s4e7/test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "212809e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:51:50.179318Z",
     "iopub.status.busy": "2024-07-11T05:51:50.178787Z",
     "iopub.status.idle": "2024-07-11T05:51:50.836355Z",
     "shell.execute_reply": "2024-07-11T05:51:50.834845Z"
    },
    "papermill": {
     "duration": 0.679597,
     "end_time": "2024-07-11T05:51:50.839173",
     "exception": false,
     "start_time": "2024-07-11T05:51:50.159576",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Driving_License</th>\n",
       "      <th>Region_Code</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Vintage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Female</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>47.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>160.0</td>\n",
       "      <td>228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Male</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>37483.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>43.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>24502.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Male</td>\n",
       "      <td>51</td>\n",
       "      <td>1</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>34115.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669861</th>\n",
       "      <td>Male</td>\n",
       "      <td>57</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>51661.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669862</th>\n",
       "      <td>Male</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>50.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>25651.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>184</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669863</th>\n",
       "      <td>Male</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669864</th>\n",
       "      <td>Male</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>38866.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669865</th>\n",
       "      <td>Male</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>46.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>27498.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7669866 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Gender  Age  Driving_License  Region_Code  Previously_Insured  \\\n",
       "0        Female   20                1         47.0                   0   \n",
       "1          Male   47                1         28.0                   0   \n",
       "2          Male   47                1         43.0                   0   \n",
       "3        Female   22                1         47.0                   1   \n",
       "4          Male   51                1         19.0                   0   \n",
       "...         ...  ...              ...          ...                 ...   \n",
       "7669861    Male   57                1         28.0                   0   \n",
       "7669862    Male   28                1         50.0                   1   \n",
       "7669863    Male   47                1         33.0                   1   \n",
       "7669864    Male   30                1         28.0                   0   \n",
       "7669865    Male   23                1         46.0                   1   \n",
       "\n",
       "        Vehicle_Age Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  \\\n",
       "0          < 1 Year             No          2630.0                 160.0   \n",
       "1          1-2 Year            Yes         37483.0                 124.0   \n",
       "2          1-2 Year            Yes          2630.0                  26.0   \n",
       "3          < 1 Year             No         24502.0                 152.0   \n",
       "4          1-2 Year             No         34115.0                 124.0   \n",
       "...             ...            ...             ...                   ...   \n",
       "7669861    1-2 Year            Yes         51661.0                 124.0   \n",
       "7669862    < 1 Year             No         25651.0                 152.0   \n",
       "7669863    1-2 Year             No          2630.0                 138.0   \n",
       "7669864    < 1 Year            Yes         38866.0                 124.0   \n",
       "7669865    < 1 Year             No         27498.0                 152.0   \n",
       "\n",
       "         Vintage  \n",
       "0            228  \n",
       "1            123  \n",
       "2            271  \n",
       "3            115  \n",
       "4            148  \n",
       "...          ...  \n",
       "7669861      109  \n",
       "7669862      184  \n",
       "7669863       63  \n",
       "7669864      119  \n",
       "7669865       79  \n",
       "\n",
       "[7669866 rows x 10 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tdf = tdf.drop(columns = ['id'])\n",
    "tdf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "ce401e0e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:51:50.876461Z",
     "iopub.status.busy": "2024-07-11T05:51:50.875964Z",
     "iopub.status.idle": "2024-07-11T05:52:07.146285Z",
     "shell.execute_reply": "2024-07-11T05:52:07.144764Z"
    },
    "papermill": {
     "duration": 16.292891,
     "end_time": "2024-07-11T05:52:07.149651",
     "exception": false,
     "start_time": "2024-07-11T05:51:50.856760",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tdf.replace(encoder_dict, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "97350d52",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:52:07.187827Z",
     "iopub.status.busy": "2024-07-11T05:52:07.187380Z",
     "iopub.status.idle": "2024-07-11T05:52:07.382289Z",
     "shell.execute_reply": "2024-07-11T05:52:07.380885Z"
    },
    "papermill": {
     "duration": 0.217834,
     "end_time": "2024-07-11T05:52:07.385706",
     "exception": false,
     "start_time": "2024-07-11T05:52:07.167872",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tdf = tdf.drop(columns = ['Driving_License','Region_Code','Vintage'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "3a170674",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:52:07.424826Z",
     "iopub.status.busy": "2024-07-11T05:52:07.423479Z",
     "iopub.status.idle": "2024-07-11T05:52:08.334792Z",
     "shell.execute_reply": "2024-07-11T05:52:08.333324Z"
    },
    "papermill": {
     "duration": 0.933757,
     "end_time": "2024-07-11T05:52:08.337868",
     "exception": false,
     "start_time": "2024-07-11T05:52:07.404111",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "best_pred = DT.predict(tdf)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cb4a99a7",
   "metadata": {
    "papermill": {
     "duration": 0.017148,
     "end_time": "2024-07-11T05:52:08.373950",
     "exception": false,
     "start_time": "2024-07-11T05:52:08.356802",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "bc4fd736",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:52:08.412075Z",
     "iopub.status.busy": "2024-07-11T05:52:08.410627Z",
     "iopub.status.idle": "2024-07-11T05:52:22.588546Z",
     "shell.execute_reply": "2024-07-11T05:52:22.587303Z"
    },
    "papermill": {
     "duration": 14.200403,
     "end_time": "2024-07-11T05:52:22.591567",
     "exception": false,
     "start_time": "2024-07-11T05:52:08.391164",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "subs = pd.read_csv('/kaggle/input/playground-series-s4e7/sample_submission.csv')\n",
    "\n",
    "if len(subs) == len(best_pred):\n",
    "    subs['Response'] = best_pred\n",
    "    subs.to_csv('submission.csv', index=False)\n",
    "else:\n",
    "    print(f\"Error: Length of predictions ({len(best_pred)}) does not match length of submission file ({len(subs)}).\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 8930475,
     "sourceId": 73291,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 417.817672,
   "end_time": "2024-07-11T05:52:25.334338",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-11T05:45:27.516666",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

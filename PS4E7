{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "55615b58",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:02.626262Z",
     "iopub.status.busy": "2024-07-11T05:23:02.625891Z",
     "iopub.status.idle": "2024-07-11T05:23:05.163650Z",
     "shell.execute_reply": "2024-07-11T05:23:05.162500Z"
    },
    "papermill": {
     "duration": 2.551485,
     "end_time": "2024-07-11T05:23:05.166133",
     "exception": false,
     "start_time": "2024-07-11T05:23:02.614648",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from tqdm import tqdm\n",
    "import progressbar\n",
    "import math\n",
    "import warnings\n",
    "import itertools\n",
    "\n",
    "from sklearn.model_selection import train_test_split,GridSearchCV\n",
    "\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import classification_report\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f769e9d",
   "metadata": {
    "papermill": {
     "duration": 0.009086,
     "end_time": "2024-07-11T05:23:05.184903",
     "exception": false,
     "start_time": "2024-07-11T05:23:05.175817",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Getting started"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5da893b8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:05.205500Z",
     "iopub.status.busy": "2024-07-11T05:23:05.204952Z",
     "iopub.status.idle": "2024-07-11T05:23:25.369826Z",
     "shell.execute_reply": "2024-07-11T05:23:25.368629Z"
    },
    "papermill": {
     "duration": 20.178154,
     "end_time": "2024-07-11T05:23:25.372406",
     "exception": false,
     "start_time": "2024-07-11T05:23:05.194252",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('/kaggle/input/playground-series-s4e7/train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e450bce2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:25.392823Z",
     "iopub.status.busy": "2024-07-11T05:23:25.392436Z",
     "iopub.status.idle": "2024-07-11T05:23:25.427283Z",
     "shell.execute_reply": "2024-07-11T05:23:25.426000Z"
    },
    "papermill": {
     "duration": 0.047756,
     "end_time": "2024-07-11T05:23:25.429674",
     "exception": false,
     "start_time": "2024-07-11T05:23:25.381918",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Driving_License</th>\n",
       "      <th>Region_Code</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Vintage</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>65101.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>187</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&gt; 2 Years</td>\n",
       "      <td>Yes</td>\n",
       "      <td>58911.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>288</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>38043.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>254</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>76</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>15.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>31951.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>294</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504793</th>\n",
       "      <td>11504793</td>\n",
       "      <td>Male</td>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>27412.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>218</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504794</th>\n",
       "      <td>11504794</td>\n",
       "      <td>Female</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "      <td>36.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>29509.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>115</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504795</th>\n",
       "      <td>11504795</td>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>189</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504796</th>\n",
       "      <td>11504796</td>\n",
       "      <td>Female</td>\n",
       "      <td>51</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>48443.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>274</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504797</th>\n",
       "      <td>11504797</td>\n",
       "      <td>Male</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>32855.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>189</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11504798 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id  Gender  Age  Driving_License  Region_Code  \\\n",
       "0                0    Male   21                1         35.0   \n",
       "1                1    Male   43                1         28.0   \n",
       "2                2  Female   25                1         14.0   \n",
       "3                3  Female   35                1          1.0   \n",
       "4                4  Female   36                1         15.0   \n",
       "...            ...     ...  ...              ...          ...   \n",
       "11504793  11504793    Male   48                1          6.0   \n",
       "11504794  11504794  Female   26                1         36.0   \n",
       "11504795  11504795  Female   29                1         32.0   \n",
       "11504796  11504796  Female   51                1         28.0   \n",
       "11504797  11504797    Male   25                1         28.0   \n",
       "\n",
       "          Previously_Insured Vehicle_Age Vehicle_Damage  Annual_Premium  \\\n",
       "0                          0    1-2 Year            Yes         65101.0   \n",
       "1                          0   > 2 Years            Yes         58911.0   \n",
       "2                          1    < 1 Year             No         38043.0   \n",
       "3                          0    1-2 Year            Yes          2630.0   \n",
       "4                          1    1-2 Year             No         31951.0   \n",
       "...                      ...         ...            ...             ...   \n",
       "11504793                   0    1-2 Year            Yes         27412.0   \n",
       "11504794                   0    < 1 Year            Yes         29509.0   \n",
       "11504795                   1    < 1 Year             No          2630.0   \n",
       "11504796                   0    1-2 Year            Yes         48443.0   \n",
       "11504797                   1    < 1 Year             No         32855.0   \n",
       "\n",
       "          Policy_Sales_Channel  Vintage  Response  \n",
       "0                        124.0      187         0  \n",
       "1                         26.0      288         1  \n",
       "2                        152.0      254         0  \n",
       "3                        156.0       76         0  \n",
       "4                        152.0      294         0  \n",
       "...                        ...      ...       ...  \n",
       "11504793                  26.0      218         0  \n",
       "11504794                 152.0      115         1  \n",
       "11504795                 152.0      189         0  \n",
       "11504796                  26.0      274         1  \n",
       "11504797                 152.0      189         0  \n",
       "\n",
       "[11504798 rows x 12 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ae288237",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:25.451910Z",
     "iopub.status.busy": "2024-07-11T05:23:25.451533Z",
     "iopub.status.idle": "2024-07-11T05:23:25.472722Z",
     "shell.execute_reply": "2024-07-11T05:23:25.471717Z"
    },
    "papermill": {
     "duration": 0.034904,
     "end_time": "2024-07-11T05:23:25.475375",
     "exception": false,
     "start_time": "2024-07-11T05:23:25.440471",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 11504798 entries, 0 to 11504797\n",
      "Data columns (total 12 columns):\n",
      " #   Column                Dtype  \n",
      "---  ------                -----  \n",
      " 0   id                    int64  \n",
      " 1   Gender                object \n",
      " 2   Age                   int64  \n",
      " 3   Driving_License       int64  \n",
      " 4   Region_Code           float64\n",
      " 5   Previously_Insured    int64  \n",
      " 6   Vehicle_Age           object \n",
      " 7   Vehicle_Damage        object \n",
      " 8   Annual_Premium        float64\n",
      " 9   Policy_Sales_Channel  float64\n",
      " 10  Vintage               int64  \n",
      " 11  Response              int64  \n",
      "dtypes: float64(3), int64(6), object(3)\n",
      "memory usage: 1.0+ GB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0a1ab241",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:25.497651Z",
     "iopub.status.busy": "2024-07-11T05:23:25.497214Z",
     "iopub.status.idle": "2024-07-11T05:23:29.237619Z",
     "shell.execute_reply": "2024-07-11T05:23:29.236335Z"
    },
    "papermill": {
     "duration": 3.753921,
     "end_time": "2024-07-11T05:23:29.240132",
     "exception": false,
     "start_time": "2024-07-11T05:23:25.486211",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Age</th>\n",
       "      <th>Driving_License</th>\n",
       "      <th>Region_Code</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Vintage</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5.752398e+06</td>\n",
       "      <td>3.838356e+01</td>\n",
       "      <td>9.980220e-01</td>\n",
       "      <td>2.641869e+01</td>\n",
       "      <td>4.629966e-01</td>\n",
       "      <td>3.046137e+04</td>\n",
       "      <td>1.124254e+02</td>\n",
       "      <td>1.638977e+02</td>\n",
       "      <td>1.229973e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3.321149e+06</td>\n",
       "      <td>1.499346e+01</td>\n",
       "      <td>4.443120e-02</td>\n",
       "      <td>1.299159e+01</td>\n",
       "      <td>4.986289e-01</td>\n",
       "      <td>1.645475e+04</td>\n",
       "      <td>5.403571e+01</td>\n",
       "      <td>7.997953e+01</td>\n",
       "      <td>3.284341e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>2.000000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>2.630000e+03</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.876199e+06</td>\n",
       "      <td>2.400000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.500000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>2.527700e+04</td>\n",
       "      <td>2.900000e+01</td>\n",
       "      <td>9.900000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5.752398e+06</td>\n",
       "      <td>3.600000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>2.800000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>3.182400e+04</td>\n",
       "      <td>1.510000e+02</td>\n",
       "      <td>1.660000e+02</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>8.628598e+06</td>\n",
       "      <td>4.900000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>3.500000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>3.945100e+04</td>\n",
       "      <td>1.520000e+02</td>\n",
       "      <td>2.320000e+02</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>8.500000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.200000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.401650e+05</td>\n",
       "      <td>1.630000e+02</td>\n",
       "      <td>2.990000e+02</td>\n",
       "      <td>1.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 id           Age  Driving_License   Region_Code  \\\n",
       "count  1.150480e+07  1.150480e+07     1.150480e+07  1.150480e+07   \n",
       "mean   5.752398e+06  3.838356e+01     9.980220e-01  2.641869e+01   \n",
       "std    3.321149e+06  1.499346e+01     4.443120e-02  1.299159e+01   \n",
       "min    0.000000e+00  2.000000e+01     0.000000e+00  0.000000e+00   \n",
       "25%    2.876199e+06  2.400000e+01     1.000000e+00  1.500000e+01   \n",
       "50%    5.752398e+06  3.600000e+01     1.000000e+00  2.800000e+01   \n",
       "75%    8.628598e+06  4.900000e+01     1.000000e+00  3.500000e+01   \n",
       "max    1.150480e+07  8.500000e+01     1.000000e+00  5.200000e+01   \n",
       "\n",
       "       Previously_Insured  Annual_Premium  Policy_Sales_Channel       Vintage  \\\n",
       "count        1.150480e+07    1.150480e+07          1.150480e+07  1.150480e+07   \n",
       "mean         4.629966e-01    3.046137e+04          1.124254e+02  1.638977e+02   \n",
       "std          4.986289e-01    1.645475e+04          5.403571e+01  7.997953e+01   \n",
       "min          0.000000e+00    2.630000e+03          1.000000e+00  1.000000e+01   \n",
       "25%          0.000000e+00    2.527700e+04          2.900000e+01  9.900000e+01   \n",
       "50%          0.000000e+00    3.182400e+04          1.510000e+02  1.660000e+02   \n",
       "75%          1.000000e+00    3.945100e+04          1.520000e+02  2.320000e+02   \n",
       "max          1.000000e+00    5.401650e+05          1.630000e+02  2.990000e+02   \n",
       "\n",
       "           Response  \n",
       "count  1.150480e+07  \n",
       "mean   1.229973e-01  \n",
       "std    3.284341e-01  \n",
       "min    0.000000e+00  \n",
       "25%    0.000000e+00  \n",
       "50%    0.000000e+00  \n",
       "75%    0.000000e+00  \n",
       "max    1.000000e+00  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0a10c1a7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:29.261794Z",
     "iopub.status.busy": "2024-07-11T05:23:29.261436Z",
     "iopub.status.idle": "2024-07-11T05:23:30.971487Z",
     "shell.execute_reply": "2024-07-11T05:23:30.970328Z"
    },
    "papermill": {
     "duration": 1.723616,
     "end_time": "2024-07-11T05:23:30.973882",
     "exception": false,
     "start_time": "2024-07-11T05:23:29.250266",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                      0\n",
       "Gender                  0\n",
       "Age                     0\n",
       "Driving_License         0\n",
       "Region_Code             0\n",
       "Previously_Insured      0\n",
       "Vehicle_Age             0\n",
       "Vehicle_Damage          0\n",
       "Annual_Premium          0\n",
       "Policy_Sales_Channel    0\n",
       "Vintage                 0\n",
       "Response                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "2d4ec636",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:30.996466Z",
     "iopub.status.busy": "2024-07-11T05:23:30.996015Z",
     "iopub.status.idle": "2024-07-11T05:23:47.429226Z",
     "shell.execute_reply": "2024-07-11T05:23:47.428204Z"
    },
    "papermill": {
     "duration": 16.447366,
     "end_time": "2024-07-11T05:23:47.431676",
     "exception": false,
     "start_time": "2024-07-11T05:23:30.984310",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(11504798, 12)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()\n",
    "df.drop_duplicates(inplace=True)\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "be6dd258",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:47.454831Z",
     "iopub.status.busy": "2024-07-11T05:23:47.454479Z",
     "iopub.status.idle": "2024-07-11T05:23:53.473474Z",
     "shell.execute_reply": "2024-07-11T05:23:53.472215Z"
    },
    "papermill": {
     "duration": 6.033637,
     "end_time": "2024-07-11T05:23:53.476106",
     "exception": false,
     "start_time": "2024-07-11T05:23:47.442469",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.replace([np.inf, -np.inf], np.nan, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7a43c2b6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:53.498828Z",
     "iopub.status.busy": "2024-07-11T05:23:53.498470Z",
     "iopub.status.idle": "2024-07-11T05:23:53.517055Z",
     "shell.execute_reply": "2024-07-11T05:23:53.515943Z"
    },
    "papermill": {
     "duration": 0.032705,
     "end_time": "2024-07-11T05:23:53.519434",
     "exception": false,
     "start_time": "2024-07-11T05:23:53.486729",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Driving_License</th>\n",
       "      <th>Region_Code</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Vintage</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>65101.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>187</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&gt; 2 Years</td>\n",
       "      <td>Yes</td>\n",
       "      <td>58911.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>288</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>38043.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>254</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>76</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>15.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>31951.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>294</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504793</th>\n",
       "      <td>11504793</td>\n",
       "      <td>Male</td>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>27412.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>218</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504794</th>\n",
       "      <td>11504794</td>\n",
       "      <td>Female</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "      <td>36.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>29509.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>115</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504795</th>\n",
       "      <td>11504795</td>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>189</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504796</th>\n",
       "      <td>11504796</td>\n",
       "      <td>Female</td>\n",
       "      <td>51</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>48443.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>274</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504797</th>\n",
       "      <td>11504797</td>\n",
       "      <td>Male</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>32855.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>189</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11504798 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id  Gender  Age  Driving_License  Region_Code  \\\n",
       "0                0    Male   21                1         35.0   \n",
       "1                1    Male   43                1         28.0   \n",
       "2                2  Female   25                1         14.0   \n",
       "3                3  Female   35                1          1.0   \n",
       "4                4  Female   36                1         15.0   \n",
       "...            ...     ...  ...              ...          ...   \n",
       "11504793  11504793    Male   48                1          6.0   \n",
       "11504794  11504794  Female   26                1         36.0   \n",
       "11504795  11504795  Female   29                1         32.0   \n",
       "11504796  11504796  Female   51                1         28.0   \n",
       "11504797  11504797    Male   25                1         28.0   \n",
       "\n",
       "          Previously_Insured Vehicle_Age Vehicle_Damage  Annual_Premium  \\\n",
       "0                          0    1-2 Year            Yes         65101.0   \n",
       "1                          0   > 2 Years            Yes         58911.0   \n",
       "2                          1    < 1 Year             No         38043.0   \n",
       "3                          0    1-2 Year            Yes          2630.0   \n",
       "4                          1    1-2 Year             No         31951.0   \n",
       "...                      ...         ...            ...             ...   \n",
       "11504793                   0    1-2 Year            Yes         27412.0   \n",
       "11504794                   0    < 1 Year            Yes         29509.0   \n",
       "11504795                   1    < 1 Year             No          2630.0   \n",
       "11504796                   0    1-2 Year            Yes         48443.0   \n",
       "11504797                   1    < 1 Year             No         32855.0   \n",
       "\n",
       "          Policy_Sales_Channel  Vintage  Response  \n",
       "0                        124.0      187         0  \n",
       "1                         26.0      288         1  \n",
       "2                        152.0      254         0  \n",
       "3                        156.0       76         0  \n",
       "4                        152.0      294         0  \n",
       "...                        ...      ...       ...  \n",
       "11504793                  26.0      218         0  \n",
       "11504794                 152.0      115         1  \n",
       "11504795                 152.0      189         0  \n",
       "11504796                  26.0      274         1  \n",
       "11504797                 152.0      189         0  \n",
       "\n",
       "[11504798 rows x 12 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "00a28749",
   "metadata": {
    "papermill": {
     "duration": 0.010395,
     "end_time": "2024-07-11T05:23:53.540818",
     "exception": false,
     "start_time": "2024-07-11T05:23:53.530423",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Plot distributions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6b531f03",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:53.564368Z",
     "iopub.status.busy": "2024-07-11T05:23:53.563553Z",
     "iopub.status.idle": "2024-07-11T05:23:57.672030Z",
     "shell.execute_reply": "2024-07-11T05:23:57.671006Z"
    },
    "papermill": {
     "duration": 4.122708,
     "end_time": "2024-07-11T05:23:57.674237",
     "exception": false,
     "start_time": "2024-07-11T05:23:53.551529",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Age', 'Region_Code', 'Annual_Premium', 'Policy_Sales_Channel', 'Vintage']"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_list = []\n",
    "\n",
    "for col in df.columns:\n",
    "    if df[col].nunique() > 3:\n",
    "        num_list.append(col)\n",
    "        \n",
    "num_list = num_list[1:]\n",
    "num_list"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47168509",
   "metadata": {
    "papermill": {
     "duration": 0.01063,
     "end_time": "2024-07-11T05:23:57.695637",
     "exception": false,
     "start_time": "2024-07-11T05:23:57.685007",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## a sample"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "dc7e671a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:57.719249Z",
     "iopub.status.busy": "2024-07-11T05:23:57.718256Z",
     "iopub.status.idle": "2024-07-11T05:23:57.723488Z",
     "shell.execute_reply": "2024-07-11T05:23:57.722484Z"
    },
    "papermill": {
     "duration": 0.019189,
     "end_time": "2024-07-11T05:23:57.725617",
     "exception": false,
     "start_time": "2024-07-11T05:23:57.706428",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), len(num_list), figsize=(25, 25))\n",
    "# df_sample = df.sample(100000)\n",
    "# bar = progressbar.ProgressBar(max_value=len(num_list)*len(num_list))\n",
    "# t = 0\n",
    "# for i, col1 in enumerate(num_list):\n",
    "#     for j, col2 in enumerate(num_list):\n",
    "#         plt.sca(ax[i, j])\n",
    "#         sns.scatterplot(data=df_sample, x=col1, y=col2, hue='Response', ax=ax[i, j])\n",
    "#         bar.update(t+1)\n",
    "#         t = t+1\n",
    "# plt.tight_layout()\n",
    "# # may be image building take time\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "b8043fdb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:57.749503Z",
     "iopub.status.busy": "2024-07-11T05:23:57.749057Z",
     "iopub.status.idle": "2024-07-11T05:23:57.753669Z",
     "shell.execute_reply": "2024-07-11T05:23:57.752593Z"
    },
    "papermill": {
     "duration": 0.01886,
     "end_time": "2024-07-11T05:23:57.755710",
     "exception": false,
     "start_time": "2024-07-11T05:23:57.736850",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), 1, figsize=(8, len(num_list) * 4))  \n",
    "\n",
    "# for i, col in enumerate(tqdm(num_list, desc=\"Plotting\")):\n",
    "#     plt.sca(ax[i])\n",
    "#     sns.histplot(data=df_sample, x=col, kde=True)\n",
    "#     ax[i].set_title(f'Distribution of {col}')\n",
    "\n",
    "# plt.tight_layout()\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54f34194",
   "metadata": {
    "papermill": {
     "duration": 0.011007,
     "end_time": "2024-07-11T05:23:57.777470",
     "exception": false,
     "start_time": "2024-07-11T05:23:57.766463",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Resopnse with 1 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f4db88d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:57.801268Z",
     "iopub.status.busy": "2024-07-11T05:23:57.800886Z",
     "iopub.status.idle": "2024-07-11T05:23:57.805494Z",
     "shell.execute_reply": "2024-07-11T05:23:57.804494Z"
    },
    "papermill": {
     "duration": 0.018955,
     "end_time": "2024-07-11T05:23:57.807692",
     "exception": false,
     "start_time": "2024-07-11T05:23:57.788737",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# df_resp_1 = df[df['Response'] == 1]\n",
    "# df_resp_0 = df[df['Response'] == 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0338fb02",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:57.831513Z",
     "iopub.status.busy": "2024-07-11T05:23:57.831124Z",
     "iopub.status.idle": "2024-07-11T05:23:57.835920Z",
     "shell.execute_reply": "2024-07-11T05:23:57.834912Z"
    },
    "papermill": {
     "duration": 0.019378,
     "end_time": "2024-07-11T05:23:57.838122",
     "exception": false,
     "start_time": "2024-07-11T05:23:57.818744",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), len(num_list), figsize=(25, 25))\n",
    "\n",
    "# bar = progressbar.ProgressBar(max_value=len(num_list)*len(num_list))\n",
    "# t = 0\n",
    "# for i, col1 in enumerate(num_list):\n",
    "#     for j, col2 in enumerate(num_list):\n",
    "#         plt.sca(ax[i, j])\n",
    "#         sns.scatterplot(data=df_resp_1, x=col1, y=col2, ax=ax[i, j])\n",
    "#         bar.update(t+1)\n",
    "#         t = t+1\n",
    "# plt.tight_layout()\n",
    "# # may be image building take time\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "8485d271",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:57.861469Z",
     "iopub.status.busy": "2024-07-11T05:23:57.861083Z",
     "iopub.status.idle": "2024-07-11T05:23:57.865686Z",
     "shell.execute_reply": "2024-07-11T05:23:57.864651Z"
    },
    "papermill": {
     "duration": 0.01895,
     "end_time": "2024-07-11T05:23:57.867927",
     "exception": false,
     "start_time": "2024-07-11T05:23:57.848977",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), 1, figsize=(8, len(num_list) * 4))  \n",
    "\n",
    "# for i, col in enumerate(tqdm(num_list, desc=\"Plotting\")):\n",
    "#     plt.sca(ax[i])\n",
    "#     sns.histplot(data=df_resp_1, x=col, kde=True)\n",
    "#     sns.histplot(data=df_resp_0, x=col, kde=True)\n",
    "#     ax[i].set_title(f'Distribution of {col}')\n",
    "\n",
    "# plt.tight_layout()\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7211a192",
   "metadata": {
    "papermill": {
     "duration": 0.010592,
     "end_time": "2024-07-11T05:23:57.889414",
     "exception": false,
     "start_time": "2024-07-11T05:23:57.878822",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Response with 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b1b51b46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:57.912663Z",
     "iopub.status.busy": "2024-07-11T05:23:57.912303Z",
     "iopub.status.idle": "2024-07-11T05:23:57.916958Z",
     "shell.execute_reply": "2024-07-11T05:23:57.915996Z"
    },
    "papermill": {
     "duration": 0.018846,
     "end_time": "2024-07-11T05:23:57.919149",
     "exception": false,
     "start_time": "2024-07-11T05:23:57.900303",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), len(num_list), figsize=(25, 25))\n",
    "# df_resp_0 = df[df['Response'] == 0]\n",
    "# bar = progressbar.ProgressBar(max_value=len(num_list)*len(num_list))\n",
    "# t = 0\n",
    "# for i, col1 in enumerate(num_list):\n",
    "#     for j, col2 in enumerate(num_list):\n",
    "#         plt.sca(ax[i, j])\n",
    "#         sns.scatterplot(data=df_resp_0, x=col1, y=col2, ax=ax[i, j])\n",
    "#         bar.update(t+1)\n",
    "#         t = t+1\n",
    "# plt.tight_layout()\n",
    "# # may be image building take time\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "57c39b49",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:57.943978Z",
     "iopub.status.busy": "2024-07-11T05:23:57.943631Z",
     "iopub.status.idle": "2024-07-11T05:23:57.948535Z",
     "shell.execute_reply": "2024-07-11T05:23:57.947495Z"
    },
    "papermill": {
     "duration": 0.020234,
     "end_time": "2024-07-11T05:23:57.950672",
     "exception": false,
     "start_time": "2024-07-11T05:23:57.930438",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(1, 4, figsize=(12, 6))\n",
    "# gender_counts = df['Gender'].value_counts()\n",
    "# vehicle_damage_counts = df['Vehicle_Damage'].value_counts()\n",
    "# resp_counts = df['Response'].value_counts()\n",
    "# vehicle_age_counts = df['Vehicle_Age'].value_counts()\n",
    "# ax[0].pie(gender_counts, labels=gender_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette(\"pastel\"))\n",
    "# ax[0].set_title('Gender')\n",
    "# ax[1].pie(vehicle_damage_counts, labels=vehicle_damage_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette(\"pastel\"))\n",
    "# ax[1].set_title('Vehicle Damage')\n",
    "# ax[2].pie(resp_counts, labels=resp_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette(\"pastel\"))\n",
    "# ax[2].set_title('Response')\n",
    "# ax[3].pie(vehicle_age_counts, labels=vehicle_age_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette(\"pastel\"))\n",
    "# ax[3].set_title('Vehicle Age')\n",
    "# plt.tight_layout()\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d350e1e9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:57.974905Z",
     "iopub.status.busy": "2024-07-11T05:23:57.974546Z",
     "iopub.status.idle": "2024-07-11T05:23:57.979706Z",
     "shell.execute_reply": "2024-07-11T05:23:57.978620Z"
    },
    "papermill": {
     "duration": 0.019685,
     "end_time": "2024-07-11T05:23:57.982061",
     "exception": false,
     "start_time": "2024-07-11T05:23:57.962376",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# columns = list(df.columns)[1:-1]\n",
    "# num_columns = len(columns)\n",
    "# breadth = 3\n",
    "# length = math.ceil(num_columns / breadth)\n",
    "\n",
    "# # Create subplots\n",
    "# fig, ax = plt.subplots(length, breadth, figsize=(15, 5 * length))\n",
    "\n",
    "# k = 0\n",
    "\n",
    "# bar = progressbar.ProgressBar(max_value=num_columns)\n",
    "\n",
    "# # Flatten the axes array for easier indexing\n",
    "# ax = ax.flatten()\n",
    "\n",
    "# for i in range(len(ax)):\n",
    "#     if k < num_columns:\n",
    "#         sns.scatterplot(\n",
    "#             data=df,\n",
    "#             x=columns[k],\n",
    "#             y='Response',\n",
    "#             ax=ax[i]\n",
    "#         )\n",
    "#         ax[i].set_title(f\"{columns[k]} vs Response\")\n",
    "#         k += 1\n",
    "#     else:\n",
    "#         ax[i].axis('off')\n",
    "#     bar.update(k)\n",
    "\n",
    "# plt.tight_layout()\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b0d5ccbc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:58.005614Z",
     "iopub.status.busy": "2024-07-11T05:23:58.005214Z",
     "iopub.status.idle": "2024-07-11T05:23:58.010050Z",
     "shell.execute_reply": "2024-07-11T05:23:58.008999Z"
    },
    "papermill": {
     "duration": 0.01937,
     "end_time": "2024-07-11T05:23:58.012391",
     "exception": false,
     "start_time": "2024-07-11T05:23:57.993021",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# sns.heatmap(df[num_list].corr(), cmap=\"Greens\", annot=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "f85b8144",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:58.035797Z",
     "iopub.status.busy": "2024-07-11T05:23:58.035407Z",
     "iopub.status.idle": "2024-07-11T05:23:58.611730Z",
     "shell.execute_reply": "2024-07-11T05:23:58.610560Z"
    },
    "papermill": {
     "duration": 0.591114,
     "end_time": "2024-07-11T05:23:58.614409",
     "exception": false,
     "start_time": "2024-07-11T05:23:58.023295",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.drop(columns = ['Driving_License','Region_Code','Vintage'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "2e568d26",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:58.697895Z",
     "iopub.status.busy": "2024-07-11T05:23:58.697544Z",
     "iopub.status.idle": "2024-07-11T05:23:58.714136Z",
     "shell.execute_reply": "2024-07-11T05:23:58.712969Z"
    },
    "papermill": {
     "duration": 0.08963,
     "end_time": "2024-07-11T05:23:58.716612",
     "exception": false,
     "start_time": "2024-07-11T05:23:58.626982",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>65101.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>&gt; 2 Years</td>\n",
       "      <td>Yes</td>\n",
       "      <td>58911.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>38043.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>31951.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504793</th>\n",
       "      <td>11504793</td>\n",
       "      <td>Male</td>\n",
       "      <td>48</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>27412.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504794</th>\n",
       "      <td>11504794</td>\n",
       "      <td>Female</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>29509.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504795</th>\n",
       "      <td>11504795</td>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504796</th>\n",
       "      <td>11504796</td>\n",
       "      <td>Female</td>\n",
       "      <td>51</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>48443.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504797</th>\n",
       "      <td>11504797</td>\n",
       "      <td>Male</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>32855.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11504798 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id  Gender  Age  Previously_Insured Vehicle_Age  \\\n",
       "0                0    Male   21                   0    1-2 Year   \n",
       "1                1    Male   43                   0   > 2 Years   \n",
       "2                2  Female   25                   1    < 1 Year   \n",
       "3                3  Female   35                   0    1-2 Year   \n",
       "4                4  Female   36                   1    1-2 Year   \n",
       "...            ...     ...  ...                 ...         ...   \n",
       "11504793  11504793    Male   48                   0    1-2 Year   \n",
       "11504794  11504794  Female   26                   0    < 1 Year   \n",
       "11504795  11504795  Female   29                   1    < 1 Year   \n",
       "11504796  11504796  Female   51                   0    1-2 Year   \n",
       "11504797  11504797    Male   25                   1    < 1 Year   \n",
       "\n",
       "         Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  Response  \n",
       "0                   Yes         65101.0                 124.0         0  \n",
       "1                   Yes         58911.0                  26.0         1  \n",
       "2                    No         38043.0                 152.0         0  \n",
       "3                   Yes          2630.0                 156.0         0  \n",
       "4                    No         31951.0                 152.0         0  \n",
       "...                 ...             ...                   ...       ...  \n",
       "11504793            Yes         27412.0                  26.0         0  \n",
       "11504794            Yes         29509.0                 152.0         1  \n",
       "11504795             No          2630.0                 152.0         0  \n",
       "11504796            Yes         48443.0                  26.0         1  \n",
       "11504797             No         32855.0                 152.0         0  \n",
       "\n",
       "[11504798 rows x 9 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4bde31c",
   "metadata": {
    "papermill": {
     "duration": 0.011356,
     "end_time": "2024-07-11T05:23:58.739322",
     "exception": false,
     "start_time": "2024-07-11T05:23:58.727966",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Pre processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c51fdcef",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:58.764026Z",
     "iopub.status.busy": "2024-07-11T05:23:58.763227Z",
     "iopub.status.idle": "2024-07-11T05:23:58.768737Z",
     "shell.execute_reply": "2024-07-11T05:23:58.767506Z"
    },
    "papermill": {
     "duration": 0.020343,
     "end_time": "2024-07-11T05:23:58.771091",
     "exception": false,
     "start_time": "2024-07-11T05:23:58.750748",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "encoder_dict = {\n",
    "    'Gender' : {\n",
    "        'Male':0,\n",
    "        'Female':1\n",
    "    },\n",
    "    'Vehicle_Age' : {\n",
    "        '< 1 Year':0.5,\n",
    "        '1-2 Year':1.5,\n",
    "        '> 2 Years':2.5\n",
    "    },\n",
    "    'Vehicle_Damage' : {\n",
    "        'Yes':1,\n",
    "        'No':0\n",
    "    }\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "685bdd54",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:23:58.795486Z",
     "iopub.status.busy": "2024-07-11T05:23:58.795071Z",
     "iopub.status.idle": "2024-07-11T05:24:11.912580Z",
     "shell.execute_reply": "2024-07-11T05:24:11.911477Z"
    },
    "papermill": {
     "duration": 13.132232,
     "end_time": "2024-07-11T05:24:11.914888",
     "exception": false,
     "start_time": "2024-07-11T05:23:58.782656",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>65101.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>1</td>\n",
       "      <td>58911.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>38043.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0</td>\n",
       "      <td>31951.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504793</th>\n",
       "      <td>11504793</td>\n",
       "      <td>0</td>\n",
       "      <td>48</td>\n",
       "      <td>0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>27412.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504794</th>\n",
       "      <td>11504794</td>\n",
       "      <td>1</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>29509.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504795</th>\n",
       "      <td>11504795</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504796</th>\n",
       "      <td>11504796</td>\n",
       "      <td>1</td>\n",
       "      <td>51</td>\n",
       "      <td>0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>48443.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504797</th>\n",
       "      <td>11504797</td>\n",
       "      <td>0</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>32855.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11504798 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id  Gender  Age  Previously_Insured  Vehicle_Age  \\\n",
       "0                0       0   21                   0          1.5   \n",
       "1                1       0   43                   0          2.5   \n",
       "2                2       1   25                   1          0.5   \n",
       "3                3       1   35                   0          1.5   \n",
       "4                4       1   36                   1          1.5   \n",
       "...            ...     ...  ...                 ...          ...   \n",
       "11504793  11504793       0   48                   0          1.5   \n",
       "11504794  11504794       1   26                   0          0.5   \n",
       "11504795  11504795       1   29                   1          0.5   \n",
       "11504796  11504796       1   51                   0          1.5   \n",
       "11504797  11504797       0   25                   1          0.5   \n",
       "\n",
       "          Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  Response  \n",
       "0                      1         65101.0                 124.0         0  \n",
       "1                      1         58911.0                  26.0         1  \n",
       "2                      0         38043.0                 152.0         0  \n",
       "3                      1          2630.0                 156.0         0  \n",
       "4                      0         31951.0                 152.0         0  \n",
       "...                  ...             ...                   ...       ...  \n",
       "11504793               1         27412.0                  26.0         0  \n",
       "11504794               1         29509.0                 152.0         1  \n",
       "11504795               0          2630.0                 152.0         0  \n",
       "11504796               1         48443.0                  26.0         1  \n",
       "11504797               0         32855.0                 152.0         0  \n",
       "\n",
       "[11504798 rows x 9 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.replace(encoder_dict, inplace=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "ec669c6d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:24:11.941164Z",
     "iopub.status.busy": "2024-07-11T05:24:11.940233Z",
     "iopub.status.idle": "2024-07-11T05:24:12.215313Z",
     "shell.execute_reply": "2024-07-11T05:24:12.214332Z"
    },
    "papermill": {
     "duration": 0.290924,
     "end_time": "2024-07-11T05:24:12.217806",
     "exception": false,
     "start_time": "2024-07-11T05:24:11.926882",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "x = df.iloc[:,1 :-1]\n",
    "y = df.iloc[:, -1]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db36e563",
   "metadata": {
    "papermill": {
     "duration": 0.011441,
     "end_time": "2024-07-11T05:24:12.241131",
     "exception": false,
     "start_time": "2024-07-11T05:24:12.229690",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Model training "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "30f3cea0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:24:12.266301Z",
     "iopub.status.busy": "2024-07-11T05:24:12.265899Z",
     "iopub.status.idle": "2024-07-11T05:24:14.633563Z",
     "shell.execute_reply": "2024-07-11T05:24:14.632522Z"
    },
    "papermill": {
     "duration": 2.383443,
     "end_time": "2024-07-11T05:24:14.636384",
     "exception": false,
     "start_time": "2024-07-11T05:24:12.252941",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "x_train,x_test,y_train,y_test = train_test_split(\n",
    "    x,y\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48cf9f06",
   "metadata": {
    "papermill": {
     "duration": 0.011391,
     "end_time": "2024-07-11T05:24:14.659561",
     "exception": false,
     "start_time": "2024-07-11T05:24:14.648170",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Logistic regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "881adc48",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:24:14.684902Z",
     "iopub.status.busy": "2024-07-11T05:24:14.684017Z",
     "iopub.status.idle": "2024-07-11T05:25:05.132619Z",
     "shell.execute_reply": "2024-07-11T05:25:05.131197Z"
    },
    "papermill": {
     "duration": 50.474968,
     "end_time": "2024-07-11T05:25:05.146222",
     "exception": false,
     "start_time": "2024-07-11T05:24:14.671254",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.8701783603365552\n"
     ]
    }
   ],
   "source": [
    "# 'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga'],\n",
    "lr = LogisticRegression(\n",
    "    max_iter=100,\n",
    "    C = 0.1,\n",
    "    n_jobs = -1,\n",
    "#     class_weight = {\n",
    "#         0:0.875,\n",
    "#         1:0.125\n",
    "#     }\n",
    ")\n",
    "lr.fit(x_train,y_train)\n",
    "y_pred_lr = lr.predict(x_test)\n",
    "print(\"Accuracy:\", accuracy_score(y_test, y_pred_lr))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a071b90f",
   "metadata": {
    "papermill": {
     "duration": 0.012529,
     "end_time": "2024-07-11T05:25:05.170569",
     "exception": false,
     "start_time": "2024-07-11T05:25:05.158040",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Decision tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "060b7800",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:25:05.199459Z",
     "iopub.status.busy": "2024-07-11T05:25:05.199013Z",
     "iopub.status.idle": "2024-07-11T05:25:05.203969Z",
     "shell.execute_reply": "2024-07-11T05:25:05.202786Z"
    },
    "papermill": {
     "duration": 0.022618,
     "end_time": "2024-07-11T05:25:05.206263",
     "exception": false,
     "start_time": "2024-07-11T05:25:05.183645",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# DT = DecisionTreeClassifier()\n",
    "# DT.fit(x_train,y_train)\n",
    "# y_pred_DT = DT.predict(x_test)\n",
    "# print(\"Accuracy:\", accuracy_score(y_test, y_pred_DT))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5af7253c",
   "metadata": {
    "papermill": {
     "duration": 0.011532,
     "end_time": "2024-07-11T05:25:05.229746",
     "exception": false,
     "start_time": "2024-07-11T05:25:05.218214",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "f3477ac0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:25:05.255048Z",
     "iopub.status.busy": "2024-07-11T05:25:05.254665Z",
     "iopub.status.idle": "2024-07-11T05:25:05.259298Z",
     "shell.execute_reply": "2024-07-11T05:25:05.258291Z"
    },
    "papermill": {
     "duration": 0.019851,
     "end_time": "2024-07-11T05:25:05.261394",
     "exception": false,
     "start_time": "2024-07-11T05:25:05.241543",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# RF = RandomForestClassifier(n_estimators=10)\n",
    "# RF.fit(x_train,y_train)\n",
    "# y_pred_RF = DT.predict(x_test)\n",
    "# print(\"Accuracy:\", accuracy_score(y_test, y_pred_RF))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d79b781b",
   "metadata": {
    "papermill": {
     "duration": 0.011361,
     "end_time": "2024-07-11T05:25:05.284483",
     "exception": false,
     "start_time": "2024-07-11T05:25:05.273122",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Testing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "0f2314d2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:25:05.309569Z",
     "iopub.status.busy": "2024-07-11T05:25:05.309170Z",
     "iopub.status.idle": "2024-07-11T05:25:18.226966Z",
     "shell.execute_reply": "2024-07-11T05:25:18.225767Z"
    },
    "papermill": {
     "duration": 12.933697,
     "end_time": "2024-07-11T05:25:18.229885",
     "exception": false,
     "start_time": "2024-07-11T05:25:05.296188",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tdf = pd.read_csv('/kaggle/input/playground-series-s4e7/test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "c341a035",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:25:18.256902Z",
     "iopub.status.busy": "2024-07-11T05:25:18.256543Z",
     "iopub.status.idle": "2024-07-11T05:25:18.760432Z",
     "shell.execute_reply": "2024-07-11T05:25:18.759343Z"
    },
    "papermill": {
     "duration": 0.519457,
     "end_time": "2024-07-11T05:25:18.762763",
     "exception": false,
     "start_time": "2024-07-11T05:25:18.243306",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Driving_License</th>\n",
       "      <th>Region_Code</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Vintage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Female</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>47.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>160.0</td>\n",
       "      <td>228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Male</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>37483.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>43.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>24502.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Male</td>\n",
       "      <td>51</td>\n",
       "      <td>1</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>34115.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669861</th>\n",
       "      <td>Male</td>\n",
       "      <td>57</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>51661.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669862</th>\n",
       "      <td>Male</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>50.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>25651.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>184</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669863</th>\n",
       "      <td>Male</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669864</th>\n",
       "      <td>Male</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>38866.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669865</th>\n",
       "      <td>Male</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>46.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>27498.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7669866 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Gender  Age  Driving_License  Region_Code  Previously_Insured  \\\n",
       "0        Female   20                1         47.0                   0   \n",
       "1          Male   47                1         28.0                   0   \n",
       "2          Male   47                1         43.0                   0   \n",
       "3        Female   22                1         47.0                   1   \n",
       "4          Male   51                1         19.0                   0   \n",
       "...         ...  ...              ...          ...                 ...   \n",
       "7669861    Male   57                1         28.0                   0   \n",
       "7669862    Male   28                1         50.0                   1   \n",
       "7669863    Male   47                1         33.0                   1   \n",
       "7669864    Male   30                1         28.0                   0   \n",
       "7669865    Male   23                1         46.0                   1   \n",
       "\n",
       "        Vehicle_Age Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  \\\n",
       "0          < 1 Year             No          2630.0                 160.0   \n",
       "1          1-2 Year            Yes         37483.0                 124.0   \n",
       "2          1-2 Year            Yes          2630.0                  26.0   \n",
       "3          < 1 Year             No         24502.0                 152.0   \n",
       "4          1-2 Year             No         34115.0                 124.0   \n",
       "...             ...            ...             ...                   ...   \n",
       "7669861    1-2 Year            Yes         51661.0                 124.0   \n",
       "7669862    < 1 Year             No         25651.0                 152.0   \n",
       "7669863    1-2 Year             No          2630.0                 138.0   \n",
       "7669864    < 1 Year            Yes         38866.0                 124.0   \n",
       "7669865    < 1 Year             No         27498.0                 152.0   \n",
       "\n",
       "         Vintage  \n",
       "0            228  \n",
       "1            123  \n",
       "2            271  \n",
       "3            115  \n",
       "4            148  \n",
       "...          ...  \n",
       "7669861      109  \n",
       "7669862      184  \n",
       "7669863       63  \n",
       "7669864      119  \n",
       "7669865       79  \n",
       "\n",
       "[7669866 rows x 10 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tdf = tdf.drop(columns = ['id'])\n",
    "tdf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "ec456887",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:25:18.788423Z",
     "iopub.status.busy": "2024-07-11T05:25:18.788023Z",
     "iopub.status.idle": "2024-07-11T05:25:27.472249Z",
     "shell.execute_reply": "2024-07-11T05:25:27.471308Z"
    },
    "papermill": {
     "duration": 8.700063,
     "end_time": "2024-07-11T05:25:27.474891",
     "exception": false,
     "start_time": "2024-07-11T05:25:18.774828",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tdf.replace(encoder_dict, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "a05ffc36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:25:27.500805Z",
     "iopub.status.busy": "2024-07-11T05:25:27.500406Z",
     "iopub.status.idle": "2024-07-11T05:25:27.684640Z",
     "shell.execute_reply": "2024-07-11T05:25:27.683545Z"
    },
    "papermill": {
     "duration": 0.200011,
     "end_time": "2024-07-11T05:25:27.687181",
     "exception": false,
     "start_time": "2024-07-11T05:25:27.487170",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tdf = tdf.drop(columns = ['Driving_License','Region_Code','Vintage'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "053e3c3c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:25:27.713410Z",
     "iopub.status.busy": "2024-07-11T05:25:27.712662Z",
     "iopub.status.idle": "2024-07-11T05:25:28.038122Z",
     "shell.execute_reply": "2024-07-11T05:25:28.036819Z"
    },
    "papermill": {
     "duration": 0.341933,
     "end_time": "2024-07-11T05:25:28.041412",
     "exception": false,
     "start_time": "2024-07-11T05:25:27.699479",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "best_pred = lr.predict(tdf)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4add6cf2",
   "metadata": {
    "papermill": {
     "duration": 0.011628,
     "end_time": "2024-07-11T05:25:28.071366",
     "exception": false,
     "start_time": "2024-07-11T05:25:28.059738",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8c55d4f5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:25:28.096685Z",
     "iopub.status.busy": "2024-07-11T05:25:28.096310Z",
     "iopub.status.idle": "2024-07-11T05:25:36.834294Z",
     "shell.execute_reply": "2024-07-11T05:25:36.833286Z"
    },
    "papermill": {
     "duration": 8.753637,
     "end_time": "2024-07-11T05:25:36.836891",
     "exception": false,
     "start_time": "2024-07-11T05:25:28.083254",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "subs = pd.read_csv('/kaggle/input/playground-series-s4e7/sample_submission.csv')\n",
    "\n",
    "if len(subs) == len(best_pred):\n",
    "    subs['Response'] = best_pred\n",
    "    subs.to_csv('submission.csv', index=False)\n",
    "else:\n",
    "    print(f\"Error: Length of predictions ({len(best_pred)}) does not match length of submission file ({len(subs)}).\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 8930475,
     "sourceId": 73291,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 159.552641,
   "end_time": "2024-07-11T05:25:39.470591",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-11T05:22:59.917950",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

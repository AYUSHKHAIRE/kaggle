{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ec2c2312",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-07-11T05:34:41.572169Z",
     "iopub.status.busy": "2024-07-11T05:34:41.571677Z",
     "iopub.status.idle": "2024-07-11T05:34:44.652767Z",
     "shell.execute_reply": "2024-07-11T05:34:44.651574Z"
    },
    "papermill": {
     "duration": 3.099985,
     "end_time": "2024-07-11T05:34:44.655661",
     "exception": false,
     "start_time": "2024-07-11T05:34:41.555676",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from tqdm import tqdm\n",
    "import progressbar\n",
    "import math\n",
    "import warnings\n",
    "import itertools\n",
    "\n",
    "from sklearn.model_selection import train_test_split,GridSearchCV\n",
    "\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import classification_report\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97cea815",
   "metadata": {
    "papermill": {
     "duration": 0.013254,
     "end_time": "2024-07-11T05:34:44.682775",
     "exception": false,
     "start_time": "2024-07-11T05:34:44.669521",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Getting started"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3fc64f37",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:34:44.712935Z",
     "iopub.status.busy": "2024-07-11T05:34:44.711348Z",
     "iopub.status.idle": "2024-07-11T05:35:09.739958Z",
     "shell.execute_reply": "2024-07-11T05:35:09.738550Z"
    },
    "papermill": {
     "duration": 25.046828,
     "end_time": "2024-07-11T05:35:09.743097",
     "exception": false,
     "start_time": "2024-07-11T05:34:44.696269",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('/kaggle/input/playground-series-s4e7/train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c7533619",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:09.773005Z",
     "iopub.status.busy": "2024-07-11T05:35:09.772530Z",
     "iopub.status.idle": "2024-07-11T05:35:09.811987Z",
     "shell.execute_reply": "2024-07-11T05:35:09.810702Z"
    },
    "papermill": {
     "duration": 0.057487,
     "end_time": "2024-07-11T05:35:09.814684",
     "exception": false,
     "start_time": "2024-07-11T05:35:09.757197",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Driving_License</th>\n",
       "      <th>Region_Code</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Vintage</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>65101.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>187</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&gt; 2 Years</td>\n",
       "      <td>Yes</td>\n",
       "      <td>58911.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>288</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>38043.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>254</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>76</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>15.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>31951.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>294</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504793</th>\n",
       "      <td>11504793</td>\n",
       "      <td>Male</td>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>27412.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>218</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504794</th>\n",
       "      <td>11504794</td>\n",
       "      <td>Female</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "      <td>36.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>29509.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>115</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504795</th>\n",
       "      <td>11504795</td>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>189</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504796</th>\n",
       "      <td>11504796</td>\n",
       "      <td>Female</td>\n",
       "      <td>51</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>48443.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>274</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504797</th>\n",
       "      <td>11504797</td>\n",
       "      <td>Male</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>32855.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>189</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11504798 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id  Gender  Age  Driving_License  Region_Code  \\\n",
       "0                0    Male   21                1         35.0   \n",
       "1                1    Male   43                1         28.0   \n",
       "2                2  Female   25                1         14.0   \n",
       "3                3  Female   35                1          1.0   \n",
       "4                4  Female   36                1         15.0   \n",
       "...            ...     ...  ...              ...          ...   \n",
       "11504793  11504793    Male   48                1          6.0   \n",
       "11504794  11504794  Female   26                1         36.0   \n",
       "11504795  11504795  Female   29                1         32.0   \n",
       "11504796  11504796  Female   51                1         28.0   \n",
       "11504797  11504797    Male   25                1         28.0   \n",
       "\n",
       "          Previously_Insured Vehicle_Age Vehicle_Damage  Annual_Premium  \\\n",
       "0                          0    1-2 Year            Yes         65101.0   \n",
       "1                          0   > 2 Years            Yes         58911.0   \n",
       "2                          1    < 1 Year             No         38043.0   \n",
       "3                          0    1-2 Year            Yes          2630.0   \n",
       "4                          1    1-2 Year             No         31951.0   \n",
       "...                      ...         ...            ...             ...   \n",
       "11504793                   0    1-2 Year            Yes         27412.0   \n",
       "11504794                   0    < 1 Year            Yes         29509.0   \n",
       "11504795                   1    < 1 Year             No          2630.0   \n",
       "11504796                   0    1-2 Year            Yes         48443.0   \n",
       "11504797                   1    < 1 Year             No         32855.0   \n",
       "\n",
       "          Policy_Sales_Channel  Vintage  Response  \n",
       "0                        124.0      187         0  \n",
       "1                         26.0      288         1  \n",
       "2                        152.0      254         0  \n",
       "3                        156.0       76         0  \n",
       "4                        152.0      294         0  \n",
       "...                        ...      ...       ...  \n",
       "11504793                  26.0      218         0  \n",
       "11504794                 152.0      115         1  \n",
       "11504795                 152.0      189         0  \n",
       "11504796                  26.0      274         1  \n",
       "11504797                 152.0      189         0  \n",
       "\n",
       "[11504798 rows x 12 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "899bbb91",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:09.845687Z",
     "iopub.status.busy": "2024-07-11T05:35:09.845259Z",
     "iopub.status.idle": "2024-07-11T05:35:09.868454Z",
     "shell.execute_reply": "2024-07-11T05:35:09.867238Z"
    },
    "papermill": {
     "duration": 0.041837,
     "end_time": "2024-07-11T05:35:09.871618",
     "exception": false,
     "start_time": "2024-07-11T05:35:09.829781",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 11504798 entries, 0 to 11504797\n",
      "Data columns (total 12 columns):\n",
      " #   Column                Dtype  \n",
      "---  ------                -----  \n",
      " 0   id                    int64  \n",
      " 1   Gender                object \n",
      " 2   Age                   int64  \n",
      " 3   Driving_License       int64  \n",
      " 4   Region_Code           float64\n",
      " 5   Previously_Insured    int64  \n",
      " 6   Vehicle_Age           object \n",
      " 7   Vehicle_Damage        object \n",
      " 8   Annual_Premium        float64\n",
      " 9   Policy_Sales_Channel  float64\n",
      " 10  Vintage               int64  \n",
      " 11  Response              int64  \n",
      "dtypes: float64(3), int64(6), object(3)\n",
      "memory usage: 1.0+ GB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "26ebc863",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:09.903427Z",
     "iopub.status.busy": "2024-07-11T05:35:09.902694Z",
     "iopub.status.idle": "2024-07-11T05:35:13.728421Z",
     "shell.execute_reply": "2024-07-11T05:35:13.726976Z"
    },
    "papermill": {
     "duration": 3.844134,
     "end_time": "2024-07-11T05:35:13.731300",
     "exception": false,
     "start_time": "2024-07-11T05:35:09.887166",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Age</th>\n",
       "      <th>Driving_License</th>\n",
       "      <th>Region_Code</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Vintage</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>1.150480e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5.752398e+06</td>\n",
       "      <td>3.838356e+01</td>\n",
       "      <td>9.980220e-01</td>\n",
       "      <td>2.641869e+01</td>\n",
       "      <td>4.629966e-01</td>\n",
       "      <td>3.046137e+04</td>\n",
       "      <td>1.124254e+02</td>\n",
       "      <td>1.638977e+02</td>\n",
       "      <td>1.229973e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3.321149e+06</td>\n",
       "      <td>1.499346e+01</td>\n",
       "      <td>4.443120e-02</td>\n",
       "      <td>1.299159e+01</td>\n",
       "      <td>4.986289e-01</td>\n",
       "      <td>1.645475e+04</td>\n",
       "      <td>5.403571e+01</td>\n",
       "      <td>7.997953e+01</td>\n",
       "      <td>3.284341e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>2.000000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>2.630000e+03</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.876199e+06</td>\n",
       "      <td>2.400000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.500000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>2.527700e+04</td>\n",
       "      <td>2.900000e+01</td>\n",
       "      <td>9.900000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5.752398e+06</td>\n",
       "      <td>3.600000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>2.800000e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>3.182400e+04</td>\n",
       "      <td>1.510000e+02</td>\n",
       "      <td>1.660000e+02</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>8.628598e+06</td>\n",
       "      <td>4.900000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>3.500000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>3.945100e+04</td>\n",
       "      <td>1.520000e+02</td>\n",
       "      <td>2.320000e+02</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.150480e+07</td>\n",
       "      <td>8.500000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.200000e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.401650e+05</td>\n",
       "      <td>1.630000e+02</td>\n",
       "      <td>2.990000e+02</td>\n",
       "      <td>1.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 id           Age  Driving_License   Region_Code  \\\n",
       "count  1.150480e+07  1.150480e+07     1.150480e+07  1.150480e+07   \n",
       "mean   5.752398e+06  3.838356e+01     9.980220e-01  2.641869e+01   \n",
       "std    3.321149e+06  1.499346e+01     4.443120e-02  1.299159e+01   \n",
       "min    0.000000e+00  2.000000e+01     0.000000e+00  0.000000e+00   \n",
       "25%    2.876199e+06  2.400000e+01     1.000000e+00  1.500000e+01   \n",
       "50%    5.752398e+06  3.600000e+01     1.000000e+00  2.800000e+01   \n",
       "75%    8.628598e+06  4.900000e+01     1.000000e+00  3.500000e+01   \n",
       "max    1.150480e+07  8.500000e+01     1.000000e+00  5.200000e+01   \n",
       "\n",
       "       Previously_Insured  Annual_Premium  Policy_Sales_Channel       Vintage  \\\n",
       "count        1.150480e+07    1.150480e+07          1.150480e+07  1.150480e+07   \n",
       "mean         4.629966e-01    3.046137e+04          1.124254e+02  1.638977e+02   \n",
       "std          4.986289e-01    1.645475e+04          5.403571e+01  7.997953e+01   \n",
       "min          0.000000e+00    2.630000e+03          1.000000e+00  1.000000e+01   \n",
       "25%          0.000000e+00    2.527700e+04          2.900000e+01  9.900000e+01   \n",
       "50%          0.000000e+00    3.182400e+04          1.510000e+02  1.660000e+02   \n",
       "75%          1.000000e+00    3.945100e+04          1.520000e+02  2.320000e+02   \n",
       "max          1.000000e+00    5.401650e+05          1.630000e+02  2.990000e+02   \n",
       "\n",
       "           Response  \n",
       "count  1.150480e+07  \n",
       "mean   1.229973e-01  \n",
       "std    3.284341e-01  \n",
       "min    0.000000e+00  \n",
       "25%    0.000000e+00  \n",
       "50%    0.000000e+00  \n",
       "75%    0.000000e+00  \n",
       "max    1.000000e+00  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a6accb5e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:13.762859Z",
     "iopub.status.busy": "2024-07-11T05:35:13.762418Z",
     "iopub.status.idle": "2024-07-11T05:35:17.561076Z",
     "shell.execute_reply": "2024-07-11T05:35:17.559914Z"
    },
    "papermill": {
     "duration": 3.817825,
     "end_time": "2024-07-11T05:35:17.563923",
     "exception": false,
     "start_time": "2024-07-11T05:35:13.746098",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                      0\n",
       "Gender                  0\n",
       "Age                     0\n",
       "Driving_License         0\n",
       "Region_Code             0\n",
       "Previously_Insured      0\n",
       "Vehicle_Age             0\n",
       "Vehicle_Damage          0\n",
       "Annual_Premium          0\n",
       "Policy_Sales_Channel    0\n",
       "Vintage                 0\n",
       "Response                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "572cae83",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:17.596794Z",
     "iopub.status.busy": "2024-07-11T05:35:17.595741Z",
     "iopub.status.idle": "2024-07-11T05:35:36.258228Z",
     "shell.execute_reply": "2024-07-11T05:35:36.256600Z"
    },
    "papermill": {
     "duration": 18.681601,
     "end_time": "2024-07-11T05:35:36.261221",
     "exception": false,
     "start_time": "2024-07-11T05:35:17.579620",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(11504798, 12)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()\n",
    "df.drop_duplicates(inplace=True)\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1903ad88",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:36.295432Z",
     "iopub.status.busy": "2024-07-11T05:35:36.294040Z",
     "iopub.status.idle": "2024-07-11T05:35:46.876542Z",
     "shell.execute_reply": "2024-07-11T05:35:46.875380Z"
    },
    "papermill": {
     "duration": 10.602738,
     "end_time": "2024-07-11T05:35:46.879697",
     "exception": false,
     "start_time": "2024-07-11T05:35:36.276959",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.replace([np.inf, -np.inf], np.nan, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "41377ad1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:46.917652Z",
     "iopub.status.busy": "2024-07-11T05:35:46.917065Z",
     "iopub.status.idle": "2024-07-11T05:35:46.953247Z",
     "shell.execute_reply": "2024-07-11T05:35:46.951678Z"
    },
    "papermill": {
     "duration": 0.061225,
     "end_time": "2024-07-11T05:35:46.956449",
     "exception": false,
     "start_time": "2024-07-11T05:35:46.895224",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Driving_License</th>\n",
       "      <th>Region_Code</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Vintage</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>65101.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>187</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&gt; 2 Years</td>\n",
       "      <td>Yes</td>\n",
       "      <td>58911.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>288</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>38043.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>254</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>76</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>15.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>31951.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>294</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504793</th>\n",
       "      <td>11504793</td>\n",
       "      <td>Male</td>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>27412.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>218</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504794</th>\n",
       "      <td>11504794</td>\n",
       "      <td>Female</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "      <td>36.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>29509.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>115</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504795</th>\n",
       "      <td>11504795</td>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>189</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504796</th>\n",
       "      <td>11504796</td>\n",
       "      <td>Female</td>\n",
       "      <td>51</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>48443.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>274</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504797</th>\n",
       "      <td>11504797</td>\n",
       "      <td>Male</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>32855.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>189</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11504798 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id  Gender  Age  Driving_License  Region_Code  \\\n",
       "0                0    Male   21                1         35.0   \n",
       "1                1    Male   43                1         28.0   \n",
       "2                2  Female   25                1         14.0   \n",
       "3                3  Female   35                1          1.0   \n",
       "4                4  Female   36                1         15.0   \n",
       "...            ...     ...  ...              ...          ...   \n",
       "11504793  11504793    Male   48                1          6.0   \n",
       "11504794  11504794  Female   26                1         36.0   \n",
       "11504795  11504795  Female   29                1         32.0   \n",
       "11504796  11504796  Female   51                1         28.0   \n",
       "11504797  11504797    Male   25                1         28.0   \n",
       "\n",
       "          Previously_Insured Vehicle_Age Vehicle_Damage  Annual_Premium  \\\n",
       "0                          0    1-2 Year            Yes         65101.0   \n",
       "1                          0   > 2 Years            Yes         58911.0   \n",
       "2                          1    < 1 Year             No         38043.0   \n",
       "3                          0    1-2 Year            Yes          2630.0   \n",
       "4                          1    1-2 Year             No         31951.0   \n",
       "...                      ...         ...            ...             ...   \n",
       "11504793                   0    1-2 Year            Yes         27412.0   \n",
       "11504794                   0    < 1 Year            Yes         29509.0   \n",
       "11504795                   1    < 1 Year             No          2630.0   \n",
       "11504796                   0    1-2 Year            Yes         48443.0   \n",
       "11504797                   1    < 1 Year             No         32855.0   \n",
       "\n",
       "          Policy_Sales_Channel  Vintage  Response  \n",
       "0                        124.0      187         0  \n",
       "1                         26.0      288         1  \n",
       "2                        152.0      254         0  \n",
       "3                        156.0       76         0  \n",
       "4                        152.0      294         0  \n",
       "...                        ...      ...       ...  \n",
       "11504793                  26.0      218         0  \n",
       "11504794                 152.0      115         1  \n",
       "11504795                 152.0      189         0  \n",
       "11504796                  26.0      274         1  \n",
       "11504797                 152.0      189         0  \n",
       "\n",
       "[11504798 rows x 12 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb0d0d1b",
   "metadata": {
    "papermill": {
     "duration": 0.017977,
     "end_time": "2024-07-11T05:35:46.994532",
     "exception": false,
     "start_time": "2024-07-11T05:35:46.976555",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Plot distributions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "84e94a46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:47.029431Z",
     "iopub.status.busy": "2024-07-11T05:35:47.029014Z",
     "iopub.status.idle": "2024-07-11T05:35:52.001384Z",
     "shell.execute_reply": "2024-07-11T05:35:52.000242Z"
    },
    "papermill": {
     "duration": 4.993855,
     "end_time": "2024-07-11T05:35:52.004228",
     "exception": false,
     "start_time": "2024-07-11T05:35:47.010373",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Age', 'Region_Code', 'Annual_Premium', 'Policy_Sales_Channel', 'Vintage']"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_list = []\n",
    "\n",
    "for col in df.columns:\n",
    "    if df[col].nunique() > 3:\n",
    "        num_list.append(col)\n",
    "        \n",
    "num_list = num_list[1:]\n",
    "num_list"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "19ce17b8",
   "metadata": {
    "papermill": {
     "duration": 0.015885,
     "end_time": "2024-07-11T05:35:52.036422",
     "exception": false,
     "start_time": "2024-07-11T05:35:52.020537",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## a sample"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "fc90df75",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:52.071400Z",
     "iopub.status.busy": "2024-07-11T05:35:52.070972Z",
     "iopub.status.idle": "2024-07-11T05:35:52.076882Z",
     "shell.execute_reply": "2024-07-11T05:35:52.075388Z"
    },
    "papermill": {
     "duration": 0.025751,
     "end_time": "2024-07-11T05:35:52.079480",
     "exception": false,
     "start_time": "2024-07-11T05:35:52.053729",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), len(num_list), figsize=(25, 25))\n",
    "# df_sample = df.sample(100000)\n",
    "# bar = progressbar.ProgressBar(max_value=len(num_list)*len(num_list))\n",
    "# t = 0\n",
    "# for i, col1 in enumerate(num_list):\n",
    "#     for j, col2 in enumerate(num_list):\n",
    "#         plt.sca(ax[i, j])\n",
    "#         sns.scatterplot(data=df_sample, x=col1, y=col2, hue='Response', ax=ax[i, j])\n",
    "#         bar.update(t+1)\n",
    "#         t = t+1\n",
    "# plt.tight_layout()\n",
    "# # may be image building take time\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "d168cef9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:52.113850Z",
     "iopub.status.busy": "2024-07-11T05:35:52.112581Z",
     "iopub.status.idle": "2024-07-11T05:35:52.118485Z",
     "shell.execute_reply": "2024-07-11T05:35:52.117377Z"
    },
    "papermill": {
     "duration": 0.025816,
     "end_time": "2024-07-11T05:35:52.121173",
     "exception": false,
     "start_time": "2024-07-11T05:35:52.095357",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), 1, figsize=(8, len(num_list) * 4))  \n",
    "\n",
    "# for i, col in enumerate(tqdm(num_list, desc=\"Plotting\")):\n",
    "#     plt.sca(ax[i])\n",
    "#     sns.histplot(data=df_sample, x=col, kde=True)\n",
    "#     ax[i].set_title(f'Distribution of {col}')\n",
    "\n",
    "# plt.tight_layout()\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26694a8b",
   "metadata": {
    "papermill": {
     "duration": 0.016209,
     "end_time": "2024-07-11T05:35:52.154301",
     "exception": false,
     "start_time": "2024-07-11T05:35:52.138092",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Resopnse with 1 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "5f3d4200",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:52.187520Z",
     "iopub.status.busy": "2024-07-11T05:35:52.187084Z",
     "iopub.status.idle": "2024-07-11T05:35:52.192539Z",
     "shell.execute_reply": "2024-07-11T05:35:52.191070Z"
    },
    "papermill": {
     "duration": 0.025119,
     "end_time": "2024-07-11T05:35:52.195146",
     "exception": false,
     "start_time": "2024-07-11T05:35:52.170027",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# df_resp_1 = df[df['Response'] == 1]\n",
    "# df_resp_0 = df[df['Response'] == 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "dcf73ed3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:52.229846Z",
     "iopub.status.busy": "2024-07-11T05:35:52.229402Z",
     "iopub.status.idle": "2024-07-11T05:35:52.234703Z",
     "shell.execute_reply": "2024-07-11T05:35:52.233508Z"
    },
    "papermill": {
     "duration": 0.025724,
     "end_time": "2024-07-11T05:35:52.237226",
     "exception": false,
     "start_time": "2024-07-11T05:35:52.211502",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), len(num_list), figsize=(25, 25))\n",
    "\n",
    "# bar = progressbar.ProgressBar(max_value=len(num_list)*len(num_list))\n",
    "# t = 0\n",
    "# for i, col1 in enumerate(num_list):\n",
    "#     for j, col2 in enumerate(num_list):\n",
    "#         plt.sca(ax[i, j])\n",
    "#         sns.scatterplot(data=df_resp_1, x=col1, y=col2, ax=ax[i, j])\n",
    "#         bar.update(t+1)\n",
    "#         t = t+1\n",
    "# plt.tight_layout()\n",
    "# # may be image building take time\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "002b253c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:52.272130Z",
     "iopub.status.busy": "2024-07-11T05:35:52.271687Z",
     "iopub.status.idle": "2024-07-11T05:35:52.277349Z",
     "shell.execute_reply": "2024-07-11T05:35:52.276009Z"
    },
    "papermill": {
     "duration": 0.02607,
     "end_time": "2024-07-11T05:35:52.280102",
     "exception": false,
     "start_time": "2024-07-11T05:35:52.254032",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), 1, figsize=(8, len(num_list) * 4))  \n",
    "\n",
    "# for i, col in enumerate(tqdm(num_list, desc=\"Plotting\")):\n",
    "#     plt.sca(ax[i])\n",
    "#     sns.histplot(data=df_resp_1, x=col, kde=True)\n",
    "#     sns.histplot(data=df_resp_0, x=col, kde=True)\n",
    "#     ax[i].set_title(f'Distribution of {col}')\n",
    "\n",
    "# plt.tight_layout()\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0d4bcfce",
   "metadata": {
    "papermill": {
     "duration": 0.015324,
     "end_time": "2024-07-11T05:35:52.311115",
     "exception": false,
     "start_time": "2024-07-11T05:35:52.295791",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Response with 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "25763c83",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:52.345224Z",
     "iopub.status.busy": "2024-07-11T05:35:52.343871Z",
     "iopub.status.idle": "2024-07-11T05:35:52.349807Z",
     "shell.execute_reply": "2024-07-11T05:35:52.348724Z"
    },
    "papermill": {
     "duration": 0.025463,
     "end_time": "2024-07-11T05:35:52.352251",
     "exception": false,
     "start_time": "2024-07-11T05:35:52.326788",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(len(num_list), len(num_list), figsize=(25, 25))\n",
    "# df_resp_0 = df[df['Response'] == 0]\n",
    "# bar = progressbar.ProgressBar(max_value=len(num_list)*len(num_list))\n",
    "# t = 0\n",
    "# for i, col1 in enumerate(num_list):\n",
    "#     for j, col2 in enumerate(num_list):\n",
    "#         plt.sca(ax[i, j])\n",
    "#         sns.scatterplot(data=df_resp_0, x=col1, y=col2, ax=ax[i, j])\n",
    "#         bar.update(t+1)\n",
    "#         t = t+1\n",
    "# plt.tight_layout()\n",
    "# # may be image building take time\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "15a48249",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:52.385312Z",
     "iopub.status.busy": "2024-07-11T05:35:52.384896Z",
     "iopub.status.idle": "2024-07-11T05:35:52.390998Z",
     "shell.execute_reply": "2024-07-11T05:35:52.389784Z"
    },
    "papermill": {
     "duration": 0.025533,
     "end_time": "2024-07-11T05:35:52.393514",
     "exception": false,
     "start_time": "2024-07-11T05:35:52.367981",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fig, ax = plt.subplots(1, 4, figsize=(12, 6))\n",
    "# gender_counts = df['Gender'].value_counts()\n",
    "# vehicle_damage_counts = df['Vehicle_Damage'].value_counts()\n",
    "# resp_counts = df['Response'].value_counts()\n",
    "# vehicle_age_counts = df['Vehicle_Age'].value_counts()\n",
    "# ax[0].pie(gender_counts, labels=gender_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette(\"pastel\"))\n",
    "# ax[0].set_title('Gender')\n",
    "# ax[1].pie(vehicle_damage_counts, labels=vehicle_damage_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette(\"pastel\"))\n",
    "# ax[1].set_title('Vehicle Damage')\n",
    "# ax[2].pie(resp_counts, labels=resp_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette(\"pastel\"))\n",
    "# ax[2].set_title('Response')\n",
    "# ax[3].pie(vehicle_age_counts, labels=vehicle_age_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette(\"pastel\"))\n",
    "# ax[3].set_title('Vehicle Age')\n",
    "# plt.tight_layout()\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "74739e10",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:52.427401Z",
     "iopub.status.busy": "2024-07-11T05:35:52.426995Z",
     "iopub.status.idle": "2024-07-11T05:35:52.432740Z",
     "shell.execute_reply": "2024-07-11T05:35:52.431621Z"
    },
    "papermill": {
     "duration": 0.02549,
     "end_time": "2024-07-11T05:35:52.435437",
     "exception": false,
     "start_time": "2024-07-11T05:35:52.409947",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# columns = list(df.columns)[1:-1]\n",
    "# num_columns = len(columns)\n",
    "# breadth = 3\n",
    "# length = math.ceil(num_columns / breadth)\n",
    "\n",
    "# # Create subplots\n",
    "# fig, ax = plt.subplots(length, breadth, figsize=(15, 5 * length))\n",
    "\n",
    "# k = 0\n",
    "\n",
    "# bar = progressbar.ProgressBar(max_value=num_columns)\n",
    "\n",
    "# # Flatten the axes array for easier indexing\n",
    "# ax = ax.flatten()\n",
    "\n",
    "# for i in range(len(ax)):\n",
    "#     if k < num_columns:\n",
    "#         sns.scatterplot(\n",
    "#             data=df,\n",
    "#             x=columns[k],\n",
    "#             y='Response',\n",
    "#             ax=ax[i]\n",
    "#         )\n",
    "#         ax[i].set_title(f\"{columns[k]} vs Response\")\n",
    "#         k += 1\n",
    "#     else:\n",
    "#         ax[i].axis('off')\n",
    "#     bar.update(k)\n",
    "\n",
    "# plt.tight_layout()\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "d26ccee7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:52.469966Z",
     "iopub.status.busy": "2024-07-11T05:35:52.468538Z",
     "iopub.status.idle": "2024-07-11T05:35:52.474278Z",
     "shell.execute_reply": "2024-07-11T05:35:52.472900Z"
    },
    "papermill": {
     "duration": 0.025771,
     "end_time": "2024-07-11T05:35:52.476925",
     "exception": false,
     "start_time": "2024-07-11T05:35:52.451154",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# sns.heatmap(df[num_list].corr(), cmap=\"Greens\", annot=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "f197ae90",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:52.511122Z",
     "iopub.status.busy": "2024-07-11T05:35:52.510687Z",
     "iopub.status.idle": "2024-07-11T05:35:53.103787Z",
     "shell.execute_reply": "2024-07-11T05:35:53.102535Z"
    },
    "papermill": {
     "duration": 0.614204,
     "end_time": "2024-07-11T05:35:53.106980",
     "exception": false,
     "start_time": "2024-07-11T05:35:52.492776",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.drop(columns = ['Driving_License','Region_Code','Vintage'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "80f785a2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:53.205785Z",
     "iopub.status.busy": "2024-07-11T05:35:53.204397Z",
     "iopub.status.idle": "2024-07-11T05:35:53.225461Z",
     "shell.execute_reply": "2024-07-11T05:35:53.223983Z"
    },
    "papermill": {
     "duration": 0.105067,
     "end_time": "2024-07-11T05:35:53.228287",
     "exception": false,
     "start_time": "2024-07-11T05:35:53.123220",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>65101.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>&gt; 2 Years</td>\n",
       "      <td>Yes</td>\n",
       "      <td>58911.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>38043.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>31951.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504793</th>\n",
       "      <td>11504793</td>\n",
       "      <td>Male</td>\n",
       "      <td>48</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>27412.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504794</th>\n",
       "      <td>11504794</td>\n",
       "      <td>Female</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>29509.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504795</th>\n",
       "      <td>11504795</td>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504796</th>\n",
       "      <td>11504796</td>\n",
       "      <td>Female</td>\n",
       "      <td>51</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>48443.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504797</th>\n",
       "      <td>11504797</td>\n",
       "      <td>Male</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>32855.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11504798 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id  Gender  Age  Previously_Insured Vehicle_Age  \\\n",
       "0                0    Male   21                   0    1-2 Year   \n",
       "1                1    Male   43                   0   > 2 Years   \n",
       "2                2  Female   25                   1    < 1 Year   \n",
       "3                3  Female   35                   0    1-2 Year   \n",
       "4                4  Female   36                   1    1-2 Year   \n",
       "...            ...     ...  ...                 ...         ...   \n",
       "11504793  11504793    Male   48                   0    1-2 Year   \n",
       "11504794  11504794  Female   26                   0    < 1 Year   \n",
       "11504795  11504795  Female   29                   1    < 1 Year   \n",
       "11504796  11504796  Female   51                   0    1-2 Year   \n",
       "11504797  11504797    Male   25                   1    < 1 Year   \n",
       "\n",
       "         Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  Response  \n",
       "0                   Yes         65101.0                 124.0         0  \n",
       "1                   Yes         58911.0                  26.0         1  \n",
       "2                    No         38043.0                 152.0         0  \n",
       "3                   Yes          2630.0                 156.0         0  \n",
       "4                    No         31951.0                 152.0         0  \n",
       "...                 ...             ...                   ...       ...  \n",
       "11504793            Yes         27412.0                  26.0         0  \n",
       "11504794            Yes         29509.0                 152.0         1  \n",
       "11504795             No          2630.0                 152.0         0  \n",
       "11504796            Yes         48443.0                  26.0         1  \n",
       "11504797             No         32855.0                 152.0         0  \n",
       "\n",
       "[11504798 rows x 9 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "80f5f974",
   "metadata": {
    "papermill": {
     "duration": 0.015683,
     "end_time": "2024-07-11T05:35:53.260469",
     "exception": false,
     "start_time": "2024-07-11T05:35:53.244786",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Pre processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "04d86783",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:53.294620Z",
     "iopub.status.busy": "2024-07-11T05:35:53.294178Z",
     "iopub.status.idle": "2024-07-11T05:35:53.301259Z",
     "shell.execute_reply": "2024-07-11T05:35:53.299877Z"
    },
    "papermill": {
     "duration": 0.027068,
     "end_time": "2024-07-11T05:35:53.303865",
     "exception": false,
     "start_time": "2024-07-11T05:35:53.276797",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "encoder_dict = {\n",
    "    'Gender' : {\n",
    "        'Male':0,\n",
    "        'Female':1\n",
    "    },\n",
    "    'Vehicle_Age' : {\n",
    "        '< 1 Year':0.5,\n",
    "        '1-2 Year':1.5,\n",
    "        '> 2 Years':2.5\n",
    "    },\n",
    "    'Vehicle_Damage' : {\n",
    "        'Yes':1,\n",
    "        'No':0\n",
    "    }\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ee6c0937",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:35:53.337995Z",
     "iopub.status.busy": "2024-07-11T05:35:53.337527Z",
     "iopub.status.idle": "2024-07-11T05:36:17.054904Z",
     "shell.execute_reply": "2024-07-11T05:36:17.053450Z"
    },
    "papermill": {
     "duration": 23.737749,
     "end_time": "2024-07-11T05:36:17.057739",
     "exception": false,
     "start_time": "2024-07-11T05:35:53.319990",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Response</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>65101.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>1</td>\n",
       "      <td>58911.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>38043.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0</td>\n",
       "      <td>31951.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504793</th>\n",
       "      <td>11504793</td>\n",
       "      <td>0</td>\n",
       "      <td>48</td>\n",
       "      <td>0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>27412.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504794</th>\n",
       "      <td>11504794</td>\n",
       "      <td>1</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>29509.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504795</th>\n",
       "      <td>11504795</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504796</th>\n",
       "      <td>11504796</td>\n",
       "      <td>1</td>\n",
       "      <td>51</td>\n",
       "      <td>0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>48443.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11504797</th>\n",
       "      <td>11504797</td>\n",
       "      <td>0</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>32855.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11504798 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id  Gender  Age  Previously_Insured  Vehicle_Age  \\\n",
       "0                0       0   21                   0          1.5   \n",
       "1                1       0   43                   0          2.5   \n",
       "2                2       1   25                   1          0.5   \n",
       "3                3       1   35                   0          1.5   \n",
       "4                4       1   36                   1          1.5   \n",
       "...            ...     ...  ...                 ...          ...   \n",
       "11504793  11504793       0   48                   0          1.5   \n",
       "11504794  11504794       1   26                   0          0.5   \n",
       "11504795  11504795       1   29                   1          0.5   \n",
       "11504796  11504796       1   51                   0          1.5   \n",
       "11504797  11504797       0   25                   1          0.5   \n",
       "\n",
       "          Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  Response  \n",
       "0                      1         65101.0                 124.0         0  \n",
       "1                      1         58911.0                  26.0         1  \n",
       "2                      0         38043.0                 152.0         0  \n",
       "3                      1          2630.0                 156.0         0  \n",
       "4                      0         31951.0                 152.0         0  \n",
       "...                  ...             ...                   ...       ...  \n",
       "11504793               1         27412.0                  26.0         0  \n",
       "11504794               1         29509.0                 152.0         1  \n",
       "11504795               0          2630.0                 152.0         0  \n",
       "11504796               1         48443.0                  26.0         1  \n",
       "11504797               0         32855.0                 152.0         0  \n",
       "\n",
       "[11504798 rows x 9 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.replace(encoder_dict, inplace=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "12e1ce8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:36:17.093139Z",
     "iopub.status.busy": "2024-07-11T05:36:17.092678Z",
     "iopub.status.idle": "2024-07-11T05:36:17.375322Z",
     "shell.execute_reply": "2024-07-11T05:36:17.373995Z"
    },
    "papermill": {
     "duration": 0.303441,
     "end_time": "2024-07-11T05:36:17.378272",
     "exception": false,
     "start_time": "2024-07-11T05:36:17.074831",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "x = df.iloc[:,1 :-1]\n",
    "y = df.iloc[:, -1]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9d5b339",
   "metadata": {
    "papermill": {
     "duration": 0.016205,
     "end_time": "2024-07-11T05:36:17.411434",
     "exception": false,
     "start_time": "2024-07-11T05:36:17.395229",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Model training "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "cfa82b52",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:36:17.446929Z",
     "iopub.status.busy": "2024-07-11T05:36:17.446449Z",
     "iopub.status.idle": "2024-07-11T05:36:19.976063Z",
     "shell.execute_reply": "2024-07-11T05:36:19.974419Z"
    },
    "papermill": {
     "duration": 2.551296,
     "end_time": "2024-07-11T05:36:19.979219",
     "exception": false,
     "start_time": "2024-07-11T05:36:17.427923",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "x_train,x_test,y_train,y_test = train_test_split(\n",
    "    x,y\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4595b97c",
   "metadata": {
    "papermill": {
     "duration": 0.016305,
     "end_time": "2024-07-11T05:36:20.012388",
     "exception": false,
     "start_time": "2024-07-11T05:36:19.996083",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Logistic regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "6e2c608d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:36:20.047435Z",
     "iopub.status.busy": "2024-07-11T05:36:20.047015Z",
     "iopub.status.idle": "2024-07-11T05:37:10.345630Z",
     "shell.execute_reply": "2024-07-11T05:37:10.344167Z"
    },
    "papermill": {
     "duration": 50.335026,
     "end_time": "2024-07-11T05:37:10.363939",
     "exception": false,
     "start_time": "2024-07-11T05:36:20.028913",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.8702277310340032\n"
     ]
    }
   ],
   "source": [
    "# 'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga'],\n",
    "lr = LogisticRegression(\n",
    "    max_iter=100,\n",
    "    C = 0.1,\n",
    "    n_jobs = -1,\n",
    ")\n",
    "lr.fit(x_train,y_train)\n",
    "y_pred_lr = lr.predict(x_test)\n",
    "print(\"Accuracy:\", accuracy_score(y_test, y_pred_lr))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "264155f7",
   "metadata": {
    "papermill": {
     "duration": 0.017764,
     "end_time": "2024-07-11T05:37:10.400439",
     "exception": false,
     "start_time": "2024-07-11T05:37:10.382675",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Decision tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "bc5bf431",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:37:10.438043Z",
     "iopub.status.busy": "2024-07-11T05:37:10.437386Z",
     "iopub.status.idle": "2024-07-11T05:38:00.847171Z",
     "shell.execute_reply": "2024-07-11T05:38:00.845510Z"
    },
    "papermill": {
     "duration": 50.448337,
     "end_time": "2024-07-11T05:38:00.866178",
     "exception": false,
     "start_time": "2024-07-11T05:37:10.417841",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.8769028579375565\n"
     ]
    }
   ],
   "source": [
    "DT = DecisionTreeClassifier(\n",
    "    max_depth = 7,\n",
    "    class_weight = {\n",
    "        1:0.12,\n",
    "        0:0.88\n",
    "    }\n",
    ")\n",
    "DT.fit(x_train,y_train)\n",
    "y_pred_DT = DT.predict(x_test)\n",
    "print(\"Accuracy:\", accuracy_score(y_test, y_pred_DT))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "653dde57",
   "metadata": {
    "papermill": {
     "duration": 0.016365,
     "end_time": "2024-07-11T05:38:00.899253",
     "exception": false,
     "start_time": "2024-07-11T05:38:00.882888",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "889443e0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:38:00.935695Z",
     "iopub.status.busy": "2024-07-11T05:38:00.935279Z",
     "iopub.status.idle": "2024-07-11T05:38:00.940494Z",
     "shell.execute_reply": "2024-07-11T05:38:00.939179Z"
    },
    "papermill": {
     "duration": 0.026033,
     "end_time": "2024-07-11T05:38:00.943348",
     "exception": false,
     "start_time": "2024-07-11T05:38:00.917315",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# RF = RandomForestClassifier(n_estimators=10)\n",
    "# RF.fit(x_train,y_train)\n",
    "# y_pred_RF = DT.predict(x_test)\n",
    "# print(\"Accuracy:\", accuracy_score(y_test, y_pred_RF))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51e611d1",
   "metadata": {
    "papermill": {
     "duration": 0.016277,
     "end_time": "2024-07-11T05:38:00.976456",
     "exception": false,
     "start_time": "2024-07-11T05:38:00.960179",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Testing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "1b467a80",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:38:01.011416Z",
     "iopub.status.busy": "2024-07-11T05:38:01.011016Z",
     "iopub.status.idle": "2024-07-11T05:38:17.029975Z",
     "shell.execute_reply": "2024-07-11T05:38:17.028579Z"
    },
    "papermill": {
     "duration": 16.040034,
     "end_time": "2024-07-11T05:38:17.033080",
     "exception": false,
     "start_time": "2024-07-11T05:38:00.993046",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tdf = pd.read_csv('/kaggle/input/playground-series-s4e7/test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "3fffab5c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:38:17.069209Z",
     "iopub.status.busy": "2024-07-11T05:38:17.068734Z",
     "iopub.status.idle": "2024-07-11T05:38:17.595335Z",
     "shell.execute_reply": "2024-07-11T05:38:17.593921Z"
    },
    "papermill": {
     "duration": 0.547868,
     "end_time": "2024-07-11T05:38:17.598138",
     "exception": false,
     "start_time": "2024-07-11T05:38:17.050270",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Driving_License</th>\n",
       "      <th>Region_Code</th>\n",
       "      <th>Previously_Insured</th>\n",
       "      <th>Vehicle_Age</th>\n",
       "      <th>Vehicle_Damage</th>\n",
       "      <th>Annual_Premium</th>\n",
       "      <th>Policy_Sales_Channel</th>\n",
       "      <th>Vintage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Female</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>47.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>160.0</td>\n",
       "      <td>228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Male</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>37483.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>43.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>24502.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Male</td>\n",
       "      <td>51</td>\n",
       "      <td>1</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>34115.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669861</th>\n",
       "      <td>Male</td>\n",
       "      <td>57</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>51661.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669862</th>\n",
       "      <td>Male</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>50.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>25651.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>184</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669863</th>\n",
       "      <td>Male</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1-2 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>2630.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669864</th>\n",
       "      <td>Male</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>38866.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7669865</th>\n",
       "      <td>Male</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>46.0</td>\n",
       "      <td>1</td>\n",
       "      <td>&lt; 1 Year</td>\n",
       "      <td>No</td>\n",
       "      <td>27498.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7669866 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Gender  Age  Driving_License  Region_Code  Previously_Insured  \\\n",
       "0        Female   20                1         47.0                   0   \n",
       "1          Male   47                1         28.0                   0   \n",
       "2          Male   47                1         43.0                   0   \n",
       "3        Female   22                1         47.0                   1   \n",
       "4          Male   51                1         19.0                   0   \n",
       "...         ...  ...              ...          ...                 ...   \n",
       "7669861    Male   57                1         28.0                   0   \n",
       "7669862    Male   28                1         50.0                   1   \n",
       "7669863    Male   47                1         33.0                   1   \n",
       "7669864    Male   30                1         28.0                   0   \n",
       "7669865    Male   23                1         46.0                   1   \n",
       "\n",
       "        Vehicle_Age Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  \\\n",
       "0          < 1 Year             No          2630.0                 160.0   \n",
       "1          1-2 Year            Yes         37483.0                 124.0   \n",
       "2          1-2 Year            Yes          2630.0                  26.0   \n",
       "3          < 1 Year             No         24502.0                 152.0   \n",
       "4          1-2 Year             No         34115.0                 124.0   \n",
       "...             ...            ...             ...                   ...   \n",
       "7669861    1-2 Year            Yes         51661.0                 124.0   \n",
       "7669862    < 1 Year             No         25651.0                 152.0   \n",
       "7669863    1-2 Year             No          2630.0                 138.0   \n",
       "7669864    < 1 Year            Yes         38866.0                 124.0   \n",
       "7669865    < 1 Year             No         27498.0                 152.0   \n",
       "\n",
       "         Vintage  \n",
       "0            228  \n",
       "1            123  \n",
       "2            271  \n",
       "3            115  \n",
       "4            148  \n",
       "...          ...  \n",
       "7669861      109  \n",
       "7669862      184  \n",
       "7669863       63  \n",
       "7669864      119  \n",
       "7669865       79  \n",
       "\n",
       "[7669866 rows x 10 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tdf = tdf.drop(columns = ['id'])\n",
    "tdf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "e202ae39",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:38:17.635917Z",
     "iopub.status.busy": "2024-07-11T05:38:17.635445Z",
     "iopub.status.idle": "2024-07-11T05:38:33.504968Z",
     "shell.execute_reply": "2024-07-11T05:38:33.503575Z"
    },
    "papermill": {
     "duration": 15.892652,
     "end_time": "2024-07-11T05:38:33.508099",
     "exception": false,
     "start_time": "2024-07-11T05:38:17.615447",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tdf.replace(encoder_dict, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "0ed7b4da",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:38:33.544932Z",
     "iopub.status.busy": "2024-07-11T05:38:33.544324Z",
     "iopub.status.idle": "2024-07-11T05:38:33.734398Z",
     "shell.execute_reply": "2024-07-11T05:38:33.733182Z"
    },
    "papermill": {
     "duration": 0.211457,
     "end_time": "2024-07-11T05:38:33.737254",
     "exception": false,
     "start_time": "2024-07-11T05:38:33.525797",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tdf = tdf.drop(columns = ['Driving_License','Region_Code','Vintage'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "838af36b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:38:33.775558Z",
     "iopub.status.busy": "2024-07-11T05:38:33.774531Z",
     "iopub.status.idle": "2024-07-11T05:38:34.136909Z",
     "shell.execute_reply": "2024-07-11T05:38:34.135386Z"
    },
    "papermill": {
     "duration": 0.384416,
     "end_time": "2024-07-11T05:38:34.140435",
     "exception": false,
     "start_time": "2024-07-11T05:38:33.756019",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "best_pred = lr.predict(tdf)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ab5adf9",
   "metadata": {
    "papermill": {
     "duration": 0.019607,
     "end_time": "2024-07-11T05:38:34.181854",
     "exception": false,
     "start_time": "2024-07-11T05:38:34.162247",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "ddd6ecd3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T05:38:34.222087Z",
     "iopub.status.busy": "2024-07-11T05:38:34.221663Z",
     "iopub.status.idle": "2024-07-11T05:38:48.430015Z",
     "shell.execute_reply": "2024-07-11T05:38:48.428412Z"
    },
    "papermill": {
     "duration": 14.230424,
     "end_time": "2024-07-11T05:38:48.433328",
     "exception": false,
     "start_time": "2024-07-11T05:38:34.202904",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "subs = pd.read_csv('/kaggle/input/playground-series-s4e7/sample_submission.csv')\n",
    "\n",
    "if len(subs) == len(best_pred):\n",
    "    subs['Response'] = best_pred\n",
    "    subs.to_csv('submission.csv', index=False)\n",
    "else:\n",
    "    print(f\"Error: Length of predictions ({len(best_pred)}) does not match length of submission file ({len(subs)}).\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 8930475,
     "sourceId": 73291,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 252.679353,
   "end_time": "2024-07-11T05:38:51.074698",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-11T05:34:38.395345",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

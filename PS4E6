{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0b13a26d",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:38.219910Z",
     "iopub.status.busy": "2024-06-01T09:11:38.219544Z",
     "iopub.status.idle": "2024-06-01T09:11:40.654549Z",
     "shell.execute_reply": "2024-06-01T09:11:40.653234Z"
    },
    "papermill": {
     "duration": 2.449393,
     "end_time": "2024-06-01T09:11:40.657154",
     "exception": false,
     "start_time": "2024-06-01T09:11:38.207761",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.preprocessing import LabelEncoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "394f7159",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:40.679467Z",
     "iopub.status.busy": "2024-06-01T09:11:40.678937Z",
     "iopub.status.idle": "2024-06-01T09:11:41.033756Z",
     "shell.execute_reply": "2024-06-01T09:11:41.032733Z"
    },
    "papermill": {
     "duration": 0.368693,
     "end_time": "2024-06-01T09:11:41.036394",
     "exception": false,
     "start_time": "2024-06-01T09:11:40.667701",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('/kaggle/input/playground-series-s4e6/train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5b59b275",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:41.057963Z",
     "iopub.status.busy": "2024-06-01T09:11:41.057594Z",
     "iopub.status.idle": "2024-06-01T09:11:41.114103Z",
     "shell.execute_reply": "2024-06-01T09:11:41.113076Z"
    },
    "papermill": {
     "duration": 0.070201,
     "end_time": "2024-06-01T09:11:41.116544",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.046343",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Marital status</th>\n",
       "      <th>Application mode</th>\n",
       "      <th>Application order</th>\n",
       "      <th>Course</th>\n",
       "      <th>Daytime/evening attendance</th>\n",
       "      <th>Previous qualification</th>\n",
       "      <th>Previous qualification (grade)</th>\n",
       "      <th>Nacionality</th>\n",
       "      <th>Mother's qualification</th>\n",
       "      <th>...</th>\n",
       "      <th>Curricular units 2nd sem (credited)</th>\n",
       "      <th>Curricular units 2nd sem (enrolled)</th>\n",
       "      <th>Curricular units 2nd sem (evaluations)</th>\n",
       "      <th>Curricular units 2nd sem (approved)</th>\n",
       "      <th>Curricular units 2nd sem (grade)</th>\n",
       "      <th>Curricular units 2nd sem (without evaluations)</th>\n",
       "      <th>Unemployment rate</th>\n",
       "      <th>Inflation rate</th>\n",
       "      <th>GDP</th>\n",
       "      <th>Target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9238</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>126.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>12.428571</td>\n",
       "      <td>0</td>\n",
       "      <td>11.1</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.02</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>9238</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>125.0</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>11.1</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.02</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "      <td>2</td>\n",
       "      <td>9254</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>137.0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>16.2</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.92</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>9500</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>131.0</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>11</td>\n",
       "      <td>7</td>\n",
       "      <td>12.820000</td>\n",
       "      <td>0</td>\n",
       "      <td>11.1</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.02</td>\n",
       "      <td>Enrolled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>9500</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>132.0</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>12.933333</td>\n",
       "      <td>0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0.32</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76513</th>\n",
       "      <td>76513</td>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>9254</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>121.0</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>10.600000</td>\n",
       "      <td>0</td>\n",
       "      <td>13.9</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>0.79</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76514</th>\n",
       "      <td>76514</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>9254</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>125.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>6</td>\n",
       "      <td>13.875000</td>\n",
       "      <td>0</td>\n",
       "      <td>9.4</td>\n",
       "      <td>-0.8</td>\n",
       "      <td>-3.12</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76515</th>\n",
       "      <td>76515</td>\n",
       "      <td>5</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>9085</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>11.400000</td>\n",
       "      <td>1</td>\n",
       "      <td>9.4</td>\n",
       "      <td>-0.8</td>\n",
       "      <td>-3.12</td>\n",
       "      <td>Enrolled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76516</th>\n",
       "      <td>76516</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>9070</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>136.0</td>\n",
       "      <td>1</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0.32</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76517</th>\n",
       "      <td>76517</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9773</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>133.1</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>13.666667</td>\n",
       "      <td>0</td>\n",
       "      <td>15.5</td>\n",
       "      <td>2.8</td>\n",
       "      <td>-4.06</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>76518 rows × 38 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id  Marital status  Application mode  Application order  Course  \\\n",
       "0          0               1                 1                  1    9238   \n",
       "1          1               1                17                  1    9238   \n",
       "2          2               1                17                  2    9254   \n",
       "3          3               1                 1                  3    9500   \n",
       "4          4               1                 1                  2    9500   \n",
       "...      ...             ...               ...                ...     ...   \n",
       "76513  76513               1                17                  1    9254   \n",
       "76514  76514               1                 1                  6    9254   \n",
       "76515  76515               5                17                  1    9085   \n",
       "76516  76516               1                 1                  3    9070   \n",
       "76517  76517               1                 1                  1    9773   \n",
       "\n",
       "       Daytime/evening attendance  Previous qualification  \\\n",
       "0                               1                       1   \n",
       "1                               1                       1   \n",
       "2                               1                       1   \n",
       "3                               1                       1   \n",
       "4                               1                       1   \n",
       "...                           ...                     ...   \n",
       "76513                           1                       1   \n",
       "76514                           1                       1   \n",
       "76515                           1                       1   \n",
       "76516                           1                       1   \n",
       "76517                           1                       1   \n",
       "\n",
       "       Previous qualification (grade)  Nacionality  Mother's qualification  \\\n",
       "0                               126.0            1                       1   \n",
       "1                               125.0            1                      19   \n",
       "2                               137.0            1                       3   \n",
       "3                               131.0            1                      19   \n",
       "4                               132.0            1                      19   \n",
       "...                               ...          ...                     ...   \n",
       "76513                           121.0            1                      19   \n",
       "76514                           125.0            1                       1   \n",
       "76515                           138.0            1                      37   \n",
       "76516                           136.0            1                      38   \n",
       "76517                           133.1            1                      19   \n",
       "\n",
       "       ...  Curricular units 2nd sem (credited)  \\\n",
       "0      ...                                    0   \n",
       "1      ...                                    0   \n",
       "2      ...                                    0   \n",
       "3      ...                                    0   \n",
       "4      ...                                    0   \n",
       "...    ...                                  ...   \n",
       "76513  ...                                    0   \n",
       "76514  ...                                    0   \n",
       "76515  ...                                    0   \n",
       "76516  ...                                    0   \n",
       "76517  ...                                    0   \n",
       "\n",
       "       Curricular units 2nd sem (enrolled)  \\\n",
       "0                                        6   \n",
       "1                                        6   \n",
       "2                                        6   \n",
       "3                                        8   \n",
       "4                                        7   \n",
       "...                                    ...   \n",
       "76513                                    6   \n",
       "76514                                    6   \n",
       "76515                                    5   \n",
       "76516                                    6   \n",
       "76517                                    6   \n",
       "\n",
       "       Curricular units 2nd sem (evaluations)  \\\n",
       "0                                           7   \n",
       "1                                           9   \n",
       "2                                           0   \n",
       "3                                          11   \n",
       "4                                          12   \n",
       "...                                       ...   \n",
       "76513                                       8   \n",
       "76514                                       9   \n",
       "76515                                       8   \n",
       "76516                                       0   \n",
       "76517                                       6   \n",
       "\n",
       "       Curricular units 2nd sem (approved)  Curricular units 2nd sem (grade)  \\\n",
       "0                                        6                         12.428571   \n",
       "1                                        0                          0.000000   \n",
       "2                                        0                          0.000000   \n",
       "3                                        7                         12.820000   \n",
       "4                                        6                         12.933333   \n",
       "...                                    ...                               ...   \n",
       "76513                                    5                         10.600000   \n",
       "76514                                    6                         13.875000   \n",
       "76515                                    5                         11.400000   \n",
       "76516                                    0                          0.000000   \n",
       "76517                                    6                         13.666667   \n",
       "\n",
       "       Curricular units 2nd sem (without evaluations)  Unemployment rate  \\\n",
       "0                                                   0               11.1   \n",
       "1                                                   0               11.1   \n",
       "2                                                   0               16.2   \n",
       "3                                                   0               11.1   \n",
       "4                                                   0                7.6   \n",
       "...                                               ...                ...   \n",
       "76513                                               0               13.9   \n",
       "76514                                               0                9.4   \n",
       "76515                                               1                9.4   \n",
       "76516                                               0                7.6   \n",
       "76517                                               0               15.5   \n",
       "\n",
       "       Inflation rate   GDP    Target  \n",
       "0                 0.6  2.02  Graduate  \n",
       "1                 0.6  2.02   Dropout  \n",
       "2                 0.3 -0.92   Dropout  \n",
       "3                 0.6  2.02  Enrolled  \n",
       "4                 2.6  0.32  Graduate  \n",
       "...               ...   ...       ...  \n",
       "76513            -0.3  0.79  Graduate  \n",
       "76514            -0.8 -3.12  Graduate  \n",
       "76515            -0.8 -3.12  Enrolled  \n",
       "76516             2.6  0.32   Dropout  \n",
       "76517             2.8 -4.06  Graduate  \n",
       "\n",
       "[76518 rows x 38 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40419e6c",
   "metadata": {
    "papermill": {
     "duration": 0.010548,
     "end_time": "2024-06-01T09:11:41.137789",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.127241",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# See distribution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5e74bac8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:41.161122Z",
     "iopub.status.busy": "2024-06-01T09:11:41.160747Z",
     "iopub.status.idle": "2024-06-01T09:11:41.166076Z",
     "shell.execute_reply": "2024-06-01T09:11:41.164904Z"
    },
    "papermill": {
     "duration": 0.019089,
     "end_time": "2024-06-01T09:11:41.168146",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.149057",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# num_columns = len(df.columns)\n",
    "# ncols = 3\n",
    "# nrows = (num_columns + ncols - 1) // ncols \n",
    "\n",
    "# fig, axs = plt.subplots(nrows=nrows, ncols=ncols, figsize=(5*ncols, 4*nrows))\n",
    "\n",
    "# axs = axs.flatten()\n",
    "\n",
    "# for i, col in enumerate(df.columns):\n",
    "#     sns.histplot(df[col], bins='auto', kde=True, ax=axs[i])\n",
    "#     axs[i].set_title(f'Distribution of {col}')\n",
    "#     axs[i].set_xlabel(col)\n",
    "#     axs[i].set_ylabel('Frequency')\n",
    "\n",
    "# for j in range(i + 1, len(axs)):\n",
    "#     fig.delaxes(axs[j])\n",
    "\n",
    "# plt.tight_layout()\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9eb763f8",
   "metadata": {
    "papermill": {
     "duration": 0.010322,
     "end_time": "2024-06-01T09:11:41.189026",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.178704",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# features that areally matters\n",
    "\n",
    "let us drop out columns like application mode mode, order , nationality and admision grade "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9b94e76a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:41.211838Z",
     "iopub.status.busy": "2024-06-01T09:11:41.211132Z",
     "iopub.status.idle": "2024-06-01T09:11:41.217768Z",
     "shell.execute_reply": "2024-06-01T09:11:41.216864Z"
    },
    "papermill": {
     "duration": 0.020306,
     "end_time": "2024-06-01T09:11:41.219900",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.199594",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['id', 'Marital status', 'Application mode', 'Application order',\n",
       "       'Course', 'Daytime/evening attendance', 'Previous qualification',\n",
       "       'Previous qualification (grade)', 'Nacionality',\n",
       "       'Mother's qualification', 'Father's qualification',\n",
       "       'Mother's occupation', 'Father's occupation', 'Admission grade',\n",
       "       'Displaced', 'Educational special needs', 'Debtor',\n",
       "       'Tuition fees up to date', 'Gender', 'Scholarship holder',\n",
       "       'Age at enrollment', 'International',\n",
       "       'Curricular units 1st sem (credited)',\n",
       "       'Curricular units 1st sem (enrolled)',\n",
       "       'Curricular units 1st sem (evaluations)',\n",
       "       'Curricular units 1st sem (approved)',\n",
       "       'Curricular units 1st sem (grade)',\n",
       "       'Curricular units 1st sem (without evaluations)',\n",
       "       'Curricular units 2nd sem (credited)',\n",
       "       'Curricular units 2nd sem (enrolled)',\n",
       "       'Curricular units 2nd sem (evaluations)',\n",
       "       'Curricular units 2nd sem (approved)',\n",
       "       'Curricular units 2nd sem (grade)',\n",
       "       'Curricular units 2nd sem (without evaluations)', 'Unemployment rate',\n",
       "       'Inflation rate', 'GDP', 'Target'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fbc186d4",
   "metadata": {
    "papermill": {
     "duration": 0.010295,
     "end_time": "2024-06-01T09:11:41.240703",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.230408",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Feature engineering "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "08888275",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:41.263717Z",
     "iopub.status.busy": "2024-06-01T09:11:41.262840Z",
     "iopub.status.idle": "2024-06-01T09:11:41.267126Z",
     "shell.execute_reply": "2024-06-01T09:11:41.266230Z"
    },
    "papermill": {
     "duration": 0.018023,
     "end_time": "2024-06-01T09:11:41.269179",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.251156",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# parenting\n",
    "# accadmic performance \n",
    "# fees support\n",
    "# country finance "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad766797",
   "metadata": {
    "papermill": {
     "duration": 0.010084,
     "end_time": "2024-06-01T09:11:41.289728",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.279644",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### parenting score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "01ccfad4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:41.312317Z",
     "iopub.status.busy": "2024-06-01T09:11:41.311642Z",
     "iopub.status.idle": "2024-06-01T09:11:41.316864Z",
     "shell.execute_reply": "2024-06-01T09:11:41.315964Z"
    },
    "papermill": {
     "duration": 0.01891,
     "end_time": "2024-06-01T09:11:41.319052",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.300142",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.columns = df.columns.str.replace(\"'\",\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "31c28ab9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:41.341688Z",
     "iopub.status.busy": "2024-06-01T09:11:41.340979Z",
     "iopub.status.idle": "2024-06-01T09:11:41.376646Z",
     "shell.execute_reply": "2024-06-01T09:11:41.375681Z"
    },
    "papermill": {
     "duration": 0.049529,
     "end_time": "2024-06-01T09:11:41.379110",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.329581",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Marital status</th>\n",
       "      <th>Application mode</th>\n",
       "      <th>Application order</th>\n",
       "      <th>Course</th>\n",
       "      <th>Daytime/evening attendance</th>\n",
       "      <th>Previous qualification</th>\n",
       "      <th>Previous qualification (grade)</th>\n",
       "      <th>Nacionality</th>\n",
       "      <th>Mothers qualification</th>\n",
       "      <th>...</th>\n",
       "      <th>Curricular units 2nd sem (credited)</th>\n",
       "      <th>Curricular units 2nd sem (enrolled)</th>\n",
       "      <th>Curricular units 2nd sem (evaluations)</th>\n",
       "      <th>Curricular units 2nd sem (approved)</th>\n",
       "      <th>Curricular units 2nd sem (grade)</th>\n",
       "      <th>Curricular units 2nd sem (without evaluations)</th>\n",
       "      <th>Unemployment rate</th>\n",
       "      <th>Inflation rate</th>\n",
       "      <th>GDP</th>\n",
       "      <th>Target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9238</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>126.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>12.428571</td>\n",
       "      <td>0</td>\n",
       "      <td>11.1</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.02</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>9238</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>125.0</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>11.1</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.02</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "      <td>2</td>\n",
       "      <td>9254</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>137.0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>16.2</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.92</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>9500</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>131.0</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>11</td>\n",
       "      <td>7</td>\n",
       "      <td>12.820000</td>\n",
       "      <td>0</td>\n",
       "      <td>11.1</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.02</td>\n",
       "      <td>Enrolled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>9500</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>132.0</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>12.933333</td>\n",
       "      <td>0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0.32</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76513</th>\n",
       "      <td>76513</td>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>9254</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>121.0</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>10.600000</td>\n",
       "      <td>0</td>\n",
       "      <td>13.9</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>0.79</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76514</th>\n",
       "      <td>76514</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>9254</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>125.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>6</td>\n",
       "      <td>13.875000</td>\n",
       "      <td>0</td>\n",
       "      <td>9.4</td>\n",
       "      <td>-0.8</td>\n",
       "      <td>-3.12</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76515</th>\n",
       "      <td>76515</td>\n",
       "      <td>5</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>9085</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>138.0</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>11.400000</td>\n",
       "      <td>1</td>\n",
       "      <td>9.4</td>\n",
       "      <td>-0.8</td>\n",
       "      <td>-3.12</td>\n",
       "      <td>Enrolled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76516</th>\n",
       "      <td>76516</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>9070</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>136.0</td>\n",
       "      <td>1</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0.32</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76517</th>\n",
       "      <td>76517</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9773</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>133.1</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>13.666667</td>\n",
       "      <td>0</td>\n",
       "      <td>15.5</td>\n",
       "      <td>2.8</td>\n",
       "      <td>-4.06</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>76518 rows × 38 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id  Marital status  Application mode  Application order  Course  \\\n",
       "0          0               1                 1                  1    9238   \n",
       "1          1               1                17                  1    9238   \n",
       "2          2               1                17                  2    9254   \n",
       "3          3               1                 1                  3    9500   \n",
       "4          4               1                 1                  2    9500   \n",
       "...      ...             ...               ...                ...     ...   \n",
       "76513  76513               1                17                  1    9254   \n",
       "76514  76514               1                 1                  6    9254   \n",
       "76515  76515               5                17                  1    9085   \n",
       "76516  76516               1                 1                  3    9070   \n",
       "76517  76517               1                 1                  1    9773   \n",
       "\n",
       "       Daytime/evening attendance  Previous qualification  \\\n",
       "0                               1                       1   \n",
       "1                               1                       1   \n",
       "2                               1                       1   \n",
       "3                               1                       1   \n",
       "4                               1                       1   \n",
       "...                           ...                     ...   \n",
       "76513                           1                       1   \n",
       "76514                           1                       1   \n",
       "76515                           1                       1   \n",
       "76516                           1                       1   \n",
       "76517                           1                       1   \n",
       "\n",
       "       Previous qualification (grade)  Nacionality  Mothers qualification  \\\n",
       "0                               126.0            1                      1   \n",
       "1                               125.0            1                     19   \n",
       "2                               137.0            1                      3   \n",
       "3                               131.0            1                     19   \n",
       "4                               132.0            1                     19   \n",
       "...                               ...          ...                    ...   \n",
       "76513                           121.0            1                     19   \n",
       "76514                           125.0            1                      1   \n",
       "76515                           138.0            1                     37   \n",
       "76516                           136.0            1                     38   \n",
       "76517                           133.1            1                     19   \n",
       "\n",
       "       ...  Curricular units 2nd sem (credited)  \\\n",
       "0      ...                                    0   \n",
       "1      ...                                    0   \n",
       "2      ...                                    0   \n",
       "3      ...                                    0   \n",
       "4      ...                                    0   \n",
       "...    ...                                  ...   \n",
       "76513  ...                                    0   \n",
       "76514  ...                                    0   \n",
       "76515  ...                                    0   \n",
       "76516  ...                                    0   \n",
       "76517  ...                                    0   \n",
       "\n",
       "       Curricular units 2nd sem (enrolled)  \\\n",
       "0                                        6   \n",
       "1                                        6   \n",
       "2                                        6   \n",
       "3                                        8   \n",
       "4                                        7   \n",
       "...                                    ...   \n",
       "76513                                    6   \n",
       "76514                                    6   \n",
       "76515                                    5   \n",
       "76516                                    6   \n",
       "76517                                    6   \n",
       "\n",
       "       Curricular units 2nd sem (evaluations)  \\\n",
       "0                                           7   \n",
       "1                                           9   \n",
       "2                                           0   \n",
       "3                                          11   \n",
       "4                                          12   \n",
       "...                                       ...   \n",
       "76513                                       8   \n",
       "76514                                       9   \n",
       "76515                                       8   \n",
       "76516                                       0   \n",
       "76517                                       6   \n",
       "\n",
       "       Curricular units 2nd sem (approved)  Curricular units 2nd sem (grade)  \\\n",
       "0                                        6                         12.428571   \n",
       "1                                        0                          0.000000   \n",
       "2                                        0                          0.000000   \n",
       "3                                        7                         12.820000   \n",
       "4                                        6                         12.933333   \n",
       "...                                    ...                               ...   \n",
       "76513                                    5                         10.600000   \n",
       "76514                                    6                         13.875000   \n",
       "76515                                    5                         11.400000   \n",
       "76516                                    0                          0.000000   \n",
       "76517                                    6                         13.666667   \n",
       "\n",
       "       Curricular units 2nd sem (without evaluations)  Unemployment rate  \\\n",
       "0                                                   0               11.1   \n",
       "1                                                   0               11.1   \n",
       "2                                                   0               16.2   \n",
       "3                                                   0               11.1   \n",
       "4                                                   0                7.6   \n",
       "...                                               ...                ...   \n",
       "76513                                               0               13.9   \n",
       "76514                                               0                9.4   \n",
       "76515                                               1                9.4   \n",
       "76516                                               0                7.6   \n",
       "76517                                               0               15.5   \n",
       "\n",
       "       Inflation rate   GDP    Target  \n",
       "0                 0.6  2.02  Graduate  \n",
       "1                 0.6  2.02   Dropout  \n",
       "2                 0.3 -0.92   Dropout  \n",
       "3                 0.6  2.02  Enrolled  \n",
       "4                 2.6  0.32  Graduate  \n",
       "...               ...   ...       ...  \n",
       "76513            -0.3  0.79  Graduate  \n",
       "76514            -0.8 -3.12  Graduate  \n",
       "76515            -0.8 -3.12  Enrolled  \n",
       "76516             2.6  0.32   Dropout  \n",
       "76517             2.8 -4.06  Graduate  \n",
       "\n",
       "[76518 rows x 38 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e9d5ce68",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:41.402868Z",
     "iopub.status.busy": "2024-06-01T09:11:41.402535Z",
     "iopub.status.idle": "2024-06-01T09:11:41.409113Z",
     "shell.execute_reply": "2024-06-01T09:11:41.408176Z"
    },
    "papermill": {
     "duration": 0.020877,
     "end_time": "2024-06-01T09:11:41.411218",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.390341",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['id', 'Marital status', 'Application mode', 'Application order',\n",
       "       'Course', 'Daytime/evening attendance', 'Previous qualification',\n",
       "       'Previous qualification (grade)', 'Nacionality',\n",
       "       'Mothers qualification', 'Fathers qualification', 'Mothers occupation',\n",
       "       'Fathers occupation', 'Admission grade', 'Displaced',\n",
       "       'Educational special needs', 'Debtor', 'Tuition fees up to date',\n",
       "       'Gender', 'Scholarship holder', 'Age at enrollment', 'International',\n",
       "       'Curricular units 1st sem (credited)',\n",
       "       'Curricular units 1st sem (enrolled)',\n",
       "       'Curricular units 1st sem (evaluations)',\n",
       "       'Curricular units 1st sem (approved)',\n",
       "       'Curricular units 1st sem (grade)',\n",
       "       'Curricular units 1st sem (without evaluations)',\n",
       "       'Curricular units 2nd sem (credited)',\n",
       "       'Curricular units 2nd sem (enrolled)',\n",
       "       'Curricular units 2nd sem (evaluations)',\n",
       "       'Curricular units 2nd sem (approved)',\n",
       "       'Curricular units 2nd sem (grade)',\n",
       "       'Curricular units 2nd sem (without evaluations)', 'Unemployment rate',\n",
       "       'Inflation rate', 'GDP', 'Target'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "36043c89",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:41.434864Z",
     "iopub.status.busy": "2024-06-01T09:11:41.434540Z",
     "iopub.status.idle": "2024-06-01T09:11:41.441156Z",
     "shell.execute_reply": "2024-06-01T09:11:41.440204Z"
    },
    "papermill": {
     "duration": 0.020901,
     "end_time": "2024-06-01T09:11:41.443268",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.422367",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "parents = df[[\n",
    "    'Mothers qualification', \n",
    "    'Fathers qualification', \n",
    "    'Mothers occupation', \n",
    "    'Fathers occupation',\n",
    "    'Target',\n",
    "]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "4a7b220f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:41.467299Z",
     "iopub.status.busy": "2024-06-01T09:11:41.466934Z",
     "iopub.status.idle": "2024-06-01T09:11:41.478960Z",
     "shell.execute_reply": "2024-06-01T09:11:41.477546Z"
    },
    "papermill": {
     "duration": 0.027488,
     "end_time": "2024-06-01T09:11:41.482060",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.454572",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mothers qualification</th>\n",
       "      <th>Fathers qualification</th>\n",
       "      <th>Mothers occupation</th>\n",
       "      <th>Fathers occupation</th>\n",
       "      <th>Target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>19</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>19</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>Enrolled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>19</td>\n",
       "      <td>37</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76513</th>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76514</th>\n",
       "      <td>1</td>\n",
       "      <td>38</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76515</th>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>9</td>\n",
       "      <td>10</td>\n",
       "      <td>Enrolled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76516</th>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76517</th>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>76518 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Mothers qualification  Fathers qualification  Mothers occupation  \\\n",
       "0                          1                     19                   5   \n",
       "1                         19                     19                   9   \n",
       "2                          3                     19                   2   \n",
       "3                         19                      3                   3   \n",
       "4                         19                     37                   4   \n",
       "...                      ...                    ...                 ...   \n",
       "76513                     19                      1                   7   \n",
       "76514                      1                     38                   4   \n",
       "76515                     37                     37                   9   \n",
       "76516                     38                     37                   5   \n",
       "76517                     19                     19                   4   \n",
       "\n",
       "       Fathers occupation    Target  \n",
       "0                       5  Graduate  \n",
       "1                       9   Dropout  \n",
       "2                       3   Dropout  \n",
       "3                       2  Enrolled  \n",
       "4                       9  Graduate  \n",
       "...                   ...       ...  \n",
       "76513                   5  Graduate  \n",
       "76514                   9  Graduate  \n",
       "76515                  10  Enrolled  \n",
       "76516                   9   Dropout  \n",
       "76517                   9  Graduate  \n",
       "\n",
       "[76518 rows x 5 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parents"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9f1abfe0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:41.507777Z",
     "iopub.status.busy": "2024-06-01T09:11:41.507399Z",
     "iopub.status.idle": "2024-06-01T09:11:42.449096Z",
     "shell.execute_reply": "2024-06-01T09:11:42.448118Z"
    },
    "papermill": {
     "duration": 0.957847,
     "end_time": "2024-06-01T09:11:42.452118",
     "exception": false,
     "start_time": "2024-06-01T09:11:41.494271",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1400x700 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(1, 2, figsize=(14, 7))\n",
    "sns.scatterplot(data=parents, x='Mothers qualification', y='Mothers occupation', ax=axs[0])\n",
    "axs[0].set_title('Mothers\\' Qualification vs Mothers\\' Occupation')\n",
    "sns.scatterplot(data=parents, x='Fathers qualification', y='Fathers occupation', ax=axs[1])\n",
    "axs[1].set_title('Fathers\\' Qualification vs Fathers\\' Occupation')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0e6f2ab1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:42.479330Z",
     "iopub.status.busy": "2024-06-01T09:11:42.478939Z",
     "iopub.status.idle": "2024-06-01T09:11:44.131504Z",
     "shell.execute_reply": "2024-06-01T09:11:44.130427Z"
    },
    "papermill": {
     "duration": 1.668946,
     "end_time": "2024-06-01T09:11:44.133844",
     "exception": false,
     "start_time": "2024-06-01T09:11:42.464898",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABWwAAAVuCAYAAADhwXUjAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOzdd5hU5dk/8HupS9ulCqKINDtoxBg7tohdsJckIJpiiWCJERMVrNFEY4ktMQH1jR0xamJBoyZiw4IhEXnVgBVFkd5lz+8Pf8zLspSdlZl9WD6f69pL98xzztznPHNm7vkye6Yky7IsAAAAAACodfVquwAAAAAAAL4msAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAWSNWzYsCgpKYkvvviitktZJy07fsvbdNNNY+DAgZWWvfPOO7HffvtFeXl5lJSUxEMPPRQjR46MkpKSmDJlSvEK/v9KSkpi2LBhRb9fAIC1adNNN42DDz64tstYZ63Ytz777LNRUlISzz77bKVxd955Z2yxxRbRsGHDaNmyZURE7LnnnrHnnnsWrdZlarOHBuoWgS2wWsuajpKSknj++eer3J5lWXTq1ClKSkpq3JBefvnl8dBDD33DSoujpKQkRo4cWa2x06dPj5/97Gex+eabR2lpabRu3Tr69u0bf/3rXwtbZJ4GDBgQEyZMiMsuuyzuvPPO2GGHHQp+n3/729/Wu1D2rrvuimuvvba2y6i2da1eAMjH8j3uij/nnXdetbfz1ltvxbBhw9aJgG7ZPlfX2LFjo3///tG+ffto3LhxbLrppvGTn/wkPvzwwwJWmZ+33347Bg4cGN26dYs//OEP8fvf/74o97suvX9ZG+bPnx/Dhg2rEpanal2rF1amQW0XAKwbSktL46677orddtut0vLnnnsuPvroo2jcuHGNt3355ZfHkUceGf369fuGVaZj0qRJsc8++8Tnn38eJ554Yuywww4xc+bM+POf/xwHH3xw/PznP49f/epXtVJXvXr/9291CxYsiBdffDF+8YtfxOmnn55b/v3vfz+OPfbYbzSvq/O3v/0tbrzxxpWGtgsWLIgGDerey9Ndd90V//73v2PIkCG1XUq1rGv1AkBNXHzxxdGlS5dKy7bZZptqr//WW2/F8OHDY88994xNN910LVdXe2644YYYPHhwdO3aNX7605/GhhtuGBMnTozbbrst7r333njsscdip512KmpNe+yxRyxYsCAaNWqUW/bss89GRUVFXHfdddG9e/fc8ieffLKgtazq/Uuhe+jaMn/+/Bg+fHhERK18cjlf61q9sDJ17x0xUBAHHnhg3H///XH99ddXCtPuuuuu6N279zp92YL58+dH06ZN19r2lixZEkceeWTMmDEj/vGPf8R3vvOd3G1nnnlmnHDCCXHllVdG796946ijjlpr91sdKzaPn3/+eURE7s/Hlqlfv37Ur1+/WGVVUlpaWiv3uy766quvoqKiotIbFwCg+g444ICi/HVRoRSiFxg7dmwMGTIkdtttt3j88ccr9cmnnHJK7LrrrnHEEUfEf/7znyo9ZCHVq1evSp84bdq0iKjay9ZWb1SbPfS6aN68edGsWbPaLgOS5JIIQLUcd9xxMX369BgzZkxu2eLFi+OBBx6I448/fqXrzJs3L84+++zo1KlTNG7cODbffPP4zW9+E1mW5caUlJTEvHnz4vbbb8/9GdqK11idOXNmDBw4MFq2bBnl5eVx4oknxvz586vc3//8z/9E7969o0mTJtG6des49thjq/zJ1p577hnbbLNNvPbaa7HHHntE06ZN4/zzz4+IiFdffTX69u0bbdu2jSZNmkSXLl1i0KBBeR+rUaNGxb///e8477zzKoW1EV83cbfeemu0bNkyLrrootzyVV3vamXX6vrnP/8ZRx11VGyyySbRuHHj6NSpU5x55pmxYMGCNda2/LXAhg0bFp07d46IiJ/97GdRUlKS+2TIqup57LHHok+fPtGiRYsoKyuLb3/723HXXXflVdvAgQPjxhtvjIio9OeHy6zsGrZvvPFGHHDAAVFWVhbNmzePffbZJ1566aVKY5bVPHbs2DjrrLOiXbt20axZs+jfv38umF6V3/zmN1FSUhLvv/9+lduGDh0ajRo1ihkzZkTE19f8PeKII6JDhw5RWloaG2+8cRx77LExa9asVW5/zz33jL/+9a/x/vvv5/Z32bFevHhxXHjhhdG7d+8oLy+PZs2axe677x7PPPNMpW1MmTIlSkpK4je/+U1ce+210a1bt2jcuHG89dZbEfH1Y2WHHXaI0tLS6NatW9x6660rvY5xxJrPldXVCwDrg/fffz9OPfXU2HzzzaNJkybRpk2bOOqooyr1RiNHjsz94/tee+2Ve81c8c+wn3/++dhxxx2jtLQ0unbtGnfccUeV+5s5c2YMGTIk1zd37949rrzyyqioqMiNWVMvcMMNN8TWW28dTZs2jVatWsUOO+xQqU+rrksuuSRKSkri9ttvr/Khhm7dusVVV10Vn3zySaXLD6zqmrEDBw6s0kP85je/iV122SXatGkTTZo0id69e8cDDzywxrpW7Is33XTTXD/drl27Sj3kyupZuHBhDBs2LDbbbLMoLS2NDTfcMA4//PB477338qptde9fVtVD33TTTbH11ltH48aNo2PHjnHaaafFzJkzK41Z9j7lrbfeir322iuaNm0aG220UVx11VVrPDbbbLNN7LXXXlWWV1RUxEYbbRRHHnlkbtk999wTvXv3zvXzPXv2jOuuu26V254yZUq0a9cuIiKGDx+e2+dlx/pf//pXDBw4MLp27RqlpaXRoUOHGDRoUEyfPr3Sdpb1pW+99VYcf/zx0apVq9xfb1ZUVMSwYcOiY8eO0bRp09hrr73irbfeWun3b6zpXFlTvbCu8AlboFo23XTT2HnnnePuu++OAw44ICK+Du9mzZoVxx57bFx//fWVxmdZFoceemg888wzcdJJJ8V2220XTzzxRPzsZz+Ljz/+OH77299GxNdfEnDyySfHjjvuGD/60Y8i4utGcHlHH310dOnSJa644op4/fXX47bbbosNNtggrrzyytyYyy67LC644II4+uij4+STT47PP/88brjhhthjjz3ijTfeqPSv7tOnT48DDjggjj322Pje974X7du3j2nTpsV+++0X7dq1i/POOy9atmwZU6ZMiQcffDDvY/XII49ERMQPfvCDld5eXl4ehx12WNx+++3x3nvvVdnfNbn//vtj/vz5ccopp0SbNm3ilVdeiRtuuCE++uijuP/++6u9ncMPPzxatmwZZ555Zhx33HFx4IEHRvPmzVc5fuTIkTFo0KDYeuutY+jQodGyZct444034vHHH8+F9tWp7cc//nF88sknMWbMmLjzzjvXWOd//vOf2H333aOsrCzOPffcaNiwYdx6662x5557xnPPPVclFP/pT38arVq1iosuuiimTJkS1157bZx++ulx7733rvI+jj766Dj33HPjvvvui5/97GeVbrvvvvtiv/32i1atWsXixYujb9++sWjRovjpT38aHTp0iI8//jgeffTRmDlzZpSXl690+7/4xS9i1qxZ8dFHH+Ue+8uO9ezZs+O2226L4447Ln74wx/GnDlz4o9//GP07ds3Xnnlldhuu+0qbWvEiBGxcOHC+NGPfhSNGzeO1q1bxxtvvBH7779/bLjhhjF8+PBYunRpXHzxxblmdXnVOVdWVy8A1CWzZs2q8pdibdu2jXHjxsULL7wQxx57bGy88cYxZcqUuPnmm2PPPfeMt956K5o2bRp77LFHnHHGGXH99dfH+eefH1tuuWVERO6/ERHvvvtuHHnkkXHSSSfFgAED4k9/+lMMHDgwevfuHVtvvXVEfP3XXn369ImPP/44fvzjH8cmm2wSL7zwQgwdOjSmTp1a5ZryK+sF/vCHP8QZZ5wRRx55ZAwePDgWLlwY//rXv+Lll19e5YcrVmb+/Pnx9NNPx+67717lUhHLHHPMMfGjH/0oHnnkkTj33HOrve1lrrvuujj00EPjhBNOiMWLF8c999wTRx11VDz66KNx0EEHVXs71157bdxxxx0xevTouPnmm6N58+bRq1evlY5dunRpHHzwwfH000/HscceG4MHD445c+bEmDFj4t///neuH69ObdV5/7K8YcOGxfDhw2PfffeNU045JSZNmhQ333xzjBs3LsaOHRsNGzbMjZ0xY0bsv//+cfjhh8fRRx8dDzzwQPz85z+Pnj175t6DrcwxxxwTw4YNi08//TQ6dOiQW/7888/HJ598Escee2xERIwZMyaOO+642GeffXLvpSZOnBhjx46NwYMHr3Tb7dq1i5tvvjlOOeWU6N+/fxx++OEREbljPWbMmPjvf/8bJ554YnTo0CH+85//xO9///v4z3/+Ey+99FKVDw8cddRR0aNHj7j88stzH+QZOnRoXHXVVXHIIYdE3759480334y+ffvGwoULK61bnXNlTfXCOiMDWI0RI0ZkEZGNGzcu+93vfpe1aNEimz9/fpZlWXbUUUdle+21V5ZlWda5c+fsoIMOyq330EMPZRGRXXrppZW2d+SRR2YlJSXZu+++m1vWrFmzbMCAAVXu+6KLLsoiIhs0aFCl5f3798/atGmT+33KlClZ/fr1s8suu6zSuAkTJmQNGjSotLxPnz5ZRGS33HJLpbGjR4/O7ec3td1222Xl5eWrHXPNNddkEZE9/PDDWZb933GePHlypXHPPPNMFhHZM888k1u27Pgv74orrshKSkqy999/P7ds2fFbXufOnSsd68mTJ2cRkf3617+uNG7FembOnJm1aNEi+853vpMtWLCg0tiKioq8azvttNOq1LZMRGQXXXRR7vd+/fpljRo1yt57773csk8++SRr0aJFtscee1Sped99961U05lnnpnVr18/mzlz5krvb5mdd9456927d6Vlr7zyShYR2R133JFlWZa98cYbWURk999//2q3tTIHHXRQ1rlz5yrLv/rqq2zRokWVls2YMSNr3759pcf+srkqKyvLpk2bVmn8IYcckjVt2jT7+OOPc8veeeedrEGDBpWOcz7nyqrqBYC6YFnfsLKfLFt5T/Piiy9W6guyLMvuv//+Kr3aMp07d84iIvvHP/6RWzZt2rSscePG2dlnn51bdskll2TNmjXL/vd//7fS+uedd15Wv3797IMPPsiybPW9wGGHHZZtvfXW+R+IFYwfPz6LiGzw4MGrHderV6+sdevWud/79OmT9enTp8q4AQMGVOknVjy2ixcvzrbZZpts7733rrR8xb51ZX3xsn73888/r7TuivX86U9/yiIiu+aaa6rUuLpedlW1rer9y4o99LRp07JGjRpl++23X7Z06dLcuN/97ndZRGR/+tOfKtW84uNr0aJFWYcOHbIjjjiiyn0tb9KkSVlEZDfccEOl5aeeemrWvHnz3H4NHjw4Kysry7766qvVbm9Fn3/+eZUefZmVnSt33313lcf+srk67rjjKo399NNPswYNGmT9+vWrtHzYsGFZRFQ6ztU9V1ZXL6wrXBIBqLajjz46FixYEI8++mjMmTMnHn300VX+i/3f/va3qF+/fpxxxhmVlp999tmRZVk89thj1b7fn/zkJ5V+33333WP69Okxe/bsiIh48MEHo6KiIo4++uj44osvcj8dOnSIHj16VPnT8saNG8eJJ55YadmyT+A++uijsWTJkmrXtjJz5syJFi1arHbMstvnzJmT9/abNGmS+/958+bFF198EbvssktkWRZvvPFG3turjjFjxsScOXPivPPOq3LtsOX/1Xxt17Z06dJ48skno1+/ftG1a9fc8g033DCOP/74eP7553OPg2V+9KMfVapp9913j6VLl670cgfLO+aYY+K1116r9Gdx9957bzRu3DgOO+ywiIjcJ2ifeOKJlV6Woybq16+fu85aRUVFfPnll/HVV1/FDjvsEK+//nqV8UcccUSlT84uXbo0nnrqqejXr1907Ngxt7x79+5VPomR77kCAHXdjTfeGGPGjKn0E1G5p1myZElMnz49unfvHi1btlzp6/OqbLXVVrH77rvnfm/Xrl1svvnm8d///je37P7774/dd989WrVqVen1ed99942lS5fGP/7xj0rbXLEXiPi6l/3oo49i3Lhxee3/ipb1ptXpZWvSx0ZUPrYzZsyIWbNmxe67757Xcc3XqFGjom3btvHTn/60ym2r6mXXRm1PPfVULF68OIYMGVLpi39/+MMfRllZWfz1r3+tNL558+bxve99L/d7o0aNYscdd6z0eFmZzTbbLLbbbrtKf1G2dOnSeOCBB+KQQw7J7VfLli1j3rx5lS5z900tf8wWLlwYX3zxRe4L6VZ23FZ8b/f000/HV199Faeeemql5Subq3zPFViXCWyBamvXrl3su+++cdddd8WDDz4YS5curXQ9pOW9//770bFjxyrN3rI/EVtTeLa8TTbZpNLvrVq1ioiodE3RLMuiR48e0a5du0o/EydOzH0ZwTIbbbRRlS8i6NOnTxxxxBExfPjwaNu2bRx22GExYsSIWLRoUbXrXKY6Deyy2zfYYIO8t//BBx/EwIEDo3Xr1tG8efNo165d9OnTJyJitddR/SaWhZhr+tbktV3b559/HvPnz4/NN9+8ym1bbrllVFRUVLlO8ZoeL6ty1FFHRb169XKNbpZlcf/99+eunRsR0aVLlzjrrLPitttui7Zt20bfvn3jxhtv/MbH/fbbb49evXpFaWlptGnTJtq1axd//etfV7rdFf88cdq0abFgwYJK34y8zIrL8j1XAKCu23HHHWPfffet9BMRsWDBgrjwwgtz18ls27ZttGvXLmbOnJnX6/6KfUnE173J8n3JO++8E48//niV1+Zltaz4+ryySxX8/Oc/j+bNm8eOO+4YPXr0iNNOOy3Gjh1b7TqXqe6HCubMmVOjPjbi6w9I7LTTTlFaWhqtW7fO/Ql7ofrYiK972c0337zSlycXo7Zl73lW7GUbNWoUXbt2rfKeaOONN65yCYEVHy+rcswxx8TYsWPj448/joivr/k7bdq0OOaYY3JjTj311Nhss83igAMOiI033jgGDRoUjz/+eI32bZkvv/wyBg8eHO3bt48mTZpEu3btco/R6vSyy47Bin1r69atc338MvmeK7Aucw1bIC/HH398/PCHP4xPP/00DjjggKJ8M+yqvmk1+//XPKqoqIiSkpJ47LHHVjp2xWtvLv+vwMuUlJTEAw88EC+99FI88sgj8cQTT8SgQYPi6quvjpdeeimv63dutdVWMX78+Pjggw9W2qRHfH1x/ojIfWp0ZV8MFfH1v4yv+Pt3v/vd+PLLL+PnP/95bLHFFtGsWbP4+OOPY+DAgZW+mKLYUqltTY+XVenYsWPsvvvucd9998X5558fL730UnzwwQeVrpUcEXH11VfHwIED4y9/+Us8+eSTccYZZ8QVV1wRL730Umy88cZ51/s///M/MXDgwOjXr1/87Gc/iw022CDq168fV1xxRaVP+y6zssdvdeV7rgDA+uqnP/1pjBgxIoYMGRI777xzlJeXR0lJSRx77LF59TTV6UsqKiriu9/97iqvB7vZZptV+n1lvcCWW24ZkyZNikcffTQef/zxGDVqVNx0001x4YUXxvDhw6tdb48ePaJBgwa5XnVlFi1aFJMmTYodd9wxt6ykpGSlvdaKvew///nPOPTQQ2OPPfaIm266KTbccMNo2LBhjBgxokZfkLY2pVBbTfvYiK8D26FDh8b9998fQ4YMifvuuy/Ky8tj//33z43ZYIMNYvz48fHEE0/EY489Fo899liMGDEifvCDH8Ttt99eo5qPPvroeOGFF+JnP/tZbLfddtG8efOoqKiI/ffff6XnyjftZfM5V2BdJrAF8tK/f//48Y9/HC+99NJqv8Spc+fO8dRTT1W5PMDbb7+du32ZVYWV1dWtW7fIsiy6dOnyjV+kd9ppp9hpp53isssui7vuuitOOOGEuOeee+Lkk0+u9jYOOeSQuOuuu+KOO+6IX/7yl1Vunz17dvzlL3+J7bffPhfYLvvX4xW/LXbFf3WfMGFC/O///m/cfvvtlb7UbG3+WdPKLPsihX//+98r/SRnvrVVd87btWsXTZs2jUmTJlW57e2334569epFp06dqrWt6jjmmGPi1FNPjUmTJsW9994bTZs2jUMOOaTKuJ49e0bPnj3jl7/8Zbzwwgux6667xi233BKXXnrpKre9qn1+4IEHomvXrvHggw9WGrPsW4/XZIMNNojS0tJ49913q9y24rJ8zpVvel4CwLrsgQceiAEDBsTVV1+dW7Zw4cIqvdraeL3s1q1bzJ07N/cpwZpq1qxZHHPMMXHMMcfE4sWL4/DDD4/LLrsshg4dWuWSVqvStGnT2GeffeKpp56K999/v1LPvsx9990XixYtiqOOOiq3rFWrViv9s/0Ve9lRo0ZFaWlpPPHEE9G4cePc8hEjRlR3N2ukW7du8fLLL8eSJUsqfclXTWur7rwvO36TJk2qdHmvxYsXx+TJk7/xnC+vS5cuseOOO8a9994bp59+ejz44IPRr1+/SvsS8fWnew855JA45JBDoqKiIk499dS49dZb44ILLlhln7+q/Z0xY0Y8/fTTMXz48Ljwwgtzy995551q173sGL377ruVPn07ffr0Kp8sru65oo+lLnBJBCAvzZs3j5tvvjmGDRu20iBrmQMPPDCWLl0av/vd7yot/+1vfxslJSWVrq3ZrFmzKs1vPg4//PCoX79+DB8+vMq/PmdZFtOnT1/jNmbMmFFl3e222y4iIu/LIhxxxBGx9dZbx69+9at49dVXK91WUVERp5xySsyYMSN+8Ytf5JYvC0SXv+7S0qVL4/e//32l9Zf9q/vytWZZFtddd11eNeZrv/32ixYtWsQVV1xR5dtal9WST23NmjWLiKoB9Yrq168f++23X/zlL3+JKVOm5JZ/9tlncdddd8Vuu+2Wu1zB2nDEEUdE/fr14+677477778/Dj744FytEV+H7V999VWldXr27Bn16tVb4+OkWbNmK/2zsJUdt5dffjlefPHFatVcv3792HfffeOhhx6KTz75JLf83XffrXKt6HzOlVXVCwDrg/r161d5rbzhhhuqfGK0uj3N6hx99NHx4osvxhNPPFHltpkzZ1bpPVZmxX63UaNGsdVWW0WWZXl/P8Mvf/nLyLIsBg4cGAsWLKh02+TJk+Pcc8+NTp06xfe///3c8m7dusXbb78dn3/+eW7Zm2++WeWyDPXr14+SkpJKx3HKlCnx0EMP5VVjvo444oj44osvqrw3iajcy1a3tuq+f9l3332jUaNGcf3111d6PP3xj3+MWbNmxUEHHZT/zqzGMcccEy+99FL86U9/ii+++KLS5RAiqj5O6tWrF7169YqI1b/nadq0aURUfZyvrI+NiLj22murXfM+++wTDRo0iJtvvrnS8pXNVXXPlVXVC+sSn7AF8jZgwIA1jjnkkENir732il/84hcxZcqU2HbbbePJJ5+Mv/zlLzFkyJBcQBkR0bt373jqqafimmuuiY4dO0aXLl3iO9/5TrXr6datW1x66aUxdOjQmDJlSvTr1y9atGgRkydPjtGjR8ePfvSjOOecc1a7jdtvvz1uuumm6N+/f3Tr1i3mzJkTf/jDH6KsrCwOPPDAatcSEdGwYcMYNWpU7L333rHbbrvFiSeeGDvssEPMnDkz7rrrrnj99dfj/PPPj8MPPzy3ztZbbx077bRTDB06NL788sto3bp13HPPPVUa9C222CK6desW55xzTnz88cdRVlYWo0aNqtZ1rb6JsrKy+O1vfxsnn3xyfPvb347jjz8+WrVqFW+++WbMnz8/br/99rxq6927d0REnHHGGdG3b9+oX79+HHvssSu970svvTTGjBkTu+22W5x66qnRoEGDuPXWW2PRokVx1VVXrdX93GCDDWKvvfaKa665JubMmVOlyf373/8ep59+ehx11FGx2WabxVdffRV33nln1K9fP4444ojVbrt3795x7733xllnnRXf/va3o3nz5nHIIYfEwQcfHA8++GD0798/DjrooJg8eXLccsstsdVWW8XcuXOrVfewYcPiySefjF133TVOOeWU3D+WbLPNNjF+/PjcuHzOlVXVCwDrg4MPPjjuvPPOKC8vj6222ipefPHFeOqpp6JNmzaVxm233XZRv379uPLKK2PWrFnRuHHj2HvvvfO6vuvPfvazePjhh+Pggw+OgQMHRu/evWPevHkxYcKEeOCBB2LKlCnRtm3b1W5jv/32iw4dOsSuu+4a7du3j4kTJ8bvfve7OOigg9b4BWIr2m233eK3v/1tDBkyJHr16hUDBw6MDTfcMN5+++34wx/+EPXq1YuHHnqo0qXRBg0aFNdcc0307ds3TjrppJg2bVrccsstsfXWW1f6gtiDDjoorrnmmth///3j+OOPj2nTpsWNN94Y3bt3X+1lGL6pH/zgB3HHHXfEWWedFa+88krsvvvuMW/evHjqqafi1FNPjcMOOyyv2qr7/qVdu3YxdOjQGD58eOy///5x6KGHxqRJk+Kmm26Kb3/725W+YGxtOProo+Occ86Jc845J1q3bl3lk6gnn3xyfPnll7H33nvHxhtvHO+//37ccMMNsd122+W+a2RlmjRpEltttVXce++9sdlmm0Xr1q1jm222iW222Sb22GOPuOqqq2LJkiWx0UYbxZNPPhmTJ0+uds3t27ePwYMHx9VXXx2HHnpo7L///vHmm2/GY489Fm3btq30adnqniurqxfWGRnAaowYMSKLiGzcuHGrHde5c+fsoIMOqrRszpw52Zlnnpl17Ngxa9iwYdajR4/s17/+dVZRUVFp3Ntvv53tscceWZMmTbKIyAYMGJBlWZZddNFFWURkn3/++Uprmjx5cqXlo0aNynbbbbesWbNmWbNmzbItttgiO+2007JJkyblxvTp0yfbeuutq9T/+uuvZ8cdd1y2ySabZI0bN8422GCD7OCDD85effXVNR2iVfr888+zs88+O+vevXvWqFGjLCKyiMj++Mc/rnT8e++9l+27775Z48aNs/bt22fnn39+NmbMmCwismeeeSY37q233sr23XffrHnz5lnbtm2zH/7wh9mbb76ZRUQ2YsSI3Lhlx295nTt3zh3fLMuyyZMnZxGR/frXv640blXH+OGHH8522WWXrEmTJllZWVm24447ZnfffXfetX311VfZT3/606xdu3ZZSUlJpTojIrvooosq3e/rr7+e9e3bN2vevHnWtGnTbK+99speeOGFlda84mP1mWeeqXIMV+cPf/hDFhFZixYtsgULFlS67b///W82aNCgrFu3bllpaWnWunXrbK+99sqeeuqpNW537ty52fHHH5+1bNkyi4isc+fOWZZlWUVFRXb55ZdnnTt3zho3bpx961vfyh599NFswIABuTFZtuq5Wubpp5/OvvWtb2WNGjXKunXrlt12223Z2WefnZWWllYZW51zZVX1AkBdsKYed8aMGdmJJ56YtW3bNmvevHnWt2/f7O23367SS2XZ171D165ds/r161fqOVbWH2fZ1/1onz59Ki2bM2dONnTo0Fzf2LZt22yXXXbJfvOb32SLFy/Osmz1vcCtt96a7bHHHlmbNm2yxo0bZ926dct+9rOfZbNmzcr/4Px///znP7PDDjssa9u2ba5f22CDDbKpU6eudPz//M//ZF27ds0aNWqUbbfddtkTTzxRpZ/Jsiz74x//mPXo0SNr3LhxtsUWW2QjRoyoVt+6sp5uVe8XVnaM58+fn/3iF7/IunTpkjVs2DDr0KFDduSRR2bvvfde3rWt6v3Lqnro3/3ud9kWW2yRNWzYMGvfvn12yimnZDNmzKhS88rep6zsGK7O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AAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASITAFgAAAAAgEQJbAAAAAIBECGwBAAAAABIhsAUAAAAASETegW3Xrl1j+vTpVZbPnDkzunbtulaKAgCAQtPXAgCQorwD2ylTpsTSpUurLF+0aFF8/PHHa6UoAAAoNH0tAAApalDdgQ8//HDu/5944okoLy/P/b506dJ4+umnY9NNN12rxQEAwNqmrwUAIGXVDmz79esXERElJSUxYMCASrc1bNgwNt1007j66qvXanEAALC26WsBAEhZtQPbioqKiIjo0qVLjBs3Ltq2bVuwogAAoFD0tQAApKzage0ykydPzv3/woULo7S0dK0WBAAAxaCvBQAgRXl/6VhFRUVccsklsdFGG0Xz5s3jv//9b0REXHDBBfHHP/5xrRcIAACFoK8FACBFeQe2l156aYwcOTKuuuqqaNSoUW75NttsE7fddttaLQ4AAApFXwsAQIryDmzvuOOO+P3vfx8nnHBC1K9fP7d82223jbfffnutFgcAAIWirwUAIEV5B7Yff/xxdO/evcryioqKWLJkyVopCgAACk1fCwBAivIObLfaaqv45z//WWX5Aw88EN/61rfWSlEAAFBo+loAAFLUIN8VLrzwwhgwYEB8/PHHUVFREQ8++GBMmjQp7rjjjnj00UcLUSMAAKx1+loAAFKU9ydsDzvssHjkkUfiqaeeimbNmsWFF14YEydOjEceeSS++93vFqJGAABY6/S1AACkqCTLsqy2i2DVZs+eHeXl5TFr1qwoKyur7XIAAIpKL1Q3mEcAYH2XTz+U9ydsAQAAAAAojLyvYduqVasoKSmpsrykpCRKS0uje/fuMXDgwDjxxBPXSoEAAFAI+loAAFJUoy8du+yyy+KAAw6IHXfcMSIiXnnllXj88cfjtNNOi8mTJ8cpp5wSX331Vfzwhz/8xgUOHDgwbr/99q+LbdAgWrduHb169YrjjjsuBg4cGPXqrRsfEt50001jyJAhMWTIkNoupYqPZsyPOQu/itkLlkR5k4bRvLRBbNyqaa2NT7GmWfMXxxdzF8fshUuirEnDaNusUZQ3bbTafch3ndT2uabr5OPjGfNj9nLbb1HaIDZai9svhs9mL4wZ8xbH7IVfRVmTBtGqaaNoX1a62nUKfVzz9cnMBTFrwZJcPWVNGkbHlk1qrZ6aKMZjqdDndF2Yh7rwfJ/iPuT7+C7GPtTkuS9F+tqa0deu288pNelr85Xaca3JPOT7upziPOSr0K83xeh1Cj0PKb4vLMZrcjHOuUIr9Dyk2K+lNr4m66yPz8XL5B3YPv/883HppZfGT37yk0rLb7311njyySdj1KhR0atXr7j++uvXSmMbEbH//vvHiBEjYunSpfHZZ5/F448/HoMHD44HHnggHn744WjQoOpuLFmyJBo2bLhW7r8ue3/6vDh/9IQY++703LLdureJy/r3jM5tmhV9fIo1fTJzQfx81L/in+98kVu2R4+28asjeq3yiSLfdVLb55quk49Cb78YPpg+L4auZB8u798zNqml45qv1OqpiWLsQ2rndIrqwvO9fajeOjV57kuVvrZuSe38SvE5pSZ9bb5SO67r6zzkK8V5KPQ+5DsPKb4vLMZrcopzna/UevkUn5fWx31I8bl4eXn/M/4TTzwR++67b5Xl++yzTzzxxBMREXHggQfGf//7329e3f/XuHHj6NChQ2y00Uax/fbbx/nnnx9/+ctf4rHHHouRI0dGxNd/unbzzTfHoYceGs2aNYvLLrssIiJuvvnm6NatWzRq1Cg233zzuPPOOytte9l6BxxwQDRp0iS6du0aDzzwQKUxEyZMiL333juaNGkSbdq0iR/96Ecxd+7c3O177rlnlU8Y9OvXLwYOHJi7/f33348zzzwzSkpKVvqnd7XhoxnzqzyYIyKef3d6/GL0hPhoxvyijk+xplnzF1c5gSMi/vHOF3HeqH/FrPmLq+xDvuukts81XScfH69h+x9/w+0Xw2ezF1ZpjiK+3ofzR0+Iz2YvrLJOoY9rvj6ZuWC19Xwyc0FR66mJYjyWCn1O14V5qAvP9ynuQ76P72LsQ02e+1Kmr9XXpjK+GPdRk742X6kd15rMQ76vyynOQ74K/XpTjF6n0POQ4vvCYrwmF+OcK7RCz0OK/Vpq42uyzvr4XLyivAPb1q1bxyOPPFJl+SOPPBKtW7eOiIh58+ZFixYtvnl1q7H33nvHtttuGw8++GBu2bBhw6J///4xYcKEGDRoUIwePToGDx4cZ599dvz73/+OH//4x3HiiSfGM888U2lbF1xwQRxxxBHx5ptvxgknnBDHHntsTJw4Mbcvffv2jVatWsW4cePi/vvvj6eeeipOP/30atf64IMPxsYbbxwXX3xxTJ06NaZOnbrKsYsWLYrZs2dX+imUOQu/qvJgXub5d6fHnIVfFXV8ijV9MXdxlRN4mX+880V8MbfqSZzvOqntc03XycfsNWx/9jfcfjHMmLd4tfswY17Vx0ahj2u+Zi1Ystp6Zi1YUtR6aqIYj6VCn9N1YR7qwvN9ivuQ7+O7GPtQk+e+lOlrC9fXFrOnjUjvOSLF55Sa9LX5Su241mQe8n1dTnEe8lXo15ti9DqFnocU3xcW4zW5GOdcoRV6HlLs11IbX5N11sfn4hXlfUmECy64IE455ZR45plnctf6GjduXPztb3+LW265JSIixowZE3369Fm7la7EFltsEf/6179yvx9//PGVvhRi2fXATj311IiIOOuss+Kll16K3/zmN7HXXnvlxh111FFx8sknR0TEJZdcEmPGjIkbbrghbrrpprjrrrti4cKFcccdd0SzZl9/hPp3v/tdHHLIIXHllVdG+/bt11hn69ato379+tGiRYvo0KHDasdeccUVMXz48OofhG9g9hpeGOcsrHx7ocenWNPsldS4uvE1WSe1fa7pOvko9PaLYU1B4MpuT22/U6unJoqxD6md0ymqE8/39qF691GD576U6WsL19cWs6eNSO/8SvI5pQZ9bb5SO67r6zzkK8V5yFeh5yHJ94VFeE1Oca7zlVovn+Tz0vq4Dwk+F68o70/Y/vCHP4znnnsumjVrFg8++GA8+OCD0bRp03juuefipJNOioiIs88+O+699961XuyKsiyr9GdYO+ywQ6XbJ06cGLvuumulZbvuumvuUwbL7LzzzlV+XzZm4sSJse222+aa2mXbqKioiEmTJq2V/Vje0KFDY9asWbmfDz/8cK3fxzJlTVZ/LbQWpZVvL/T4FGsqW0mNqxtfk3VS2+earpOPQm+/GMpKV//vXSu7PbX9Tq2emijGPqR2TqeoTjzf24fq3UcNnvtSpq8tXF9bzJ42Ir3zK8nnlBr0tflK7biur/OQrxTnIV+Fnock3xcW4TU5xbnOV2q9fJLPS+vjPiT4XLyivALbJUuWxKBBg6Jjx45x9913x+uvvx6vv/563H333bHLLrsUqsZVmjhxYnTp0iX3+/LNZzHVq1cvsiyrtGzJkpql8Y0bN46ysrJKP4XSorRB7Na9zUpv2617m2ixwhN8ocenWFPb5o1ijx5tVzp+jx5to23zqt8emO86qe1zTdfJR9katr8uvOFv1azRavehVbOqj41CH9d8lTdpuNp6ytfwopeCYjyWCn1O14V5qAvP9ynuQ76P72LsQ02e+1Klr125tdXXFrOnjUjvOSLF55Sa9LX5Su241mQe8n1dTnEe8lXo15ti9DqFnocU3xcW4zW5GOdcoRV6HlLs11IbX5N11sfn4hXlFdg2bNgwRo0aVaha8vL3v/89JkyYEEccccQqx2y55ZYxduzYSsvGjh0bW221VaVlL730UpXft9xyy9w23nzzzZg3b16lbdSrVy8233zziIho165dpet3LV26NP79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kAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENgCAAAAACRCYAsAAAAAkAiBLQAAAABAIgS2AAAAAACJENiuwrPPPhslJSUxc+bMiIgYOXJktGzZ8htvt6SkJB56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Sd5ha03WIX962sJLra8tRh+cokK/phVjHlizFI9riv1UXZBvX1sX+uBCP77z7e8i0nvNqknGkO9c5zs+xaynppL/hO36rq58qgQAoCb0QnWDeQQA1nf59EPr5TVsAQAAAABSJLAFAAAAAEiEwBYAAAAAIBECWwAAAACARAhsAQAAAAASIbAFAAAAAEiEwBYAAAAAIBECWwAAAACARAhsAQAAAAASIbAFAAAAAEiEwBYAAAAAIBECWwAAAACARAhsAQAAAAASIbAFAAAAAEiEwBYAAAAAIBECWwAAAACARAhsAQAAAAASIbAFAAAAAEiEwBYAAAAAIBECWwAAAACARDSo7QJYvSzLIiJi9uzZtVwJAEDxLeuBlvVErJv0tADA+i6fvlZgm7g5c+ZERESnTp1quRIAgNozZ86cKC8vr+0yqCE9LQDA16rT15ZkPq6QtIqKivjkk0+iRYsWUVJSUu31Zs+eHZ06dYoPP/wwysrKClghtck8rz/M9frBPK8/zHX1ZVkWc+bMiY4dO0a9eq7mta7S07Im5nr9YJ7XH+Z6/WCe85NPX+sTtomrV69ebLzxxjVev6yszEmzHjDP6w9zvX4wz+sPc109Plm77tPTUl3mev1gntcf5nr9YJ6rr7p9rY8pAAAAAAAkQmALAAAAAJAIgW0d1bhx47jooouicePGtV0KBWSe1x/mev1gntcf5hqqx7my/jDX6wfzvP4w1+sH81w4vnQMAAAAACARPmELAAAAAJAIgS0AAAAAQCIEtgAAAAAAiRDYAgAAAAAkQmBbB914442x6aabRmlpaXznO9+JV155pbZL4hv6xz/+EYccckh07NgxSkpK4qGHHqp0e5ZlceGFF8aGG24YTZo0iX333Tfeeeed2imWGrviiivi29/+drRo0SI22GCD6NevX0yaNKnSmIULF8Zpp50Wbdq0iebNm8cRRxwRn332WS1VTE3dfPPN0atXrygrK4uysrLYeeed47HHHsvdbp7rpl/96ldRUlISQ4YMyS0z17B6+tq6R1+7ftDXrh/0tOsnPW1xCGzrmHvvvTfOOuusuOiii+L111+PbbfdNvr27RvTpk2r7dL4BubNmxfbbrtt3HjjjSu9/aqrrorrr78+brnllnj55ZejWbNm0bdv31i4cGGRK+WbeO655+K0006Ll156KcaMGRNLliyJ/fbbL+bNm5cbc+aZZ8YjjzwS999/fzz33HPxySefxOGHH16LVVMTG2+8cfzqV7+K1157LV599dXYe++947DDDov//Oc/EWGe66Jx48bFrbfeGr169aq03FzDqulr6yZ97fpBX7t+0NOuf/S0RZRRp+y4447Zaaedlvt96dKlWceOHbMrrriiFqtibYqIbPTo0bnfKyoqsg4dOmS//vWvc8tmzpyZNW7cOLv77rtroULWlmnTpmURkT333HNZln09rw0bNszuv//+3JiJEydmEZG9+OKLtVUma0mrVq2y2267zTzXQXPmzMl69OiRjRkzJuvTp082ePDgLMuc07Am+tq6T1+7/tDXrj/0tHWXnra4fMK2Dlm8eHG89tprse++++aW1atXL/bdd9948cUXa7EyCmny5Mnx6aefVpr38vLy+M53vmPe13GzZs2KiIjWrVtHRMRrr70WS5YsqTTXW2yxRWyyySbmeh22dOnSuOeee2LevHmx8847m+c66LTTTouDDjqo0pxGOKdhdfS16yd9bd2lr6379LR1n562uBrUdgGsPV988UUsXbo02rdvX2l5+/bt4+23366lqii0Tz/9NCJipfO+7DbWPRUVFTFkyJDYddddY5tttomIr+e6UaNG0bJly0pjzfW6acKECbHzzjvHwoULo3nz5jF69OjYaqutYvz48ea5Drnnnnvi9ddfj3HjxlW5zTkNq6avXT/pa+smfW3dpqddP+hpi09gC5Cg0047Lf7973/H888/X9ulUCCbb755jB8/PmbNmhUPPPBADBgwIJ577rnaLou16MMPP4zBgwfHmDFjorS0tLbLAYBaoa+t2/S0dZ+etna4JEId0rZt26hfv36Vb+L77LPPokOHDrVUFYW2bG7Ne91x+umnx6OPPhrPPPNMbLzxxrnlHTp0iMWLF8fMmTMrjTfX66ZGjRpF9+7do3fv3nHFFVfEtttuG9ddd515rkNee+21mDZtWmy//fbRoEGDaNCgQTz33HNx/fXXR4MGDaJ9+/bmGlZBX7t+0tfWPfrauk9PW/fpaWuHwLYOadSoUfTu3Tuefvrp3LKKiop4+umnY+edd67FyiikLl26RIcOHSrN++zZs+Pll1827+uYLMvi9NNPj9GjR8ff//736NKlS6Xbe/fuHQ0bNqw015MmTYoPPvjAXNcBFRUVsWjRIvNch+yzzz4xYcKEGD9+fO5nhx12iBNOOCH3/+YaVk5fu37S19Yd+tr1l5627tHT1g6XRKhjzjrrrBgwYEDssMMOseOOO8a1114b8+bNixNPPLG2S+MbmDt3brz77ru53ydPnhzjx4+P1q1bxyabbBJDhgyJSy+9NHr06BFdunSJCy64IDp27Bj9+vWrvaLJ22mnnRZ33XVX/OUvf4kWLVrkrvdTXl4eTZo0ifLy8jjppJPirLPOitatW0dZWVn89Kc/jZ133jl22mmnWq6efAwdOjQOOOCA2GSTTWLOnDlx1113xbPPPhtPPPGEea5DWrRokbtW3zLNmjWLNm3a5Jaba1g1fW3dpK9dP+hr1w962vWDnraWZNQ5N9xwQ7bJJptkjRo1ynbcccfspZdequ2S+IaeeeaZLCKq/AwYMCDLsiyrqKjILrjggqx9+/ZZ48aNs3322SebNGlS7RZN3lY2xxGRjRgxIjdmwYIF2amnnpq1atUqa9q0ada/f/9s6tSptVc0NTJo0KCsc+fOWaNGjbJ27dpl++yzT/bkk0/mbjfPdVefPn2ywYMH534317B6+tq6R1+7ftDXrh/0tOsvPW3hlWRZlhUzIAYAAAAAYOVcwxYAAAAAIBECWwAAAACARAhsAQAAAAASIbAFAAAAAEiEwBYAAAAAIBECWwAAAACARAhsAQAAAAASIbAFKJI999wzhgwZUttlFFVJSUk89NBDERExZcqUKCkpifHjx+duHzt2bPTs2TMaNmwY/fr1i2effTZKSkpi5syZBa1r4MCB0a9fv4LeBwBAXbPpppvGtddeW9tlFM2K/evKetWHHnoounfvHvXr148hQ4bEyJEjo2XLlgWvbX18bwHrE4EtsN4bOHBglJSUxE9+8pMqt5122mlRUlISAwcOrPb2ihU6rms6deoUU6dOjW222Sa37KyzzortttsuJk+eHCNHjoxddtklpk6dGuXl5WvlPlcWEkdEXHfddTFy5Mi1ch8AACla1uOu+PPuu++ucd1ihY7rmpX1qj/+8Y/jyCOPjA8//DAuueSSOOaYY+J///d/19p9ruq9xYMPPhiXXHLJWrsfIC0CW4D4Oky85557YsGCBbllCxcujLvuuis22WSTWqxs9RYvXlzbJVRb/fr1o0OHDtGgQYPcsvfeey/23nvv2HjjjaNly5bRqFGj6NChQ5SUlBS0lvLycm9CAIA6b//994+pU6dW+unSpUttl1XJutTPrtirzp07N6ZNmxZ9+/aNjh07RosWLaJJkyaxwQYbFLyW1q1bR4sWLQp+P0DtENgCRMT2228fnTp1igcffDC37MEHH4xNNtkkvvWtb1Uau2jRojjjjDNigw02iNLS0thtt91i3LhxEfH1Jzr32muviIho1apVlU/nVlRUxLnnnhutW7eODh06xLBhwypte+bMmXHyySdHu3btoqysLPbee+948803c7cPGzYstttuu7jtttuiS5cuUVpaGhERDzzwQPTs2TOaNGkSbdq0iX333TfmzZu3yv3929/+Fptttlk0adIk9tprrxg5cmSlf7lfdj/Lu/baa2PTTTfN/T5u3Lj47ne/G23bto3y8vLo06dPvP7666u8z+U/7brs/6dPnx6DBg2KkpKSGDly5Eo/QTB27NjYc889o2nTptGqVavo27dvzJgxIyIiHn/88dhtt92iZcuW0aZNmzj44IPjvffey6277A3Jt771rSgpKYk999wzIqpeEmF1cxrxf59sePrpp2OHHXaIpk2bxi677BKTJk1a5f4CANS2xo0bR4cOHSr91K9fP6655pro2bNnNGvWLDp16hSnnnpqzJ07NyK+7ntOPPHEmDVrVu5Tucv3rPPnz49BgwZFixYtYpNNNonf//73le7zww8/jKOPPjpatmwZrVu3jsMOOyymTJmSu31ZH3bZZZdFx44dY/PNN4+IiJtuuil69OgRpaWl0b59+zjyyCNXu28jR46MTTbZJJo2bRr9+/ePq6++utI/yK/sElhDhgzJ9YMRa+4lV7R8r/rss8/mAtO99947SkpK4tlnn13pp5MfeeSR+Pa3vx2lpaXRtm3b6N+/f+62O++8M3bYYYdo0aJFdOjQIY4//viYNm1aRKz+vcWKl0SYMWNG/OAHP4hWrVpF06ZN44ADDoh33nmn0vFq2bJlPPHEE7HllltG8+bNc4E+kB6BLcD/N2jQoBgxYkTu9z/96U9x4oknVhl37rnnxqhRo+L222+P119/Pbp37x59+/aNL7/8Mjp16hSjRo2KiIhJkybF1KlT47rrrsute/vtt0ezZs3i5ZdfjquuuiouvvjiGDNmTO72o446KqZNmxaPPfZYvPbaa7H99tvHPvvsE19++WVuzLvvvhujRo2KBx98MMaPHx9Tp06N4447LgYNGhQTJ06MZ599Ng4//PDIsmyl+/nhhx/G4YcfHoccckiMHz8+Tj755DjvvPPyPl5z5syJAQMGxPPPPx8vvfRS9OjRIw488MCYM2fOGtdddnmEsrKyuPbaa2Pq1KlxzDHHVBk3fvz42GeffWKrrbaKF198MZ5//vk45JBDYunSpRERMW/evDjrrLPi1Vdfjaeffjrq1asX/fv3j4qKioiIeOWVVyIi4qmnnoqpU6dWCuSXt7o5Xd4vfvGLuPrqq+PVV1+NBg0axKBBg/I6ZgAAKahXr15cf/318Z///Cduv/32+Pvf/x7nnntuRHz9Z//XXnttlJWV5T6Ve8455+TWvfrqq2OHHXaIN954I0499dQ45ZRTcv+IvWTJkujbt2+0aNEi/vnPf8bYsWNzweDyn6R9+umnY9KkSTFmzJh49NFH49VXX40zzjgjLr744pg0aVI8/vjjsccee6yy/pdffjlOOumkOP3002P8+PGx1157xaWXXpr3cVhTL7k6y//j/ahRo2Lq1Kmxyy67VBn317/+Nfr37x8HHnhgvPHGG/H000/HjjvumLt9yZIlcckll8Sbb74ZDz30UEyZMiUXyq7pvcXyBg4cGK+++mo8/PDD8eKLL0aWZXHggQfGkiVLcmPmz58fv/nNb+LOO++Mf/zjH/HBBx9UmlsgIRnAem7AgAHZYYcdlk2bNi1r3LhxNmXKlGzKlClZaWlp9vnnn2eHHXZYNmDAgCzLsmzu3LlZw4YNsz//+c+59RcvXpx17Ngxu+qqq7Isy7Jnnnkmi4hsxowZle6nT58+2W677VZp2be//e3s5z//eZZlWfbPf/4zKysryxYuXFhpTLdu3bJbb701y7Isu+iii7KGDRtm06ZNy93+2muvZRGRTZkypVr7O3To0GyrrbaqtOznP/95pZovuuiibNttt6005re//W3WuXPnVW536dKlWYsWLbJHHnkktywistGjR2dZlmWTJ0/OIiJ74403creXl5dnI0aMyP2+4rE77rjjsl133bVa+5VlWfb5559nEZFNmDBhlfeZZf8351mW35w+9dRTuTF//etfs4jIFixYUO36AACKZcCAAVn9+vWzZs2a5X6OPPLIlY69//77szZt2uR+HzFiRFZeXl5lXOfOnbPvfe97ud8rKiqyDTbYILv55puzLMuyO++8M9t8882zioqK3JhFixZlTZo0yZ544olcXe3bt88WLVqUGzNq1KisrKwsmz17drX27bjjjssOPPDASsuOOeaYSjUv3+8tM3jw4KxPnz6r3O6aeskVe9UZM2ZkEZE988wzuW2seOx23nnn7IQTTqjWfmVZlo0bNy6LiGzOnDkrvc9l+vTpkw0ePDjLsiz73//93ywisrFjx+Zu/+KLL7ImTZpk9913X66uiMjefffd3Jgbb7wxa9++fbVrA4rHJ2wB/r927drFQQcdFCNHjowRI0bEQQcdFG3btq005r333oslS5bErrvumlvWsGHD2HHHHWPixIlrvI9evXpV+n3DDTfM/cnTm2++GXPnzo02bdpE8+bNcz+TJ0+u9KdZnTt3jnbt2uV+33bbbWOfffaJnj17xlFHHRV/+MMfcpcMWJmJEyfGd77znUrLdt555zXWvqLPPvssfvjDH0aPHj2ivLw8ysrKYu7cufHBBx/kva1VWfYJ21V555134rjjjouuXbtGWVlZ7pIN+dSQz5wuP38bbrhhRERu/gAAUrPXXnvF+PHjcz/XX399RHz910f77LNPbLTRRtGiRYv4/ve/H9OnT4/58+evcZvL90MlJSXRoUOHSv3su+++Gy1atMj1sq1bt46FCxdW6md79uwZjRo1yv3+3e9+Nzp37hxdu3aN73//+/HnP/95tbWsrX52bfSSa7Kmfva1116LQw45JDbZZJNo0aJF9OnTJ+8aJk6cGA0aNKh0TNq0aRObb755pX62adOm0a1bt9zvy78XAdLSYM1DANYfgwYNitNPPz0iIm688ca1vv2GDRtW+r2kpCT3J1dz586NDTfcMJ599tkq6y1/HaxmzZpVuq1+/foxZsyYeOGFF+LJJ5+MG264IX7xi1/Eyy+/XOMvlahXr16VSyos/+dUEREDBgyI6dOnx3XXXRedO3eOxo0bx84777xWvziiSZMmq739kEMOic6dO8cf/vCH6NixY1RUVMQ222xTsC+vWH7+ln3ZRHX+ZA4AoDY0a9YsunfvXmnZlClT4uCDD45TTjklLrvssmjdunU8//zzcdJJJ8XixYujadOmq93mmvrZ3r17x5///Ocq6y3/gYMV+9kWLVrE66+/Hs8++2w8+eSTceGFF8awYcNi3LhxNf6i2Or0s8XoJVfXz86bNy/69u0bffv2jT//+c/Rrl27+OCDD6Jv374F6WdXNncrHiMgDT5hC7CcZdfXWnb9rRV169YtGjVqFGPHjs0tW7JkSYwbNy622mqriIjcpwWWXWe1urbffvv49NNPo0GDBtG9e/dKPyt+0ndFJSUlseuuu8bw4cPjjTfeiEaNGsXo0aNXOnbLLbfMXdt1mZdeeqnS7+3atYtPP/20UgM3fvz4/8fefcdXVd//A39nBxICCDhwMVVEXFi/7lX9WTeKs7aCo1q1VVu1bgW3ddS6ta2ztbUoUEcdtW7aOqtiRQsWrYJVQSAEyD6/P2iuuSQhCSRwsM/n48HDm3PPPedzxudz3vflvedmzTNp0qQ45ZRTYu+9946hQ4dGUVFRzJo1qx1b3LpNN900/vznPzf73OzZs+P999+P888/P775zW/GkCFDmnyyuC3Hoi3HFADg6+L111+P+vr6uPbaa2ObbbaJDTbYIGbOnJk1T2FhYbtr2YjF9ezUqVNj9dVXb1LPdu/efamvzc/Pj9133z1++tOfxttvvx0ffvhhPPPMM83OO2TIkHj55ZezpjVXzy75g1qN69m21JIdYWn17HvvvRezZ8+OK6+8MnbcccfYaKONmnzitS317JAhQ6K2tjZrnzRsn3oWVk0CW4BG8vLyYsqUKfHuu+9GXl5ek+dLSkrixBNPjDPPPDOeeOKJePfdd+N73/teLFy4MI499tiIWHzLgpycnHj00Ufjiy++yPzibmt233332HbbbWPEiBHx1FNPxYcffhh/+ctf4rzzzovXXnutxde9/PLLcfnll8drr70W//73v2P8+PHxxRdfxJAhQ5qd//vf/35MnTo1zjzzzHj//ffj/vvvj7vvvjtrnl122SW++OKL+OlPfxoffPBB3HzzzfH4449nzTN48OC47777YsqUKfHyyy/HkUce2eonYtvrnHPOiVdffTVOOumkePvtt+O9996LW2+9NWbNmhU9e/aMXr16xR133BHTpk2LZ555Jn784x9nvX711VePLl26xBNPPBGfffZZzJs3r8k62nJMAQC+LgYNGhQ1NTVx4403xr/+9a+477774rbbbsuap1+/flFRURF//vOfY9asWW26VUJExJFHHhm9e/eOAw44IF588cWYPn16PPfcc3HKKafEJ5980uLrHn300bjhhhvizTffjI8++ijuvffeqK+vjw033LDZ+U855ZR44okn4pprrompU6fGTTfdFE888UTWPLvttlu89tprce+998bUqVPjoosuinfeeSfzfFtqyY5w0UUXxW9/+9u46KKLYsqUKTF58uS46qqrIiJivfXWi8LCwsyxePjhh+OSSy7Jen1b3lsMHjw4DjjggPje974XL730Urz11lvxne98J9Zee+044IADOnybgM4nsAVYQllZWZSVlbX4/JVXXhkjR46M7373u7HlllvGtGnT4sknn4yePXtGRMTaa68dY8eOjbPPPjvWWGONzC0WWpOTkxN//OMfY6eddoqjjz46Nthggzj88MPjo48+ijXWWGOp7X3hhRdi7733jg022CDOP//8uPbaa2OvvfZqdv711lsvHnrooZg4cWJsttlmcdttt8Xll1+eNc+QIUPilltuiZtvvjk222yzeOWVV5r8guyvfvWrmDNnTmy55Zbx3e9+N0455ZRYffXV27StbbXBBhvEU089FW+99VZsvfXWse2228Yf/vCHyM/Pj9zc3Pjd734Xr7/+emyyySbxox/9KK6++uqs1+fn58cNN9wQt99+e/Tt27fFgrW1YwoA8HWx2WabxXXXXRdXXXVVbLLJJvGb3/wmrrjiiqx5tttuu/j+978fhx12WPTp0yd++tOftmnZXbt2jRdeeCHWW2+9OOigg2LIkCFx7LHHRmVl5VLr6x49esT48eNjt912iyFDhsRtt90Wv/3tb2Po0KHNzr/NNtvEL37xi/j5z38em222WTz11FNx/vnnZ82z5557xgUXXBA/+clP4hvf+EbMnz8/jjrqqMzzbaklO8Iuu+wS48aNi4cffjg233zz2G233TLfduvTp0/cfffdMW7cuNh4443jyiuvjGuuuSbr9W19b3HXXXfF8OHDY999941tt902kiSJP/7xj01ugwCsGnISNywB+J/33HPPxa677hpz5sxZ5vuEAQDAynL33XfHaaedFnPnzl3ZTQFYbj5hCwAAAACQEgJbAAAAAICUcEsEAAAAAICU8AlbAAAAAICUENgCAAAAAKSEwBYAAAAAICUEtgAAAAAAKSGwBQAAAABICYEtAAAAAEBKCGwBAAAAAFJCYAsAAAAAkBICWwAAAACAlBDYAgAAAACkhMAWAAAAACAlBLYAAAAAACkhsAUAAAAASAmBLQAAAABASghsgVXOmDFjIicnJ2bNmrWym8Iy+PDDDyMnJyfuvvvuld0UAIAVrl+/frHvvvuu7GawjBreiwB0JoEtsEzuvvvuyMnJiZycnHjppZeaPJ8kSay77rqRk5OzzAXp5ZdfHhMnTlzOlq4YAsim7r///rj++utXdjNWqFtuuWWVOg9WtfYCQGdrXOMu+e/ss89u83LefffdGDNmTHz44Yed19gO0rDNfGXhwoUxZsyYeO6551Z2U1aYmTNnxpgxY+LNN99c2U1pk1WtvdBe+Su7AcCqrbi4OO6///7YYYcdsqY///zz8cknn0RRUdEyL/vyyy+Pgw8+OEaMGLGcrWRluP/+++Odd96J0047LWv6+uuvH4sWLYqCgoKV07BOdMstt0Tv3r1j9OjRK7spbbKqtRcAVpSLL744+vfvnzVtk002afPr33333Rg7dmzssssu0a9fvw5uHZ1t4cKFMXbs2IiI2GWXXbKeO//889sV3q8qZs6cGWPHjo1+/frF5ptvvrKb06pVrb3QXgJbYLnsvffeMW7cuLjhhhsiP/+rIeX++++P4cOHr9K3LVi4cGF07dp1ZTfjaycnJyeKi4tXdjNWGZWVlVFYWBi5ub4UAwAryl577RVbbbXVym7GMqutrY36+vooLCxc2U352snPz89638PSLViwIEpKSlZ2M2CV490fsFyOOOKImD17dvzpT3/KTKuuro4HH3wwvv3tbzf7mgULFsTpp58e6667bhQVFcWGG24Y11xzTSRJkpknJycnFixYEPfcc0/ma2hLfgpw7ty5MXr06OjRo0d07949jj766Fi4cGGT9f3617+O4cOHR5cuXWK11VaLww8/PD7++OOseXbZZZfYZJNN4vXXX4+ddtopunbtGueee25ERLz22mux5557Ru/evaNLly7Rv3//OOaYY5Zpf33++edx7LHHxhprrBHFxcWx2WabxT333NNkvvr6+vj5z38ew4YNi+Li4ujTp09861vfitdee63Jtm299dbRtWvX6NmzZ+y0007x1FNPZe3HMWPGNFl+v379svZnw1fhXnjhhTjhhBOiV69eUVZWFkcddVTMmTMn67V/+MMfYp999om+fftGUVFRDBw4MC655JKoq6vLzLPLLrvEY489Fh999FHm+DV8uqSle9g+88wzseOOO0ZJSUn06NEjDjjggJgyZUrWPA33DJs2bVqbjn1jP/jBD6K0tLTZ+Y444ohYc801M9uwLMe8X79+8Y9//COef/75zDY3fCLjyy+/jDPOOCOGDRsWpaWlUVZWFnvttVe89dZbWct47rnnIicnJ373u9/F+eefH2uvvXZ07do1ysvLIyJi3LhxsfHGG0dxcXFssskmMWHChBg9enSTT+7U19fH9ddfH0OHDo3i4uJYY4014oQTTsg6lktrLwDQvI8++ihOOumk2HDDDaNLly7Rq1evOOSQQ7JufXD33XfHIYccEhERu+66a+Y6u+TX61966aXYeuuto7i4OAYMGBD33ntvk/XNnTs3TjvttEzdPGjQoLjqqquivr4+M09DbXXNNdfE9ddfHwMHDoyioqJ49913IyLixhtvjKFDh2bqxa222iruv//+Zdr+ttRrEREzZsyIY489NlMv9u/fP0488cSorq7O2rYf/ehH0a9fvygqKop11lknjjrqqMwHPhrq0yVvK9FQLzXen41r+e222y5Tv912221Zr62uro4LL7wwhg8fHt27d4+SkpLYcccd49lnn83an3369ImIiLFjx2aOX0NN3dw9bGtra+OSSy7J7Pt+/frFueeeG1VVVVnzNdy/uC3HvrGamppYbbXV4uijj27yXHl5eRQXF8cZZ5yRmdbeY/7cc8/FN77xjYiIOProozPb3FCvv/jii3HIIYfEeuutF0VFRbHuuuvGj370o1i0aFHWckaPHh2lpaXxwQcfxN577x3dunWLI488MiIiFi1aFKecckr07t07unXrFvvvv3/MmDGj2fcrM2bMiGOOOSbWWGONKCoqiqFDh8add97Z5vbC14H/LQQsl379+sW2224bv/3tb2OvvfaKiIjHH3885s2bF4cffnjccMMNWfMnSRL7779/PPvss3HsscfG5ptvHk8++WSceeaZMWPGjPjZz34WERH33XdfHHfccbH11lvH8ccfHxERAwcOzFrWoYceGv37948rrrgi3njjjfjlL38Zq6++elx11VWZeS677LK44IIL4tBDD43jjjsuvvjii7jxxhtjp512ir///e/Ro0ePzLyzZ8+OvfbaKw4//PD4zne+E2ussUZ8/vnn8f/+3/+LPn36xNlnnx09evSIDz/8MMaPH9/ufbVo0aLYZZddYtq0afGDH/wg+vfvH+PGjYvRo0fH3Llz49RTT83Me+yxx8bdd98de+21Vxx33HFRW1sbL774Yvztb3/LfNpj7NixMWbMmNhuu+3i4osvjsLCwnj55ZfjmWeeif/3//5fu9sXsTjU7NGjR4wZMybef//9uPXWW+Ojjz7KFMYRi4vn0tLS+PGPfxylpaXxzDPPxIUXXhjl5eVx9dVXR0TEeeedF/PmzYtPPvkkc0xLS0tbXO/TTz8de+21VwwYMCDGjBkTixYtihtvvDG23377eOONN5oEkm059ks67LDD4uabb47HHnss8yYqYvEnqR955JEYPXp05OXlLfMxv/766+OHP/xhlJaWxnnnnRcREWussUZERPzrX/+KiRMnxiGHHBL9+/ePzz77LG6//fbYeeed4913342+fftmLeuSSy6JwsLCOOOMM6KqqioKCwvjsccei8MOOyyGDRsWV1xxRcyZMyeOPfbYWHvttZu05YQTToi77747jj766DjllFNi+vTpcdNNN8Xf//73mDRpUhQUFCy1vQDwv27evHlNvinWu3fvePXVV+Mvf/lLHH744bHOOuvEhx9+GLfeemvssssu8e6770bXrl1jp512ilNOOSVuuOGGOPfcc2PIkCEREZn/RkRMmzYtDj744Dj22GNj1KhRceedd8bo0aNj+PDhMXTo0IhYXKPsvPPOMWPGjDjhhBNivfXWi7/85S9xzjnnxKefftrktwLuuuuuqKysjOOPPz6KiopitdVWi1/84hdxyimnxMEHHxynnnpqVFZWxttvvx0vv/xyix+uaElb67WZM2fG1ltvHXPnzo3jjz8+Ntpoo5gxY0Y8+OCDsXDhwigsLIyKiorYcccdY8qUKXHMMcfElltuGbNmzYqHH344Pvnkk+jdu3c7j1jEnDlzYu+9945DDz00jjjiiPj9738fJ554YhQWFmb+x3t5eXn88pe/jCOOOCK+973vxfz58+NXv/pV7LnnnvHKK6/E5ptvHn369Ilbb701TjzxxDjwwAPjoIMOioiITTfdtMV1H3fccXHPPffEwQcfHKeffnq8/PLLccUVV8SUKVNiwoQJWfO25dgvqaCgIA488MAYP3583H777VmfnJ44cWJUVVXF4YcfHhGxTMd8yJAhcfHFF8eFF14Yxx9/fOy4444REbHddttFxOIPDSxcuDBOPPHE6NWrV7zyyitx4403xieffBLjxo3LWlZtbW3sueeescMOO8Q111yT+cbi6NGj4/e//31897vfjW222Saef/752GeffZq05bPPPottttkmcnJy4gc/+EH06dMnHn/88Tj22GOjvLw8TjvttFbbC18LCcAyuOuuu5KISF599dXkpptuSrp165YsXLgwSZIkOeSQQ5Jdd901SZIkWX/99ZN99tkn87qJEycmEZFceumlWcs7+OCDk5ycnGTatGmZaSUlJcmoUaOarPuiiy5KIiI55phjsqYfeOCBSa9evTJ/f/jhh0leXl5y2WWXZc03efLkJD8/P2v6zjvvnEREctttt2XNO2HChMx2Lq/rr78+iYjk17/+dWZadXV1su222yalpaVJeXl5kiRJ8swzzyQRkZxyyilNllFfX58kSZJMnTo1yc3NTQ488MCkrq6u2XmSJEkiIrnooouaLGf99dfP2rcNx3P48OFJdXV1ZvpPf/rTJCKSP/zhD5lpDce5sRNOOCHp2rVrUllZmZm2zz77JOuvv36TeadPn55ERHLXXXdlpm2++ebJ6quvnsyePTsz7a233kpyc3OTo446KjOtrce+OfX19cnaa6+djBw5Mmv673//+yQikhdeeCFJkuU75kOHDk123nnnJtMrKyubHKfp06cnRUVFycUXX5yZ9uyzzyYRkQwYMKDJfh42bFiyzjrrJPPnz89Me+6555KIyNrPL774YhIRyW9+85us1z/xxBNNprfUXgD4X9VQEzX3L0mar4P++te/JhGR3HvvvZlp48aNSyIiefbZZ5vMv/7662fVHkmSJJ9//nlSVFSUnH766Zlpl1xySVJSUpL885//zHr92WefneTl5SX//ve/kyT5qrYqKytLPv/886x5DzjggGTo0KHt3xHNaGu9dtRRRyW5ubnN1lINdeqFF16YREQyfvz4FudpOBbTp0/Per6hXmq8bxtq+WuvvTYzraqqKtPmhvq2trY2qaqqylrenDlzkjXWWCOrvvziiy9arKMb6tEGb775ZhIRyXHHHZc13xlnnJFERPLMM89kprX12DfnySefTCIieeSRR7Km77333smAAQMyfy/rMX/11Veb1OgNmjvvr7jiiiQnJyf56KOPMtNGjRqVRERy9tlnZ837+uuvJxGRnHbaaVnTR48e3WQ/H3vssclaa62VzJo1K2veww8/POnevXumLUtrL3wduCUCsNwOPfTQWLRoUTz66KMxf/78ePTRR1v8v7d//OMfIy8vL0455ZSs6aeffnokSRKPP/54m9f7/e9/P+vvHXfcMWbPnp35+vj48eOjvr4+Dj300Jg1a1bm35prrhmDBw/O+upTRERRUVGTrxk1fAL30UcfjZqamja3rTl//OMfY80114wjjjgiM62goCBOOeWUqKioiOeffz4iIh566KHIycmJiy66qMkyGj7lOnHixKivr48LL7ywyb1Nl+dXfo8//visHwM78cQTIz8/P/74xz9mpnXp0iXzeP78+TFr1qzYcccdY+HChfHee++1e52ffvppvPnmmzF69OhYbbXVMtM33XTT2GOPPbLW3aC1Y9+cnJycOOSQQ+KPf/xjVFRUZKY/8MADsfbaa2d+OK8jj3mDoqKizHGqq6uL2bNnR2lpaWy44YbxxhtvNJl/1KhRWft55syZMXny5DjqqKOyPqm88847x7Bhw7JeO27cuOjevXvsscceWef98OHDo7S0tMl5DwA0dfPNN8ef/vSnrH8R2XVQTU1NzJ49OwYNGhQ9evRo9preko033jjzqcCIiD59+sSGG24Y//rXvzLTxo0bFzvuuGP07Nkz65q+++67R11dXbzwwgtZyxw5cmTmq/wNevToEZ988km8+uqr7dr+JbW1Xquvr4+JEyfGfvvt1+w9gBvq1Iceeig222yzOPDAA1ucp73y8/PjhBNOyPxdWFgYJ5xwQnz++efx+uuvR0REXl5e5tOp9fX18eWXX0ZtbW1stdVW7Tp+jTVs+49//OOs6aeffnpERDz22GNZ09ty7Juz2267Re/eveOBBx7ITJszZ0786U9/isMOOywzraOOeWONz/sFCxbErFmzYrvttoskSeLvf/97k/lPPPHErL+feOKJiIg46aSTsqb/8Ic/zPo7SZJ46KGHYr/99oskSbLO+z333DPmzZu3zMcJVjUCW2C59enTJ3bfffe4//77Y/z48VFXVxcHH3xws/N+9NFH0bdv3+jWrVvW9IaviH300UdtXu96662X9XfPnj0jIjL36Zw6dWokSRKDBw+OPn36ZP2bMmVKfP7551mvX3vttZv8MMPOO+8cI0eOjLFjx0bv3r3jgAMOiLvuuqvJ/aja4qOPPorBgwc3CViX3PYPPvgg+vbtm1UML+mDDz6I3Nzc2HjjjdvdjqUZPHhw1t+lpaWx1lprZd077B//+EcceOCB0b179ygrK4s+ffrEd77znYhY/PXB9mrY7g033LDJc0OGDIlZs2bFggULsqa3duxbcthhh8WiRYvi4YcfjoiIioqK+OMf/xiHHHJI5s1BRx7zBvX19fGzn/0sBg8eHEVFRdG7d+/o06dPvP32283usyV/lbphHw0aNKjJvEtOmzp1asybNy9WX331Jud9RUVFk/MeAGhq6623jt133z3rX8TiW1xdeOGFmXvKNlzT586d2646aMlaJmJxPdO4lpk6dWo88cQTTa7nDW1Z8pq+ZP0QEXHWWWdFaWlpbL311jF48OA4+eSTY9KkSW1uZ4O21mtffPFFlJeXxyabbLLU5X3wwQetztNeffv2bfLjVhtssEFERFYte88998Smm24axcXF0atXr+jTp0889thjy1THRizeN7m5uU1qsjXXXDN69OjR5P1NW459c/Lz82PkyJHxhz/8IVOXjh8/PmpqarIC24465o39+9//zoT1paWl0adPn9h5550jomn9n5+fH+uss07WtIZ9tOQ5uuQ+++KLL2Lu3Llxxx13NDnvGz5Yo5blf4V72AId4tvf/nZ873vfi//85z+x1157Zd0btrPk5eU1Oz3574+X1dfXR05OTjz++OPNzrvkPVUb/5/jBjk5OfHggw/G3/72t3jkkUfiySefjGOOOSauvfba+Nvf/rbU+7KmWeMfCGuPuXPnxs477xxlZWVx8cUXx8CBA6O4uDjeeOONOOuss7J+AKMztXbsW7LNNttEv3794ve//318+9vfjkceeSQWLVqUVeR2xjG//PLL44ILLohjjjkmLrnkklhttdUiNzc3TjvttGb3WXPnYlvV19fH6quvHr/5zW+afX7JT94AAG33wx/+MO6666447bTTYtttt43u3btHTk5OHH744e2qg9pSy9TX18cee+wRP/nJT5qdtyGMbNBc/TBkyJB4//3349FHH40nnngiHnroobjlllviwgsvjLFjx7a5vStDS5+0XdY6NmLxD/aOHj06RowYEWeeeWasvvrqkZeXF1dccUV88MEHy7zciLZ/MnhZ69iIiMMPPzxuv/32ePzxx2PEiBHx+9//PjbaaKPYbLPNMvN09DGvq6uLPfbYI7788ss466yzYqONNoqSkpKYMWNGjB49usl53/ibZe3VsKzvfOc7MWrUqGbnWdq9hOHrRGALdIgDDzwwTjjhhPjb3/6W9TWdJa2//vrx9NNPx/z587M+ZdvwVfr1118/M215vtofsfhHypIkif79+zcpaNtrm222iW222SYuu+yyuP/+++PII4+M3/3ud3Hccce1eRnrr79+vP3221FfX59VxCy57QMHDownn3wyvvzyyxY/ZTtw4MCor6+Pd999NzbffPMW19mzZ8+YO3du1rTq6ur49NNPm51/6tSpseuuu2b+rqioiE8//TT23nvviFj8i6yzZ8+O8ePHx0477ZSZb/r06U2W1dbj17Dd77//fpPn3nvvvejdu3eTT0ssj0MPPTR+/vOfR3l5eTzwwAPRr1+/2GabbZrMtyzHvKVtfvDBB2PXXXeNX/3qV1nT586d26Yf1WjYR9OmTWvy3JLTBg4cGE8//XRsv/32rQa/y9vHAOB/zYMPPhijRo2Ka6+9NjOtsrKySb3VEdfYgQMHRkVFReYTtcuqpKQkDjvssDjssMOiuro6DjrooLjsssvinHPOieLi4jYto631WpcuXaKsrCzeeeedpS5v4MCBrc7T8A2qJfdtS9/ImzlzZixYsCCrbvznP/8ZEZH5QbQHH3wwBgwYEOPHj886Rkveiqw9x2/99deP+vr6mDp1atYPy3322Wcxd+7crPc3y2unnXaKtdZaKx544IHYYYcd4plnnsn8eGxjy3LMW9rmyZMnxz//+c+455574qijjspMb7hNSFs07KPp06dnfaNvyTq2T58+0a1bt6irq2v1vFfH8nXnlghAhygtLY1bb701xowZE/vtt1+L8+29995RV1cXN910U9b0n/3sZ5GTkxN77bVXZlpJSUmTAq09DjrooMjLy4uxY8c2+T/WSZLE7NmzW13GnDlzmry2ISBt71fk99577/jPf/6TFWjX1tbGjTfeGKWlpZmvFY0cOTKSJGn2/4A3tGXEiBGRm5sbF198cZP/q924vQMHDmxyf7M77rijxU8m3HHHHVn3bb311lujtrY2c1waPhHQeB3V1dVxyy23NFlWSUlJm75attZaa8Xmm28e99xzT9bxfuedd+Kpp57KhMUd5bDDDouqqqq455574oknnohDDz006/nlOeYtnbN5eXlNljlu3LiYMWNGm9rct2/f2GSTTeLee+/Nuv/u888/H5MnT86a99BDD426urq45JJLmiyntrY2q33L28cA4H9Nc9f0G2+8sUlt1RAaLs919tBDD42//vWv8eSTTzZ5bu7cuVFbW9vqMpasdwsLC2PjjTeOJEnada/+ttZrubm5MWLEiHjkkUfitddea7Kchn03cuTIeOutt2LChAktzjNw4MCIiKxatq6uLu64445m21hbWxu333575u/q6uq4/fbbo0+fPjF8+PCIaL6Wffnll+Ovf/1r1rK6du0aEW07fg3bfv3112dNv+666yIiYp999ml1GW2Vm5sbBx98cDzyyCNx3333RW1tbdY3xSKW/Zi3dM42t8+SJImf//znbW73nnvuGRHR5D3DjTfe2GRdI0eOjIceeqjZQP+LL75otb3wdeETtkCHaelrK43tt99+seuuu8Z5550XH374YWy22Wbx1FNPxR/+8Ic47bTTMoVZRMTw4cPj6aefjuuuuy769u0b/fv3j//7v/9rc3sGDhwYl156aZxzzjnx4YcfxogRI6Jbt24xffr0mDBhQhx//PFxxhlnLHUZ99xzT9xyyy1x4IEHxsCBA2P+/Pnxi1/8IsrKytodJB5//PFx++23x+jRo+P111+Pfv36xYMPPhiTJk2K66+/PvOJ41133TW++93vxg033BBTp06Nb33rW1FfXx8vvvhi7LrrrvGDH/wgBg0aFOedd15ccsklseOOO8ZBBx0URUVF8eqrr0bfvn3jiiuuiIiI4447Lr7//e/HyJEjY4899oi33nornnzyyRY/1VldXR3f/OY349BDD433338/brnllthhhx1i//33j4iI7bbbLnr27BmjRo2KU045JXJycuK+++5r9itcw4cPjwceeCB+/OMfxze+8Y0oLS1tMcy/+uqrY6+99optt902jj322Fi0aFHceOON0b179xgzZky79nNrttxyy8z+q6qqalLkLs8xHz58eNx6661x6aWXxqBBg2L11VeP3XbbLfbdd9+4+OKL4+ijj47tttsuJk+eHL/5zW9iwIABbW735ZdfHgcccEBsv/32cfTRR8ecOXPipptuik022SQrxN15553jhBNOiCuuuCLefPPN+H//7/9FQUFBTJ06NcaNGxc///nPM/eYbqm9AEDz9t1337jvvvuie/fusfHGG8df//rXePrpp6NXr15Z822++eaRl5cXV111VcybNy+Kiopit912i9VXX73N6zrzzDPj4Ycfjn333TdGjx4dw4cPjwULFsTkyZPjwQcfjA8//LDVb+r8v//3/2LNNdeM7bffPtZYY42YMmVK3HTTTbHPPvs0+U2J1rS1Xrv88svjqaeeip133jmOP/74GDJkSHz66acxbty4eOmll6JHjx5x5plnxoMPPhiHHHJIHHPMMTF8+PD48ssv4+GHH47bbrstNttssxg6dGhss802cc4552S+efa73/2uxaC6b9++cdVVV8WHH34YG2ywQTzwwAPx5ptvxh133JH5Ud199903xo8fHwceeGDss88+MX369Ljtttti4403zqqnunTpEhtvvHE88MADscEGG8Rqq60Wm2yySbP33d1ss81i1KhRcccdd2RuH/bKK6/EPffcEyNGjMj69lpHOOyww+LGG2+Miy66KIYNG5b1qd6IZT/mAwcOjB49esRtt90W3bp1i5KSkvi///u/2GijjWLgwIFxxhlnxIwZM6KsrCweeuihVu+529jw4cNj5MiRcf3118fs2bNjm222ieeffz7zCejGn5a98sor49lnn43/+7//i+9973ux8cYbx5dffhlvvPFGPP300/Hll18utb3N3csZVkkJwDK46667kohIXn311aXOt/766yf77LNP1rT58+cnP/rRj5K+ffsmBQUFyeDBg5Orr746qa+vz5rvvffeS3baaaekS5cuSUQko0aNSpIkSS666KIkIpIvvvii2TZNnz49a/pDDz2U7LDDDklJSUlSUlKSbLTRRsnJJ5+cvP/++5l5dt5552To0KFN2v/GG28kRxxxRLLeeuslRUVFyeqrr57su+++yWuvvdbaLmrWZ599lhx99NFJ7969k8LCwmTYsGHJXXfd1WS+2tra5Oqrr0422mijpLCwMOnTp0+y1157Ja+//nrWfHfeeWeyxRZbJEVFRUnPnj2TnXfeOfnTn/6Ueb6uri4566yzkt69eyddu3ZN9txzz2TatGnJ+uuvn9mfjffd888/nxx//PFJz549k9LS0uTII49MZs+enbXOSZMmJdtss03SpUuXpG/fvslPfvKT5Mknn0wiInn22Wcz81VUVCTf/va3kx49eiQRkay//vpJkiTJ9OnTk4host1PP/10sv322yddunRJysrKkv322y959913s+Zp77FvyXnnnZdERDJo0KAmzy3PMf/Pf/6T7LPPPkm3bt2SiEh23nnnJEmSpLKyMjn99NOTtdZaK+nSpUuy/fbbJ3/961+TnXfeOTNPkiTJs88+m0REMm7cuGaX/7vf/S7ZaKONkqKiomSTTTZJHn744WTkyJHJRhtt1GTeO+64Ixk+fHjSpUuXpFu3bsmwYcOSn/zkJ8nMmTNbbS8A/K9qrcadM2dOppYrLS1N9txzz+S9995rUlslSZL84he/SAYMGJDk5eVl1UnN1cdJkjSpC5Jkcd18zjnnJIMGDUoKCwuT3r17J9ttt11yzTXXJNXV1UmSfFVbXX311U2Wefvttyc77bRT0qtXr6SoqCgZOHBgcuaZZybz5s1r/85J2lavJUmSfPTRR8lRRx2V9OnTJykqKkoGDBiQnHzyyUlVVVVmntmzZyc/+MEPkrXXXjspLCxM1llnnWTUqFHJrFmzMvN88MEHye67754UFRUla6yxRnLuuecmf/rTn5rUnQ21/GuvvZZsu+22SXFxcbL++usnN910U1a76uvrk8svvzxZf/31k6KiomSLLbZIHn300WTUqFGZWrXBX/7yl2T48OFJYWFhEhHJRRddlCTJV/VoYzU1NcnYsWOT/v37JwUFBcm6666bnHPOOUllZWXWfO059i2pr69P1l133SQikksvvbTJ88tzzP/whz8kG2+8cZKfn59Vr7/77rvJ7rvvnpSWlia9e/dOvve97yVvvfVWk5p+1KhRSUlJSbPLXrBgQXLyyScnq622WlJaWpqMGDEief/995OISK688sqseT/77LPk5JNPTtZdd92koKAgWXPNNZNvfvObyR133NGm9sLXQU6StOHO1gB8rd19991x9NFHx6uvvhpbbbXVym4O7bD55ptHnz592nUfMQCAr5NddtklZs2a1ep9cUmXN998M7bYYov49a9/HUceeeTKbg6kinvYAsAqoKampslXAJ977rl46623Ypdddlk5jQIAgDZYtGhRk2nXX3995ObmZv2YMbCYe9gCwCpgxowZsfvuu8d3vvOd6Nu3b7z33ntx2223xZprrhnf//73V3bzAACgRT/96U/j9ddfj1133TXy8/Pj8ccfj8cffzyOP/74WHfddVd28yB1BLYAsAro2bNnDB8+PH75y1/GF198ESUlJbHPPvvElVde2eSHTgAAIE222267+NOf/hSXXHJJVFRUxHrrrRdjxoyJ8847b2U3DVLJPWwBAAAAAFLCPWwBAAAAAFJCYAsAAAAAkBICWwAAAACAlPCjYylXX18fM2fOjG7dukVOTs7Kbg4AwAqVJEnMnz8/+vbtG7m5PmuwqlLTAgD/69pT1wpsU27mzJmx7rrrruxmAACsVB9//HGss846K7sZLCM1LQDAYm2pawW2KdetW7eIWHwwy8rKVnJrAABWrPLy8lh33XUzNRGrJjUtAPC/rj11rcA25Rq+MlZWVqa4BQD+Z/ka/apNTQsAsFhb6lo3AgMAAAAASAmBLQAAAABASghsAQAAAABSQmALAAAAAJASAlsAAAAAgJQQ2AIAAAAApITAFgAAAAAgJQS2AAAAAAApIbAFAAAAAEgJgS0AAAAAQEoIbAEAAAAAUkJgCwAAAACQEgJbAAAAAICUENgCAAAAAKSEwBYAAAAAICUEtgAAAAAAKSGwBQAAAABICYEtAAAAAEBKCGwBAAAAAFLify6wHT16dIwYMWJlNwMAAJaLuhYA4OtppQe2//nPf+LUU0+NQYMGRXFxcayxxhqx/fbbx6233hoLFy5c2c1rk7vvvjt69OixspsBAMBKpK4FAKAj5K/Mlf/rX/+K7bffPnr06BGXX355DBs2LIqKimLy5Mlxxx13xNprrx37779/k9fV1NREQUHBSmjx19MncxbG/MramL+oJrp3LYjivNyoj4jK2vqoqqmJXiXFUVFdF5HURGnR4sfli2qie5eCKCnMi0W1lVFXXxDdCvMiiYiK6rqYX7n4+bKC3KiLnJi/xGuK66tidl1+9OxaGGuUFa/sXZBa8xZWx6yK6iivrImyLgXRu6QwunctXNnNIsUa+nNDfystzo91enZd5daRRg39sT5qojivMGss7Kh9MHPuoihfVBMVVbVRUpQfORGRkxNRUrR4+R2575tbVkFEfFlZGwuqaqJXSVFU1dVH+cLF409HrKvhOlOYlxuzF1RFSVFBFOfnRk19fXQtXLXPo9bG61Wt3zRub9l/r92RJLGwtn7xtOKC6FKYF7PmV0ZJUfq3Z0VQ16ZD4/GmW5fFY0xtUh/5ObkRURX5uV/VsmVdCqK0MC/qIonKmq/O7a6FebGgqjJT91ZU1kZpcX7k50UU5eXFgiXq2rmLKqMgb8X3g1W1TlxV282KtbzXzWW9Ln9WXhnzKqujICc3Kmvro6a2Jnp2Le6Uuq/BjDkLo7xRW7oV58faPbt2Sl9pWGZlTU2UFRc2eW9fXlkdxYXLt655C6vjywXVETkRlTX1Mf+/7V/yvX9H1EbN7aOIiFkV1VGX1ESX/LbV7G3Z15/MWRgVVbVRUZldp3ctyIuFNZXRtaDjzpPm2jO/qrZTaskla77SwryI+rrIzV98Hs6cuygW1tREUW7ecm9fw7oarquN9+G8RZWRn/fV+d9RvlpnTfQuLYrqusXnZK+ShsfZx7O0qGPXvzxWamB70kknRX5+frz22mtRUlKSmT5gwIA44IADIkmSiIjIycmJW265JR5//PH485//HGeeeWZccMEFcfzxx8czzzwT//nPf2K99daLk046KU499dTMcurq6uLMM8+MO++8M/Ly8uLYY4/NLLNBv3794rTTTovTTjstM23zzTePESNGxJgxYyIi4rrrrou77ror/vWvf8Vqq60W++23X/z0pz+N0tLSeO655+Loo4/OtDMi4qKLLooxY8ZEVVVVnHfeefHb3/425s6dG5tssklcddVVscsuu3TC3lw2H81eEOdOmByTps2OiIjepYXxu+O3iYse/kf8e/bCuPfYrePsCZOjprYufnrw5nF2o3kjInYY1CsuHTEsbnvxn3HAFuvGLc9OixcbPb/j4N5x0i4D49h7XouF1XVZr+mVtzB+9Pt34/IDh8V6vUqCbDPnLoqzHno7Xpw6KzNtp8G948qRm0bfHl1WYstIqyX7c8Ti/nbZgcNi/Q7qYytiHWnU0B+L8iLO33eTZsfC5d0HH81eEOdNmBwvNVru9oN6xdHb94/fvvxRXLjf0Ljy8Snx+DufLfd6WzqOY/YfGsff+1pctP/Q+NnTUztkG5tbV8N2HXXnq7Hlej3ign2HxuWPvRtn7TVklTyPWhuvV7V+s7Tz4zu/fDlmVVRnpl2w79A48pd/i43W7Jba7VlR1LUrX0vn7gX7Do1np34auw3pmzV+dy3Mi1+N2qpJ/dpQq4555B/x5/e+iIivauRzWqiFj7/3tVi9rGiF9YNVtU5cVdvNirW8183luS7fN2l6HLL1+nH+o+/EF+VVccdRW3VK3be0bf3mRn3iwv2GxvkT3+nQvtKwXz6ctSDzPn/J7bpkxCZx1K9eif69S5ZpXTPnLorLHns3TvnmBnHxo/9osvyG9/4dURsteZy7FubFnaO/ETc/My0i6uOSEZu26di1ZVxqrU6/YN+hcdOzU+OB12Ys8/a01J7z9xocuw9dO86b2DnvP5o7DpeOGBaP/f3j2GuzdeKWZ6fGibsMXu5+0JZ9eMpv34iyLgUd3r/+/u+5ccMRW8T1f56aebzke50l33eloaZdabdEmD17djz11FNx8sknZxW1jTUUihERY8aMiQMPPDAmT54cxxxzTNTX18c666wT48aNi3fffTcuvPDCOPfcc+P3v/995jXXXntt3H333XHnnXfGSy+9FF9++WVMmDCh3W3Nzc2NG264If7xj3/EPffcE88880z85Cc/iYiI7bbbLq6//vooKyuLTz/9ND799NM444wzIiLiBz/4Qfz1r3+N3/3ud/H222/HIYccEt/61rdi6tSp7W5DZ/hkzsImnfOqkZvGRQ8vHlhvPnLLOH/iOzFp2uy45pDNmwwQEREvTZsd50+cHCfvukHctESxGxHx4tRZcdOz0+KYHfo3eU1lbtd4adrsOHfC5PisvLJzN3YVM29hdZOLRkTEC1NnxdkPvR3zFlavpJaRVs3154jF/e28CZPjkznL/1XcFbGONGrcHy/ab5MWx8Ll2Qcz5y6Kc5coYCIiJk2bHXdNmh5D+naP8yZMjoOHr7vc613acRzz8D/i5iO3jLsmTe+QbWxpXQ3bdcwO/eOlabPjkkf/ESOHr7tKnketjderWr9p7fy4auSmWdMueXTxtLRuz4qirl35lnbuXvLoP2KPjfs2Gb+P2aF/s/VrQ606pG/3zLTGNXJz8978nS1XWD9YVevEVbXdrFjLe91c3uvyUdv3zwSNN39ny06p+xrMaKEtQ/p2j3MnTO7QvtJ4vzR+n9/YS9NmxwUT34mbj9xymdbVsI6DtlynSVjbsPxz/7vflrc2au44H7ND/7jxmanx4rRZcfmBm7bp2LVlXGpo79Lq9PMnTo7jdhq4zNuztO3ac5OmYe2yLr+xpR2H8ydOjn02WyfOnbB4u5Z3/W3dhzccsUVmuTOWs3813r5jduifeX/T+HFLbemI9XeElRbYTps2LZIkiQ033DBreu/evaO0tDRKS0vjrLPOykz/9re/HUcffXQMGDAg1ltvvSgoKIixY8fGVlttFf37948jjzwyjj766KzC9vrrr49zzjknDjrooBgyZEjcdttt0b1792iv0047LXbdddfo169f7LbbbnHppZdm1lNYWBjdu3ePnJycWHPNNWPNNdeM0tLS+Pe//x133XVXjBs3LnbccccYOHBgnHHG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gJQQ2AIAAAAApITAFgAAAAAgJQS2AAAAAAApIbAFAAAAAEgJgS0AAAAAQEoIbAEAAAAAUkJgCwAAAACQEgJbAAAAAICUENgCAAAAAKSEwBYAAAAAICUEtgAAAAAAKSGwBQAAAABICYEtAAAAAEBKCGwBAAAAAFJCYAsAAAAAkBICWwAAAACAlBDYAgAAAACkhMAWAAAAACAlBLYAAAAAACkhsAUAAAAASAmBLQAAAABASghsAQAAAABSQmALAAAAAJASAlsAAAAAgJQQ2AIAAAAApITAFgAAAAAgJQS2AAAAAAApIbAFAAAAAEgJgS0AAAAAQEoIbAEAAAAAUkJgCwAAAACQEgJbAAAAAICUENgCAAAAAKSEwBYAAAAAICUEtgAAAAAAKSGwBQAAAABICYEtAAAAAEBKCGwBAAAAAFJCYAsAAAAAkBICWwAAAACAlBDYAgAAAACkhMAWAAAAACAlBLYAAAAAACkhsAUAAAAASAmBLQAAAABASghsAQAAAABSQmALAAAAAJASAlsAAAAAgJQQ2AIAAAAApITAFgAAAAAgJQS2AAAAAAApIbAFAAAAAEgJgS0AAAAAQEoIbAEAAAAAUkJgCwAAAACQEgJbAAAAAICUENgCAAAAAKSEwBYAAAAAICUEtgAAAAAAKSGwBQAAAABICYEtAAAAAEBKCGwBAAAAAFJCYAsAAAAAkBICWwAAAACAlBDYAgAAAACkhMAWAAAAACAlBLYAAAAAACkhsAUAAAAASAmBLQAAAABASghsAQAAAABSQmALAAAAAJASAlsAAAAAgJQQ2AIAAAAApITAFgAAAAAgJQS2AAAAAAApIbAFAAAAAEgJgS0AAAAAQEoIbAEAAAAAUkJgCwAAAACQEgJbAAAAAICUENgCAAAAAKSEwBYAAAAAICUEtgAAAAAAKSGwBQAAAABICYEtAAAAAEBKCGwBAAAAAFJCYAsAAAAAkBICWwAAAACAlBDYAgAAAACkhMAWAAAAACAlBLYAAAAAACkhsAUAAAAASAmBLQAAAABASghsAQAAAABSQmALAAAAAJASAlsAAAAAgJQQ2AIAAAAApITAFgAAAAAgJQS2AAAAAAApIbAFAAAAAEgJgS0AAAAAQEoIbAEAAAAAUkJgCwAAAACQEgJbAAAAAICUENgCAAAAAKSEwBYAAAAAICUEtgAAAAAAKSGw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AAAAICUEtgAAAAAAKSGwBQAAAABICYEtAAAAAEBKCGwBAAAAAFJCYAsAAAAAkBICWwAAAACAlBDYAgAAAACkhMAWAAAAACAlBLYAAAAAACkhsAUAAAAASAmBLQAAAABASghsAQAAAABSQmALAAAAAJASAlsAAAAAgJQQ2AIAAAAApITAFgAAAAAgJQS2AAAAAAApIbAFAAAAAEgJgS0AAAAAQEoIbAEAAAAAUkJgCwAAAACQEgJbAAAAAICUENgCAAAAAKSEwBYAAAAAICUEtgAAAAAAKSGwBQAAAABICYEtAAAAAEBKCGwBAAAAAFJCYAsAAAAAkBICWwAAAACAlBDYAgAAAACkhMAWAAAAACAlBLYAAAAAACkhsAUAAAAASAmBLQAAAABASghsAQAAAABSQmALAAAAAJASAlsAAAAAgJQQ2AIAAAAApITAFgAAAAAgJQS2AAAAAAApIbAFAAAAAEgJgS0AAAAAQEoIbAEAAAAAUkJgCwAAAACQEgJbAAAAAICUENgCAAAAAKSEwBYAAAAAICUEtgAAAAAAKSGwBQAAAABICYEtAAAAAEBKCGwBAAAAAFJCYAsAAAAAkBICWwAAAACAlBDYAgAAAACkhMAWAAAAACAlBLYAAAAAACkhsAUAAAAASAmBLQAAAABASghsAQAAAABSQmALAAAAAJASAlsAAAAAgJQQ2AIAAAAApITAFgAAAAAgJQS2AAAAAAApIbAFAAAAAEgJgS0AAAAAQEoIbAEAAAAAUkJgCwAAAACQEgJbAAAAAICUENgCAAAAAKSEwBYAAAAAICUEtgAAAAAAKSGwBQAAAABICYEtAAAAAEBKCGwBAAAAAFJCYAsAAAAAkBICWwAAAACAlBDYAgAAAACkhMAWAAAAACAlBLYAAAAAACkhsAUAAAAASAmBLQAAAABASghsAQAAAABSQmALAAAAAJASAlsAAAAAgJQQ2AIAAAAApITAFgAAAAAgJQS2AAAAAAApIbAFAAAAAEgJgS0AAAAAQEoIbAEAAAAAUkJgCwAAAACQEgJbAAAAAICUENgCAAAAAKSEwBYAAAAAICUEtgAAAAAAKSGwBQAAAABICYEtAAAAAEBKCGwBAAAAAFJCYAsAAAAAkBICWwAAAACAlBDYAgAAAACkhMAWAAAAACAlBLYAAAAAACkhsAUAAAAASAmBLQAAAABA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yqtHfn6+ePHFF0Xjxo1FbGys7Hii+xbQ48ePi6VLl4rY2Fhx5coV8fXXXwsXFxcxcuRII+/Z4ymvHpmZmeK9994TJ06cEImJieLnn38WHTt2FC1atBC5ubnSNurL+NBJT08X1tbWYtWqVXrPr0vjo6JzqxAVn08KCwtFu3btxPPPPy9iY2PFTz/9JFxcXMSsWbOMsUtUi9TXXMtMK8dMq6++ZlrmWTnm2RLMsnLMsiVMKctywpbEihUrhJeXl1CpVKJr167i5MmTxu5SjQBg8GfdunVCCCGSk5NFjx49hKOjo1Cr1cLHx0fMmDFDpKenG7fj1WTo0KGiYcOGQqVSiUaNGomhQ4eKhIQEaX1OTo6YNGmSaNCggbC2thYvvfSSSElJMWKPq9++ffsEABEfHy9bXh/Gxi+//GLw8zFq1CghhBBarVaEh4cLNzc3oVarRZ8+ffTqdPfuXTF8+HBha2srNBqNGDNmjMjMzDTC3jy58uqRmJhY5vHkl19+EUIIERMTIwICAoS9vb2wtLQUvr6+4tNPP5WFvtqkvHpkZ2eL559/Xri4uAgLCwvRpEkTMX78eL0Jk/oyPnRWr14trKysRFpamt7z69L4qOjcKkTlzidJSUmiX79+wsrKSjg7O4vp06eLgoKCGt4bqo3qY65lppVjptVXXzMt86wc82wJZlk5ZtkSppRlFf/rEBEREREREREREREZGe9hS0RERERERERERGQiOGFLREREREREREREZCI4YUtERERERERERERkIjhhS0RERERERERERGQiOGFLREREREREREREZCI4YUtERERERERERERkIjhhS0RERERERERERGQiOGFLREREREREREREZCI4YUtEZEQ9e/bEtGnTjN2NOo91JiIiIqp63t7eWLZsmbG7UeexzkT1DydsiYgMGD16NBQKBSZMmKC3bvLkyVAoFBg9enSltxcVFQWFQoG0tLSq6yTpKavOO3fuxPz5843TKSIiIiIToMu3D/8kJCRU+Nz169fDwcGh+jtZz5VV5zNnzuCtt96q+Q4RkdFwwpaIqAyenp7YunUrcnJypGW5ubn45ptv4OXlZcSelS8/P9/YXTA5jo6OsLOzM3Y3iIiIiIyqb9++SElJkf00bdrU2N2SYZbV5+Li6tRJjwAAECtJREFUAmtra2N3g4hqECdsiYjK0LFjR3h6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bdq0QUREBD777DO9/ahMndetW4dOnTph4MCBCAwMhBACP/zwwxPft4yIiIiotvH398eSJUvwj3/8A+3atcPmzZuxYMECWZtnnnkGEyZMwNChQ+Hi4oKFCxdWatvW1tY4fPgwvLy8MHjwYPj6+mLcuHHIzc0tN1s7ODhg586d6N27N3x9ffHFF19gy5YtaNu2rcH2HTt2xLZt27B161a0a9cOs2fPxrx58zB69GipzapVq/DKK69g0qRJaN26NcaPH48HDx4AKP4+g4MHDyIrKwtBQUHo1KkTvvzySykbjh07FqNGjZImRps1a4ZevXrp9WP69OmIjo5Ghw4d8PHHH2PJkiXSX+hVVZ0VCgX27NmDBg0aoEePHggODkazZs3w7bfflv9mEFGtohC8IR8REZmAnj174qmnnsKyZcuM3RUiIiIiokfi7e2NadOmYdq0acbuChHVAbzCloiIiIiIiIiIiMhEcMKWiIiIiIiIiIiIyETwlghEREREREREREREJoJX2BIRERERERERERGZCE7YEhEREREREREREZkITtgSERERERERERERmQhO2BIRERERERERERGZCE7YEhEREREREREREZkITtgSERERERERERERmQhO2BIRERERERERERGZCE7YEhEREREREREREZkITtgSERERERERERERmYj/B1JcKc62bn6bAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 1400x1400 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(2, 2, figsize=(14, 14))\n",
    "sns.scatterplot(data=parents, x='Mothers qualification', y='Target', ax=axs[0,0])\n",
    "axs[0,0].set_title('Mothers\\' Qualification vs target')\n",
    "sns.scatterplot(data=parents, x='Fathers qualification', y='Target', ax=axs[0,1])\n",
    "axs[0,1].set_title('Fathers\\' Qualification vs target')\n",
    "sns.scatterplot(data=parents, x='Mothers occupation', y='Target', ax=axs[1,0])\n",
    "axs[1,0].set_title('Mothers\\' occupation vs target')\n",
    "sns.scatterplot(data=parents, x='Fathers occupation', y='Target', ax=axs[1,1])\n",
    "axs[1,1].set_title('Fathers\\' occupation vs target')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "7d2c7bb8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:44.163783Z",
     "iopub.status.busy": "2024-06-01T09:11:44.163384Z",
     "iopub.status.idle": "2024-06-01T09:11:44.736112Z",
     "shell.execute_reply": "2024-06-01T09:11:44.734908Z"
    },
    "papermill": {
     "duration": 0.590412,
     "end_time": "2024-06-01T09:11:44.738414",
     "exception": false,
     "start_time": "2024-06-01T09:11:44.148002",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Occupation_Qualification_Ratio', ylabel='Target'>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "parents['Parents_occupation_sum'] = parents['Mothers occupation'] + parents['Fathers occupation']\n",
    "parents['Parents_qualification_sum'] = parents['Mothers qualification'] + parents['Fathers qualification']\n",
    "\n",
    "# To avoid division by zero, replace 0 in the qualification sum with a small number or np.nan\n",
    "parents['Parents_qualification_sum'].replace(0, pd.NA, inplace=True)\n",
    "\n",
    "# New feature: Division of occupation sum by qualification sum\n",
    "parents['Occupation_Qualification_Ratio'] = parents['Parents_occupation_sum'] /parents['Parents_qualification_sum']\n",
    "\n",
    "sns.scatterplot(parents ,x =  'Occupation_Qualification_Ratio',y = 'Target')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4fd174f",
   "metadata": {
    "papermill": {
     "duration": 0.014385,
     "end_time": "2024-06-01T09:11:44.767851",
     "exception": false,
     "start_time": "2024-06-01T09:11:44.753466",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Accadmic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "57e95ad4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:44.798847Z",
     "iopub.status.busy": "2024-06-01T09:11:44.797999Z",
     "iopub.status.idle": "2024-06-01T09:11:44.806132Z",
     "shell.execute_reply": "2024-06-01T09:11:44.805318Z"
    },
    "papermill": {
     "duration": 0.026003,
     "end_time": "2024-06-01T09:11:44.808282",
     "exception": false,
     "start_time": "2024-06-01T09:11:44.782279",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "accad = df[[ 'Curricular units 1st sem (credited)',\n",
    "       'Curricular units 1st sem (enrolled)',\n",
    "       'Curricular units 1st sem (evaluations)',\n",
    "       'Curricular units 1st sem (approved)',\n",
    "       'Curricular units 1st sem (grade)',\n",
    "       'Curricular units 1st sem (without evaluations)',\n",
    "       'Curricular units 2nd sem (credited)',\n",
    "       'Curricular units 2nd sem (enrolled)',\n",
    "       'Curricular units 2nd sem (evaluations)',\n",
    "       'Curricular units 2nd sem (approved)',\n",
    "       'Curricular units 2nd sem (grade)',\n",
    "       'Curricular units 2nd sem (without evaluations)',\n",
    "        'Target',\n",
    "]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "7ac1aa16",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:44.839450Z",
     "iopub.status.busy": "2024-06-01T09:11:44.838765Z",
     "iopub.status.idle": "2024-06-01T09:11:44.855832Z",
     "shell.execute_reply": "2024-06-01T09:11:44.854734Z"
    },
    "papermill": {
     "duration": 0.035166,
     "end_time": "2024-06-01T09:11:44.858017",
     "exception": false,
     "start_time": "2024-06-01T09:11:44.822851",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Curricular units 1st sem (credited)</th>\n",
       "      <th>Curricular units 1st sem (enrolled)</th>\n",
       "      <th>Curricular units 1st sem (evaluations)</th>\n",
       "      <th>Curricular units 1st sem (approved)</th>\n",
       "      <th>Curricular units 1st sem (grade)</th>\n",
       "      <th>Curricular units 1st sem (without evaluations)</th>\n",
       "      <th>Curricular units 2nd sem (credited)</th>\n",
       "      <th>Curricular units 2nd sem (enrolled)</th>\n",
       "      <th>Curricular units 2nd sem (evaluations)</th>\n",
       "      <th>Curricular units 2nd sem (approved)</th>\n",
       "      <th>Curricular units 2nd sem (grade)</th>\n",
       "      <th>Curricular units 2nd sem (without evaluations)</th>\n",
       "      <th>Target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>14.500000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>12.428571</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>11.600000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>12.591250</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>11</td>\n",
       "      <td>7</td>\n",
       "      <td>12.820000</td>\n",
       "      <td>0</td>\n",
       "      <td>Enrolled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>12.933333</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>12.933333</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76513</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>6</td>\n",
       "      <td>10.666667</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>10.600000</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76514</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>22</td>\n",
       "      <td>4</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>6</td>\n",
       "      <td>13.875000</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76515</th>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>13</td>\n",
       "      <td>4</td>\n",
       "      <td>12.500000</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>11.400000</td>\n",
       "      <td>1</td>\n",
       "      <td>Enrolled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76516</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76517</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>12.833333</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>13.666667</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>76518 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Curricular units 1st sem (credited)  \\\n",
       "0                                        0   \n",
       "1                                        0   \n",
       "2                                        0   \n",
       "3                                        0   \n",
       "4                                        0   \n",
       "...                                    ...   \n",
       "76513                                    0   \n",
       "76514                                    0   \n",
       "76515                                    0   \n",
       "76516                                    0   \n",
       "76517                                    0   \n",
       "\n",
       "       Curricular units 1st sem (enrolled)  \\\n",
       "0                                        6   \n",
       "1                                        6   \n",
       "2                                        6   \n",
       "3                                        7   \n",
       "4                                        7   \n",
       "...                                    ...   \n",
       "76513                                    6   \n",
       "76514                                    6   \n",
       "76515                                    5   \n",
       "76516                                    6   \n",
       "76517                                    6   \n",
       "\n",
       "       Curricular units 1st sem (evaluations)  \\\n",
       "0                                           6   \n",
       "1                                           8   \n",
       "2                                           0   \n",
       "3                                           9   \n",
       "4                                          12   \n",
       "...                                       ...   \n",
       "76513                                       9   \n",
       "76514                                      22   \n",
       "76515                                      13   \n",
       "76516                                       0   \n",
       "76517                                       6   \n",
       "\n",
       "       Curricular units 1st sem (approved)  Curricular units 1st sem (grade)  \\\n",
       "0                                        6                         14.500000   \n",
       "1                                        4                         11.600000   \n",
       "2                                        0                          0.000000   \n",
       "3                                        7                         12.591250   \n",
       "4                                        6                         12.933333   \n",
       "...                                    ...                               ...   \n",
       "76513                                    6                         10.666667   \n",
       "76514                                    4                         13.000000   \n",
       "76515                                    4                         12.500000   \n",
       "76516                                    0                          0.000000   \n",
       "76517                                    6                         12.833333   \n",
       "\n",
       "       Curricular units 1st sem (without evaluations)  \\\n",
       "0                                                   0   \n",
       "1                                                   0   \n",
       "2                                                   0   \n",
       "3                                                   0   \n",
       "4                                                   0   \n",
       "...                                               ...   \n",
       "76513                                               0   \n",
       "76514                                               0   \n",
       "76515                                               2   \n",
       "76516                                               0   \n",
       "76517                                               0   \n",
       "\n",
       "       Curricular units 2nd sem (credited)  \\\n",
       "0                                        0   \n",
       "1                                        0   \n",
       "2                                        0   \n",
       "3                                        0   \n",
       "4                                        0   \n",
       "...                                    ...   \n",
       "76513                                    0   \n",
       "76514                                    0   \n",
       "76515                                    0   \n",
       "76516                                    0   \n",
       "76517                                    0   \n",
       "\n",
       "       Curricular units 2nd sem (enrolled)  \\\n",
       "0                                        6   \n",
       "1                                        6   \n",
       "2                                        6   \n",
       "3                                        8   \n",
       "4                                        7   \n",
       "...                                    ...   \n",
       "76513                                    6   \n",
       "76514                                    6   \n",
       "76515                                    5   \n",
       "76516                                    6   \n",
       "76517                                    6   \n",
       "\n",
       "       Curricular units 2nd sem (evaluations)  \\\n",
       "0                                           7   \n",
       "1                                           9   \n",
       "2                                           0   \n",
       "3                                          11   \n",
       "4                                          12   \n",
       "...                                       ...   \n",
       "76513                                       8   \n",
       "76514                                       9   \n",
       "76515                                       8   \n",
       "76516                                       0   \n",
       "76517                                       6   \n",
       "\n",
       "       Curricular units 2nd sem (approved)  Curricular units 2nd sem (grade)  \\\n",
       "0                                        6                         12.428571   \n",
       "1                                        0                          0.000000   \n",
       "2                                        0                          0.000000   \n",
       "3                                        7                         12.820000   \n",
       "4                                        6                         12.933333   \n",
       "...                                    ...                               ...   \n",
       "76513                                    5                         10.600000   \n",
       "76514                                    6                         13.875000   \n",
       "76515                                    5                         11.400000   \n",
       "76516                                    0                          0.000000   \n",
       "76517                                    6                         13.666667   \n",
       "\n",
       "       Curricular units 2nd sem (without evaluations)    Target  \n",
       "0                                                   0  Graduate  \n",
       "1                                                   0   Dropout  \n",
       "2                                                   0   Dropout  \n",
       "3                                                   0  Enrolled  \n",
       "4                                                   0  Graduate  \n",
       "...                                               ...       ...  \n",
       "76513                                               0  Graduate  \n",
       "76514                                               0  Graduate  \n",
       "76515                                               1  Enrolled  \n",
       "76516                                               0   Dropout  \n",
       "76517                                               0  Graduate  \n",
       "\n",
       "[76518 rows x 13 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "9d929409",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:44.890495Z",
     "iopub.status.busy": "2024-06-01T09:11:44.890096Z",
     "iopub.status.idle": "2024-06-01T09:11:44.901505Z",
     "shell.execute_reply": "2024-06-01T09:11:44.900391Z"
    },
    "papermill": {
     "duration": 0.030475,
     "end_time": "2024-06-01T09:11:44.903850",
     "exception": false,
     "start_time": "2024-06-01T09:11:44.873375",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "accad['Overall_GPA'] = (accad['Curricular units 1st sem (grade)'] + accad['Curricular units 2nd sem (grade)']) / 2\n",
    "accad['Total_Credits_Earned'] = accad['Curricular units 1st sem (credited)'] + accad['Curricular units 2nd sem (credited)']\n",
    "accad['Overall_Pass_Rate'] = (accad['Curricular units 1st sem (approved)'] + accad['Curricular units 2nd sem (approved)']) / (accad['Curricular units 1st sem (enrolled)'] + accad['Curricular units 2nd sem (enrolled)'])\n",
    "\n",
    "accad['Perf ind'] = accad['Overall_GPA']/accad['Overall_Pass_Rate']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d1d3a908",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:44.986599Z",
     "iopub.status.busy": "2024-06-01T09:11:44.986206Z",
     "iopub.status.idle": "2024-06-01T09:11:45.006483Z",
     "shell.execute_reply": "2024-06-01T09:11:45.005600Z"
    },
    "papermill": {
     "duration": 0.089585,
     "end_time": "2024-06-01T09:11:45.008602",
     "exception": false,
     "start_time": "2024-06-01T09:11:44.919017",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Curricular units 1st sem (credited)</th>\n",
       "      <th>Curricular units 1st sem (enrolled)</th>\n",
       "      <th>Curricular units 1st sem (evaluations)</th>\n",
       "      <th>Curricular units 1st sem (approved)</th>\n",
       "      <th>Curricular units 1st sem (grade)</th>\n",
       "      <th>Curricular units 1st sem (without evaluations)</th>\n",
       "      <th>Curricular units 2nd sem (credited)</th>\n",
       "      <th>Curricular units 2nd sem (enrolled)</th>\n",
       "      <th>Curricular units 2nd sem (evaluations)</th>\n",
       "      <th>Curricular units 2nd sem (approved)</th>\n",
       "      <th>Curricular units 2nd sem (grade)</th>\n",
       "      <th>Curricular units 2nd sem (without evaluations)</th>\n",
       "      <th>Target</th>\n",
       "      <th>Overall_GPA</th>\n",
       "      <th>Total_Credits_Earned</th>\n",
       "      <th>Overall_Pass_Rate</th>\n",
       "      <th>Perf ind</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>14.500000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>12.428571</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>13.464286</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>13.464286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>11.600000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>Dropout</td>\n",
       "      <td>5.800000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>17.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>Dropout</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>12.591250</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>11</td>\n",
       "      <td>7</td>\n",
       "      <td>12.820000</td>\n",
       "      <td>0</td>\n",
       "      <td>Enrolled</td>\n",
       "      <td>12.705625</td>\n",
       "      <td>0</td>\n",
       "      <td>0.933333</td>\n",
       "      <td>13.613170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>12.933333</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>12.933333</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>12.933333</td>\n",
       "      <td>0</td>\n",
       "      <td>0.857143</td>\n",
       "      <td>15.088889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76513</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>6</td>\n",
       "      <td>10.666667</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>10.600000</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>10.633333</td>\n",
       "      <td>0</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>11.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76514</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>22</td>\n",
       "      <td>4</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>6</td>\n",
       "      <td>13.875000</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>13.437500</td>\n",
       "      <td>0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>16.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76515</th>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>13</td>\n",
       "      <td>4</td>\n",
       "      <td>12.500000</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>11.400000</td>\n",
       "      <td>1</td>\n",
       "      <td>Enrolled</td>\n",
       "      <td>11.950000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.900000</td>\n",
       "      <td>13.277778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76516</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>Dropout</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76517</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>12.833333</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>13.666667</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>13.250000</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>13.250000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>76518 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Curricular units 1st sem (credited)  \\\n",
       "0                                        0   \n",
       "1                                        0   \n",
       "2                                        0   \n",
       "3                                        0   \n",
       "4                                        0   \n",
       "...                                    ...   \n",
       "76513                                    0   \n",
       "76514                                    0   \n",
       "76515                                    0   \n",
       "76516                                    0   \n",
       "76517                                    0   \n",
       "\n",
       "       Curricular units 1st sem (enrolled)  \\\n",
       "0                                        6   \n",
       "1                                        6   \n",
       "2                                        6   \n",
       "3                                        7   \n",
       "4                                        7   \n",
       "...                                    ...   \n",
       "76513                                    6   \n",
       "76514                                    6   \n",
       "76515                                    5   \n",
       "76516                                    6   \n",
       "76517                                    6   \n",
       "\n",
       "       Curricular units 1st sem (evaluations)  \\\n",
       "0                                           6   \n",
       "1                                           8   \n",
       "2                                           0   \n",
       "3                                           9   \n",
       "4                                          12   \n",
       "...                                       ...   \n",
       "76513                                       9   \n",
       "76514                                      22   \n",
       "76515                                      13   \n",
       "76516                                       0   \n",
       "76517                                       6   \n",
       "\n",
       "       Curricular units 1st sem (approved)  Curricular units 1st sem (grade)  \\\n",
       "0                                        6                         14.500000   \n",
       "1                                        4                         11.600000   \n",
       "2                                        0                          0.000000   \n",
       "3                                        7                         12.591250   \n",
       "4                                        6                         12.933333   \n",
       "...                                    ...                               ...   \n",
       "76513                                    6                         10.666667   \n",
       "76514                                    4                         13.000000   \n",
       "76515                                    4                         12.500000   \n",
       "76516                                    0                          0.000000   \n",
       "76517                                    6                         12.833333   \n",
       "\n",
       "       Curricular units 1st sem (without evaluations)  \\\n",
       "0                                                   0   \n",
       "1                                                   0   \n",
       "2                                                   0   \n",
       "3                                                   0   \n",
       "4                                                   0   \n",
       "...                                               ...   \n",
       "76513                                               0   \n",
       "76514                                               0   \n",
       "76515                                               2   \n",
       "76516                                               0   \n",
       "76517                                               0   \n",
       "\n",
       "       Curricular units 2nd sem (credited)  \\\n",
       "0                                        0   \n",
       "1                                        0   \n",
       "2                                        0   \n",
       "3                                        0   \n",
       "4                                        0   \n",
       "...                                    ...   \n",
       "76513                                    0   \n",
       "76514                                    0   \n",
       "76515                                    0   \n",
       "76516                                    0   \n",
       "76517                                    0   \n",
       "\n",
       "       Curricular units 2nd sem (enrolled)  \\\n",
       "0                                        6   \n",
       "1                                        6   \n",
       "2                                        6   \n",
       "3                                        8   \n",
       "4                                        7   \n",
       "...                                    ...   \n",
       "76513                                    6   \n",
       "76514                                    6   \n",
       "76515                                    5   \n",
       "76516                                    6   \n",
       "76517                                    6   \n",
       "\n",
       "       Curricular units 2nd sem (evaluations)  \\\n",
       "0                                           7   \n",
       "1                                           9   \n",
       "2                                           0   \n",
       "3                                          11   \n",
       "4                                          12   \n",
       "...                                       ...   \n",
       "76513                                       8   \n",
       "76514                                       9   \n",
       "76515                                       8   \n",
       "76516                                       0   \n",
       "76517                                       6   \n",
       "\n",
       "       Curricular units 2nd sem (approved)  Curricular units 2nd sem (grade)  \\\n",
       "0                                        6                         12.428571   \n",
       "1                                        0                          0.000000   \n",
       "2                                        0                          0.000000   \n",
       "3                                        7                         12.820000   \n",
       "4                                        6                         12.933333   \n",
       "...                                    ...                               ...   \n",
       "76513                                    5                         10.600000   \n",
       "76514                                    6                         13.875000   \n",
       "76515                                    5                         11.400000   \n",
       "76516                                    0                          0.000000   \n",
       "76517                                    6                         13.666667   \n",
       "\n",
       "       Curricular units 2nd sem (without evaluations)    Target  Overall_GPA  \\\n",
       "0                                                   0  Graduate    13.464286   \n",
       "1                                                   0   Dropout     5.800000   \n",
       "2                                                   0   Dropout     0.000000   \n",
       "3                                                   0  Enrolled    12.705625   \n",
       "4                                                   0  Graduate    12.933333   \n",
       "...                                               ...       ...          ...   \n",
       "76513                                               0  Graduate    10.633333   \n",
       "76514                                               0  Graduate    13.437500   \n",
       "76515                                               1  Enrolled    11.950000   \n",
       "76516                                               0   Dropout     0.000000   \n",
       "76517                                               0  Graduate    13.250000   \n",
       "\n",
       "       Total_Credits_Earned  Overall_Pass_Rate   Perf ind  \n",
       "0                         0           1.000000  13.464286  \n",
       "1                         0           0.333333  17.400000  \n",
       "2                         0           0.000000        NaN  \n",
       "3                         0           0.933333  13.613170  \n",
       "4                         0           0.857143  15.088889  \n",
       "...                     ...                ...        ...  \n",
       "76513                     0           0.916667  11.600000  \n",
       "76514                     0           0.833333  16.125000  \n",
       "76515                     0           0.900000  13.277778  \n",
       "76516                     0           0.000000        NaN  \n",
       "76517                     0           1.000000  13.250000  \n",
       "\n",
       "[76518 rows x 17 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "1cd57f27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:45.041917Z",
     "iopub.status.busy": "2024-06-01T09:11:45.041037Z",
     "iopub.status.idle": "2024-06-01T09:11:45.550696Z",
     "shell.execute_reply": "2024-06-01T09:11:45.549588Z"
    },
    "papermill": {
     "duration": 0.529494,
     "end_time": "2024-06-01T09:11:45.553760",
     "exception": false,
     "start_time": "2024-06-01T09:11:45.024266",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Perf ind', ylabel='Target'>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(accad ,x =  'Perf ind',y = 'Target')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15c12d36",
   "metadata": {
    "papermill": {
     "duration": 0.022235,
     "end_time": "2024-06-01T09:11:45.595270",
     "exception": false,
     "start_time": "2024-06-01T09:11:45.573035",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# final df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "f1e26463",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:45.636775Z",
     "iopub.status.busy": "2024-06-01T09:11:45.636378Z",
     "iopub.status.idle": "2024-06-01T09:11:45.703602Z",
     "shell.execute_reply": "2024-06-01T09:11:45.702605Z"
    },
    "papermill": {
     "duration": 0.089456,
     "end_time": "2024-06-01T09:11:45.706023",
     "exception": false,
     "start_time": "2024-06-01T09:11:45.616567",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Marital status</th>\n",
       "      <th>Course</th>\n",
       "      <th>Daytime/evening attendance</th>\n",
       "      <th>Displaced</th>\n",
       "      <th>Educational special needs</th>\n",
       "      <th>Debtor</th>\n",
       "      <th>Tuition fees up to date</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Scholarship holder</th>\n",
       "      <th>Age at enrollment</th>\n",
       "      <th>Inflation rate</th>\n",
       "      <th>GDP</th>\n",
       "      <th>Target</th>\n",
       "      <th>Occupation_Qualification_Ratio</th>\n",
       "      <th>Perf ind</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9238</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.02</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>13.464286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9238</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.02</td>\n",
       "      <td>Dropout</td>\n",
       "      <td>0.473684</td>\n",
       "      <td>17.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>9254</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.92</td>\n",
       "      <td>Dropout</td>\n",
       "      <td>0.227273</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>9500</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.02</td>\n",
       "      <td>Enrolled</td>\n",
       "      <td>0.227273</td>\n",
       "      <td>13.613170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>9500</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0.32</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>0.232143</td>\n",
       "      <td>15.088889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76513</th>\n",
       "      <td>76513</td>\n",
       "      <td>1</td>\n",
       "      <td>9254</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>0.79</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>0.600000</td>\n",
       "      <td>11.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76514</th>\n",
       "      <td>76514</td>\n",
       "      <td>1</td>\n",
       "      <td>9254</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>-0.8</td>\n",
       "      <td>-3.12</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>16.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76515</th>\n",
       "      <td>76515</td>\n",
       "      <td>5</td>\n",
       "      <td>9085</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>-0.8</td>\n",
       "      <td>-3.12</td>\n",
       "      <td>Enrolled</td>\n",
       "      <td>0.256757</td>\n",
       "      <td>13.277778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76516</th>\n",
       "      <td>76516</td>\n",
       "      <td>1</td>\n",
       "      <td>9070</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0.32</td>\n",
       "      <td>Dropout</td>\n",
       "      <td>0.186667</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76517</th>\n",
       "      <td>76517</td>\n",
       "      <td>1</td>\n",
       "      <td>9773</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>2.8</td>\n",
       "      <td>-4.06</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>0.342105</td>\n",
       "      <td>13.250000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>76518 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id  Marital status  Course  Daytime/evening attendance  Displaced  \\\n",
       "0          0               1    9238                           1          0   \n",
       "1          1               1    9238                           1          1   \n",
       "2          2               1    9254                           1          0   \n",
       "3          3               1    9500                           1          1   \n",
       "4          4               1    9500                           1          1   \n",
       "...      ...             ...     ...                         ...        ...   \n",
       "76513  76513               1    9254                           1          1   \n",
       "76514  76514               1    9254                           1          1   \n",
       "76515  76515               5    9085                           1          1   \n",
       "76516  76516               1    9070                           1          1   \n",
       "76517  76517               1    9773                           1          1   \n",
       "\n",
       "       Educational special needs  Debtor  Tuition fees up to date  Gender  \\\n",
       "0                              0       0                        1       0   \n",
       "1                              0       0                        1       0   \n",
       "2                              0       0                        1       1   \n",
       "3                              0       0                        1       0   \n",
       "4                              0       0                        1       0   \n",
       "...                          ...     ...                      ...     ...   \n",
       "76513                          0       0                        1       0   \n",
       "76514                          0       0                        1       0   \n",
       "76515                          0       0                        1       0   \n",
       "76516                          0       0                        1       0   \n",
       "76517                          0       0                        1       0   \n",
       "\n",
       "       Scholarship holder  Age at enrollment  Inflation rate   GDP    Target  \\\n",
       "0                       1                 18             0.6  2.02  Graduate   \n",
       "1                       0                 18             0.6  2.02   Dropout   \n",
       "2                       0                 18             0.3 -0.92   Dropout   \n",
       "3                       1                 18             0.6  2.02  Enrolled   \n",
       "4                       0                 18             2.6  0.32  Graduate   \n",
       "...                   ...                ...             ...   ...       ...   \n",
       "76513                   1                 18            -0.3  0.79  Graduate   \n",
       "76514                   0                 19            -0.8 -3.12  Graduate   \n",
       "76515                   0                 19            -0.8 -3.12  Enrolled   \n",
       "76516                   0                 18             2.6  0.32   Dropout   \n",
       "76517                   0                 19             2.8 -4.06  Graduate   \n",
       "\n",
       "       Occupation_Qualification_Ratio   Perf ind  \n",
       "0                            0.500000  13.464286  \n",
       "1                            0.473684  17.400000  \n",
       "2                            0.227273        NaN  \n",
       "3                            0.227273  13.613170  \n",
       "4                            0.232143  15.088889  \n",
       "...                               ...        ...  \n",
       "76513                        0.600000  11.600000  \n",
       "76514                        0.333333  16.125000  \n",
       "76515                        0.256757  13.277778  \n",
       "76516                        0.186667        NaN  \n",
       "76517                        0.342105  13.250000  \n",
       "\n",
       "[76518 rows x 16 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df = df.copy()\n",
    "\n",
    "\n",
    "\n",
    "# parenting\n",
    "final_df['Parents_occupation_sum'] = final_df['Mothers occupation'] + final_df['Fathers occupation']\n",
    "final_df['Parents_qualification_sum'] = final_df['Mothers qualification'] + final_df['Fathers qualification']\n",
    "\n",
    "final_df['Parents_qualification_sum'].replace(0, pd.NA, inplace=True)\n",
    "\n",
    "final_df['Occupation_Qualification_Ratio'] = final_df['Parents_occupation_sum'] /final_df['Parents_qualification_sum']\n",
    "\n",
    "final_df = final_df.drop(columns = [\n",
    "    'Parents_occupation_sum',\n",
    "    'Mothers occupation',\n",
    "    'Fathers occupation',\n",
    "    'Parents_qualification_sum',\n",
    "    'Mothers qualification',\n",
    "    'Fathers qualification'\n",
    "])\n",
    "\n",
    "\n",
    "# accadmics\n",
    "\n",
    "final_df['Overall_GPA'] = (final_df['Curricular units 1st sem (grade)'] + final_df['Curricular units 2nd sem (grade)']) / 2\n",
    "final_df['Total_Credits_Earned'] = final_df['Curricular units 1st sem (credited)'] + final_df['Curricular units 2nd sem (credited)']\n",
    "final_df['Overall_Pass_Rate'] = (final_df['Curricular units 1st sem (approved)'] + final_df['Curricular units 2nd sem (approved)']) / (final_df['Curricular units 1st sem (enrolled)'] + final_df['Curricular units 2nd sem (enrolled)'])\n",
    "final_df['Perf ind'] = final_df['Overall_GPA']/final_df['Overall_Pass_Rate']\n",
    "\n",
    "final_df = final_df.drop(columns = [\n",
    "       'Curricular units 1st sem (credited)',\n",
    "       'Curricular units 1st sem (enrolled)',\n",
    "       'Curricular units 1st sem (evaluations)',\n",
    "       'Curricular units 1st sem (approved)',\n",
    "       'Curricular units 1st sem (grade)',\n",
    "       'Curricular units 1st sem (without evaluations)',\n",
    "       'Curricular units 2nd sem (credited)',\n",
    "       'Curricular units 2nd sem (enrolled)',\n",
    "       'Curricular units 2nd sem (evaluations)',\n",
    "       'Curricular units 2nd sem (approved)',\n",
    "       'Curricular units 2nd sem (grade)',\n",
    "       'Curricular units 2nd sem (without evaluations)',\n",
    "        'Overall_GPA',\n",
    "        'Total_Credits_Earned',\n",
    "        'Overall_Pass_Rate',\n",
    "])\n",
    "\n",
    "\n",
    "# drop irrelevent columns\n",
    "final_df = final_df.drop(columns = [\n",
    "     'Application mode', \n",
    "    'Application order',\n",
    "    'Previous qualification',\n",
    "    'Previous qualification (grade)', \n",
    "    'Nacionality', 'Admission grade',\n",
    "    'International', \n",
    "    'Unemployment rate',\n",
    "])\n",
    "final_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "605033c2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:45.741820Z",
     "iopub.status.busy": "2024-06-01T09:11:45.741128Z",
     "iopub.status.idle": "2024-06-01T09:11:45.747865Z",
     "shell.execute_reply": "2024-06-01T09:11:45.746931Z"
    },
    "papermill": {
     "duration": 0.026611,
     "end_time": "2024-06-01T09:11:45.749942",
     "exception": false,
     "start_time": "2024-06-01T09:11:45.723331",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['id', 'Marital status', 'Course', 'Daytime/evening attendance',\n",
       "       'Displaced', 'Educational special needs', 'Debtor',\n",
       "       'Tuition fees up to date', 'Gender', 'Scholarship holder',\n",
       "       'Age at enrollment', 'Inflation rate', 'GDP', 'Target',\n",
       "       'Occupation_Qualification_Ratio', 'Perf ind'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "17c7ec69",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:45.786477Z",
     "iopub.status.busy": "2024-06-01T09:11:45.785485Z",
     "iopub.status.idle": "2024-06-01T09:11:45.791659Z",
     "shell.execute_reply": "2024-06-01T09:11:45.790797Z"
    },
    "papermill": {
     "duration": 0.026938,
     "end_time": "2024-06-01T09:11:45.793738",
     "exception": false,
     "start_time": "2024-06-01T09:11:45.766800",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "final_df['Perf ind'].fillna(0, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "9266e247",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:45.829761Z",
     "iopub.status.busy": "2024-06-01T09:11:45.829368Z",
     "iopub.status.idle": "2024-06-01T09:11:45.843833Z",
     "shell.execute_reply": "2024-06-01T09:11:45.842756Z"
    },
    "papermill": {
     "duration": 0.03511,
     "end_time": "2024-06-01T09:11:45.846060",
     "exception": false,
     "start_time": "2024-06-01T09:11:45.810950",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                                0\n",
       "Marital status                    0\n",
       "Course                            0\n",
       "Daytime/evening attendance        0\n",
       "Displaced                         0\n",
       "Educational special needs         0\n",
       "Debtor                            0\n",
       "Tuition fees up to date           0\n",
       "Gender                            0\n",
       "Scholarship holder                0\n",
       "Age at enrollment                 0\n",
       "Inflation rate                    0\n",
       "GDP                               0\n",
       "Target                            0\n",
       "Occupation_Qualification_Ratio    0\n",
       "Perf ind                          0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "5066a487",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:45.892030Z",
     "iopub.status.busy": "2024-06-01T09:11:45.890979Z",
     "iopub.status.idle": "2024-06-01T09:11:45.911688Z",
     "shell.execute_reply": "2024-06-01T09:11:45.910590Z"
    },
    "papermill": {
     "duration": 0.047858,
     "end_time": "2024-06-01T09:11:45.914633",
     "exception": false,
     "start_time": "2024-06-01T09:11:45.866775",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "final_df.replace([np.inf, -np.inf], 0, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7cedc11d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:45.952314Z",
     "iopub.status.busy": "2024-06-01T09:11:45.951796Z",
     "iopub.status.idle": "2024-06-01T09:11:45.970778Z",
     "shell.execute_reply": "2024-06-01T09:11:45.969766Z"
    },
    "papermill": {
     "duration": 0.040755,
     "end_time": "2024-06-01T09:11:45.972896",
     "exception": false,
     "start_time": "2024-06-01T09:11:45.932141",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Marital status</th>\n",
       "      <th>Course</th>\n",
       "      <th>Daytime/evening attendance</th>\n",
       "      <th>Displaced</th>\n",
       "      <th>Educational special needs</th>\n",
       "      <th>Debtor</th>\n",
       "      <th>Tuition fees up to date</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Scholarship holder</th>\n",
       "      <th>Age at enrollment</th>\n",
       "      <th>Inflation rate</th>\n",
       "      <th>GDP</th>\n",
       "      <th>Target</th>\n",
       "      <th>Occupation_Qualification_Ratio</th>\n",
       "      <th>Perf ind</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9238</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.02</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>13.464286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9238</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.02</td>\n",
       "      <td>Dropout</td>\n",
       "      <td>0.473684</td>\n",
       "      <td>17.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>9254</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.92</td>\n",
       "      <td>Dropout</td>\n",
       "      <td>0.227273</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>9500</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.02</td>\n",
       "      <td>Enrolled</td>\n",
       "      <td>0.227273</td>\n",
       "      <td>13.613170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>9500</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0.32</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>0.232143</td>\n",
       "      <td>15.088889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76513</th>\n",
       "      <td>76513</td>\n",
       "      <td>1</td>\n",
       "      <td>9254</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>-0.3</td>\n",
       "      <td>0.79</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>0.600000</td>\n",
       "      <td>11.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76514</th>\n",
       "      <td>76514</td>\n",
       "      <td>1</td>\n",
       "      <td>9254</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>-0.8</td>\n",
       "      <td>-3.12</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>16.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76515</th>\n",
       "      <td>76515</td>\n",
       "      <td>5</td>\n",
       "      <td>9085</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>-0.8</td>\n",
       "      <td>-3.12</td>\n",
       "      <td>Enrolled</td>\n",
       "      <td>0.256757</td>\n",
       "      <td>13.277778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76516</th>\n",
       "      <td>76516</td>\n",
       "      <td>1</td>\n",
       "      <td>9070</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0.32</td>\n",
       "      <td>Dropout</td>\n",
       "      <td>0.186667</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76517</th>\n",
       "      <td>76517</td>\n",
       "      <td>1</td>\n",
       "      <td>9773</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>2.8</td>\n",
       "      <td>-4.06</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>0.342105</td>\n",
       "      <td>13.250000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>76518 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id  Marital status  Course  Daytime/evening attendance  Displaced  \\\n",
       "0          0               1    9238                           1          0   \n",
       "1          1               1    9238                           1          1   \n",
       "2          2               1    9254                           1          0   \n",
       "3          3               1    9500                           1          1   \n",
       "4          4               1    9500                           1          1   \n",
       "...      ...             ...     ...                         ...        ...   \n",
       "76513  76513               1    9254                           1          1   \n",
       "76514  76514               1    9254                           1          1   \n",
       "76515  76515               5    9085                           1          1   \n",
       "76516  76516               1    9070                           1          1   \n",
       "76517  76517               1    9773                           1          1   \n",
       "\n",
       "       Educational special needs  Debtor  Tuition fees up to date  Gender  \\\n",
       "0                              0       0                        1       0   \n",
       "1                              0       0                        1       0   \n",
       "2                              0       0                        1       1   \n",
       "3                              0       0                        1       0   \n",
       "4                              0       0                        1       0   \n",
       "...                          ...     ...                      ...     ...   \n",
       "76513                          0       0                        1       0   \n",
       "76514                          0       0                        1       0   \n",
       "76515                          0       0                        1       0   \n",
       "76516                          0       0                        1       0   \n",
       "76517                          0       0                        1       0   \n",
       "\n",
       "       Scholarship holder  Age at enrollment  Inflation rate   GDP    Target  \\\n",
       "0                       1                 18             0.6  2.02  Graduate   \n",
       "1                       0                 18             0.6  2.02   Dropout   \n",
       "2                       0                 18             0.3 -0.92   Dropout   \n",
       "3                       1                 18             0.6  2.02  Enrolled   \n",
       "4                       0                 18             2.6  0.32  Graduate   \n",
       "...                   ...                ...             ...   ...       ...   \n",
       "76513                   1                 18            -0.3  0.79  Graduate   \n",
       "76514                   0                 19            -0.8 -3.12  Graduate   \n",
       "76515                   0                 19            -0.8 -3.12  Enrolled   \n",
       "76516                   0                 18             2.6  0.32   Dropout   \n",
       "76517                   0                 19             2.8 -4.06  Graduate   \n",
       "\n",
       "       Occupation_Qualification_Ratio   Perf ind  \n",
       "0                            0.500000  13.464286  \n",
       "1                            0.473684  17.400000  \n",
       "2                            0.227273   0.000000  \n",
       "3                            0.227273  13.613170  \n",
       "4                            0.232143  15.088889  \n",
       "...                               ...        ...  \n",
       "76513                        0.600000  11.600000  \n",
       "76514                        0.333333  16.125000  \n",
       "76515                        0.256757  13.277778  \n",
       "76516                        0.186667   0.000000  \n",
       "76517                        0.342105  13.250000  \n",
       "\n",
       "[76518 rows x 16 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "95113bac",
   "metadata": {
    "papermill": {
     "duration": 0.017088,
     "end_time": "2024-06-01T09:11:46.007430",
     "exception": false,
     "start_time": "2024-06-01T09:11:45.990342",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Model training"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "dc701378",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:46.043957Z",
     "iopub.status.busy": "2024-06-01T09:11:46.043304Z",
     "iopub.status.idle": "2024-06-01T09:11:46.064617Z",
     "shell.execute_reply": "2024-06-01T09:11:46.063628Z"
    },
    "papermill": {
     "duration": 0.04237,
     "end_time": "2024-06-01T09:11:46.067046",
     "exception": false,
     "start_time": "2024-06-01T09:11:46.024676",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "x = final_df.drop('Target', axis=1)  \n",
    "y = final_df['Target']  \n",
    "\n",
    "x_train, x_test, y_train, y_test = train_test_split(\n",
    "    x,\n",
    "    y,\n",
    "    test_size=0.2, \n",
    "    random_state=2 \n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "0702c958",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:46.103882Z",
     "iopub.status.busy": "2024-06-01T09:11:46.103499Z",
     "iopub.status.idle": "2024-06-01T09:11:46.113340Z",
     "shell.execute_reply": "2024-06-01T09:11:46.112353Z"
    },
    "papermill": {
     "duration": 0.030683,
     "end_time": "2024-06-01T09:11:46.115408",
     "exception": false,
     "start_time": "2024-06-01T09:11:46.084725",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                                0\n",
       "Marital status                    0\n",
       "Course                            0\n",
       "Daytime/evening attendance        0\n",
       "Displaced                         0\n",
       "Educational special needs         0\n",
       "Debtor                            0\n",
       "Tuition fees up to date           0\n",
       "Gender                            0\n",
       "Scholarship holder                0\n",
       "Age at enrollment                 0\n",
       "Inflation rate                    0\n",
       "GDP                               0\n",
       "Occupation_Qualification_Ratio    0\n",
       "Perf ind                          0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "281fbcd0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:46.152297Z",
     "iopub.status.busy": "2024-06-01T09:11:46.151399Z",
     "iopub.status.idle": "2024-06-01T09:11:46.156311Z",
     "shell.execute_reply": "2024-06-01T09:11:46.155077Z"
    },
    "papermill": {
     "duration": 0.025759,
     "end_time": "2024-06-01T09:11:46.158565",
     "exception": false,
     "start_time": "2024-06-01T09:11:46.132806",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tree = DecisionTreeClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "f6fd51ce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:46.195565Z",
     "iopub.status.busy": "2024-06-01T09:11:46.194512Z",
     "iopub.status.idle": "2024-06-01T09:11:46.215876Z",
     "shell.execute_reply": "2024-06-01T09:11:46.214752Z"
    },
    "papermill": {
     "duration": 0.042176,
     "end_time": "2024-06-01T09:11:46.218156",
     "exception": false,
     "start_time": "2024-06-01T09:11:46.175980",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "label_encoder = LabelEncoder()\n",
    "\n",
    "y_train_encoded = label_encoder.fit_transform(y_train)\n",
    "y_test_encoded = label_encoder.transform(y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "58d426d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:46.255050Z",
     "iopub.status.busy": "2024-06-01T09:11:46.254681Z",
     "iopub.status.idle": "2024-06-01T09:11:46.259328Z",
     "shell.execute_reply": "2024-06-01T09:11:46.258335Z"
    },
    "papermill": {
     "duration": 0.025828,
     "end_time": "2024-06-01T09:11:46.261640",
     "exception": false,
     "start_time": "2024-06-01T09:11:46.235812",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tree.fittree = DecisionTreeClassifier(random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "46e8b2d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:46.301616Z",
     "iopub.status.busy": "2024-06-01T09:11:46.300646Z",
     "iopub.status.idle": "2024-06-01T09:11:46.904471Z",
     "shell.execute_reply": "2024-06-01T09:11:46.903463Z"
    },
    "papermill": {
     "duration": 0.627199,
     "end_time": "2024-06-01T09:11:46.906788",
     "exception": false,
     "start_time": "2024-06-01T09:11:46.279589",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "DecisionTreeClassifier()"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tree.fit(x_train, y_train_encoded)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "a51223ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:46.944497Z",
     "iopub.status.busy": "2024-06-01T09:11:46.943842Z",
     "iopub.status.idle": "2024-06-01T09:11:46.957491Z",
     "shell.execute_reply": "2024-06-01T09:11:46.956435Z"
    },
    "papermill": {
     "duration": 0.035118,
     "end_time": "2024-06-01T09:11:46.959826",
     "exception": false,
     "start_time": "2024-06-01T09:11:46.924708",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.7059592263460533\n"
     ]
    }
   ],
   "source": [
    "y_pred = tree.predict(x_test)\n",
    "\n",
    "accuracy = accuracy_score(y_test_encoded, y_pred)\n",
    "\n",
    "print(\"Accuracy:\", accuracy)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9e1158e7",
   "metadata": {
    "papermill": {
     "duration": 0.017921,
     "end_time": "2024-06-01T09:11:46.996430",
     "exception": false,
     "start_time": "2024-06-01T09:11:46.978509",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Test data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "0bdd28ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:47.034320Z",
     "iopub.status.busy": "2024-06-01T09:11:47.033899Z",
     "iopub.status.idle": "2024-06-01T09:11:47.268490Z",
     "shell.execute_reply": "2024-06-01T09:11:47.267414Z"
    },
    "papermill": {
     "duration": 0.256653,
     "end_time": "2024-06-01T09:11:47.271021",
     "exception": false,
     "start_time": "2024-06-01T09:11:47.014368",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_df = pd.read_csv('/kaggle/input/playground-series-s4e6/test.csv')\n",
    "\n",
    "test_df.columns = test_df.columns.str.replace(\"'\",\"\")\n",
    "\n",
    "# parenting\n",
    "test_df['Parents_occupation_sum'] = test_df['Mothers occupation'] + test_df['Fathers occupation']\n",
    "test_df['Parents_qualification_sum'] = test_df['Mothers qualification'] + test_df['Fathers qualification']\n",
    "\n",
    "test_df['Parents_qualification_sum'].replace(0, pd.NA, inplace=True)\n",
    "\n",
    "test_df['Occupation_Qualification_Ratio'] = test_df['Parents_occupation_sum'] /test_df['Parents_qualification_sum']\n",
    "\n",
    "test_df = test_df.drop(columns = [\n",
    "    'Parents_occupation_sum',\n",
    "    'Mothers occupation',\n",
    "    'Fathers occupation',\n",
    "    'Parents_qualification_sum',\n",
    "    'Mothers qualification',\n",
    "    'Fathers qualification'\n",
    "])\n",
    "\n",
    "\n",
    "# accadmics\n",
    "\n",
    "test_df['Overall_GPA'] = (test_df['Curricular units 1st sem (grade)'] + test_df['Curricular units 2nd sem (grade)']) / 2\n",
    "test_df['Total_Credits_Earned'] = test_df['Curricular units 1st sem (credited)'] + test_df['Curricular units 2nd sem (credited)']\n",
    "test_df['Overall_Pass_Rate'] = (test_df['Curricular units 1st sem (approved)'] + test_df['Curricular units 2nd sem (approved)']) / (test_df['Curricular units 1st sem (enrolled)'] + test_df['Curricular units 2nd sem (enrolled)'])\n",
    "test_df['Perf ind'] = test_df['Overall_GPA']/test_df['Overall_Pass_Rate']\n",
    "\n",
    "test_df = test_df.drop(columns = [\n",
    "       'Curricular units 1st sem (credited)',\n",
    "       'Curricular units 1st sem (enrolled)',\n",
    "       'Curricular units 1st sem (evaluations)',\n",
    "       'Curricular units 1st sem (approved)',\n",
    "       'Curricular units 1st sem (grade)',\n",
    "       'Curricular units 1st sem (without evaluations)',\n",
    "       'Curricular units 2nd sem (credited)',\n",
    "       'Curricular units 2nd sem (enrolled)',\n",
    "       'Curricular units 2nd sem (evaluations)',\n",
    "       'Curricular units 2nd sem (approved)',\n",
    "       'Curricular units 2nd sem (grade)',\n",
    "       'Curricular units 2nd sem (without evaluations)',\n",
    "        'Overall_GPA',\n",
    "        'Total_Credits_Earned',\n",
    "        'Overall_Pass_Rate',\n",
    "])\n",
    "\n",
    "\n",
    "# drop irrelevent columns\n",
    "test_df = test_df.drop(columns = [\n",
    "     'Application mode', \n",
    "    'Application order',\n",
    "    'Previous qualification',\n",
    "    'Previous qualification (grade)', \n",
    "    'Nacionality', 'Admission grade',\n",
    "    'International', \n",
    "    'Unemployment rate',\n",
    "])\n",
    "test_df\n",
    "\n",
    "test_df['Perf ind'].fillna(0, inplace=True)\n",
    "\n",
    "test_df.replace([np.inf, -np.inf], 0, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "cf5a281d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:47.309711Z",
     "iopub.status.busy": "2024-06-01T09:11:47.309330Z",
     "iopub.status.idle": "2024-06-01T09:11:47.327973Z",
     "shell.execute_reply": "2024-06-01T09:11:47.327020Z"
    },
    "papermill": {
     "duration": 0.040768,
     "end_time": "2024-06-01T09:11:47.330254",
     "exception": false,
     "start_time": "2024-06-01T09:11:47.289486",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_pred = tree.predict(test_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "4ea0ff06",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:47.368372Z",
     "iopub.status.busy": "2024-06-01T09:11:47.367238Z",
     "iopub.status.idle": "2024-06-01T09:11:47.398612Z",
     "shell.execute_reply": "2024-06-01T09:11:47.397576Z"
    },
    "papermill": {
     "duration": 0.052554,
     "end_time": "2024-06-01T09:11:47.400799",
     "exception": false,
     "start_time": "2024-06-01T09:11:47.348245",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>76518</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>76519</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>76520</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>76521</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>76522</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51007</th>\n",
       "      <td>127525</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51008</th>\n",
       "      <td>127526</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51009</th>\n",
       "      <td>127527</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51010</th>\n",
       "      <td>127528</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51011</th>\n",
       "      <td>127529</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>51012 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           id    Target\n",
       "0       76518  Graduate\n",
       "1       76519  Graduate\n",
       "2       76520  Graduate\n",
       "3       76521  Graduate\n",
       "4       76522  Graduate\n",
       "...       ...       ...\n",
       "51007  127525  Graduate\n",
       "51008  127526  Graduate\n",
       "51009  127527  Graduate\n",
       "51010  127528  Graduate\n",
       "51011  127529  Graduate\n",
       "\n",
       "[51012 rows x 2 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "subs = pd.read_csv('/kaggle/input/playground-series-s4e6/sample_submission.csv')\n",
    "subs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "92383777",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:47.438562Z",
     "iopub.status.busy": "2024-06-01T09:11:47.438156Z",
     "iopub.status.idle": "2024-06-01T09:11:47.444365Z",
     "shell.execute_reply": "2024-06-01T09:11:47.443478Z"
    },
    "papermill": {
     "duration": 0.027439,
     "end_time": "2024-06-01T09:11:47.446422",
     "exception": false,
     "start_time": "2024-06-01T09:11:47.418983",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 0, ..., 0, 0, 0])"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "7b34b4ce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:47.484277Z",
     "iopub.status.busy": "2024-06-01T09:11:47.483876Z",
     "iopub.status.idle": "2024-06-01T09:11:47.492849Z",
     "shell.execute_reply": "2024-06-01T09:11:47.491863Z"
    },
    "papermill": {
     "duration": 0.030673,
     "end_time": "2024-06-01T09:11:47.495121",
     "exception": false,
     "start_time": "2024-06-01T09:11:47.464448",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Dropout', 'Enrolled', 'Dropout', ..., 'Dropout', 'Dropout',\n",
       "       'Dropout'], dtype=object)"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Reverse the encoding to convert numeric predictions back into original string labels\n",
    "y_pred_original = label_encoder.inverse_transform(test_pred)\n",
    "y_pred_original"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a4f0c1f1",
   "metadata": {
    "papermill": {
     "duration": 0.018094,
     "end_time": "2024-06-01T09:11:47.533053",
     "exception": false,
     "start_time": "2024-06-01T09:11:47.514959",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "d73cc4a1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:47.571987Z",
     "iopub.status.busy": "2024-06-01T09:11:47.571077Z",
     "iopub.status.idle": "2024-06-01T09:11:47.576438Z",
     "shell.execute_reply": "2024-06-01T09:11:47.575526Z"
    },
    "papermill": {
     "duration": 0.026994,
     "end_time": "2024-06-01T09:11:47.578454",
     "exception": false,
     "start_time": "2024-06-01T09:11:47.551460",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "subs['Target'] = y_pred_original"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "67b60a1c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:47.617546Z",
     "iopub.status.busy": "2024-06-01T09:11:47.617117Z",
     "iopub.status.idle": "2024-06-01T09:11:47.686402Z",
     "shell.execute_reply": "2024-06-01T09:11:47.685513Z"
    },
    "papermill": {
     "duration": 0.092174,
     "end_time": "2024-06-01T09:11:47.689031",
     "exception": false,
     "start_time": "2024-06-01T09:11:47.596857",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "subs.to_csv('submission.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "8ebc14a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T09:11:47.728060Z",
     "iopub.status.busy": "2024-06-01T09:11:47.727688Z",
     "iopub.status.idle": "2024-06-01T09:11:47.738794Z",
     "shell.execute_reply": "2024-06-01T09:11:47.737593Z"
    },
    "papermill": {
     "duration": 0.033162,
     "end_time": "2024-06-01T09:11:47.740885",
     "exception": false,
     "start_time": "2024-06-01T09:11:47.707723",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>76518</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>76519</td>\n",
       "      <td>Enrolled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>76520</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>76521</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>76522</td>\n",
       "      <td>Enrolled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51007</th>\n",
       "      <td>127525</td>\n",
       "      <td>Graduate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51008</th>\n",
       "      <td>127526</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51009</th>\n",
       "      <td>127527</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51010</th>\n",
       "      <td>127528</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51011</th>\n",
       "      <td>127529</td>\n",
       "      <td>Dropout</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>51012 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           id    Target\n",
       "0       76518   Dropout\n",
       "1       76519  Enrolled\n",
       "2       76520   Dropout\n",
       "3       76521   Dropout\n",
       "4       76522  Enrolled\n",
       "...       ...       ...\n",
       "51007  127525  Graduate\n",
       "51008  127526   Dropout\n",
       "51009  127527   Dropout\n",
       "51010  127528   Dropout\n",
       "51011  127529   Dropout\n",
       "\n",
       "[51012 rows x 2 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "subs"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 8710574,
     "sourceId": 73290,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30715,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 12.763567,
   "end_time": "2024-06-01T09:11:48.381421",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-01T09:11:35.617854",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
